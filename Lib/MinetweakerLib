## MinetweakerLib
/* Defines many, many variables for Minetweaker.
Is a must for any PhoenixConfig scripts to run.
Is not done yet. Many more mods to document. */

##Archimedes' Ships
##I can't stand String
val shipHelm = <ArchimedesShips:marker>;
val floater = <ArchimedesShips:floater>;
val gaugeBasic = <ArchimedesShips:gauge>;
val gaugeAdvanced = <ArchimedesShips:gauge:1>;
val seatPassenger = <ArchimedesShips:seat>;
val bufferShore = <ArchimedesShips:buffer>;
val engineSteam = <ArchimedesShips:engine>;
val crateWood = <ArchimedesShips:crate_wood>;

##Archimedes' Ships Balloons
val balloonWhite = <ArchimedesShips:balloon>;
val balloonOrange = <ArchimedesShips:balloon:1>;
val balloonMagenta = <ArchimedesShips:balloon:2>;
val balloonBlueLight = <ArchimedesShips:balloon:3>;
val balloonYellow = <ArchimedesShips:balloon:4>;
val balloonLime = <ArchimedesShips:balloon:5>;
val balloonPink = <ArchimedesShips:balloon:6>;
val balloonGray = <ArchimedesShips:balloon:7>;
val balloonSilver = <ArchimedesShips:balloon:8>;
val balloonCyan = <ArchimedesShips:balloon:9>;
val balloonPurple = <ArchimedesShips:balloon:10>;
val balloonBlue = <ArchimedesShips:balloon:11>;
val balloonBrown = <ArchimedesShips:balloon:12>;
val balloonGreen = <ArchimedesShips:balloon:13>;
val balloonRed = <ArchimedesShips:balloon:14>;
val balloonBlack = <ArchimedesShips:balloon:15>;
val allBalloons = <ArchimedesShips:balloon:*>;

##Blood Magic
val bloodRune = <AWWayofTime:AlchemicalWizardrybloodRune>;
val crucibleFire = <AWWayofTime:AlchemicalWizardrytile.blockSpellEffect>;
val unstableSpellEmpowerer = <AWWayofTime:AlchemicalWizardrytile.blockSpellEnhancement>;
val defaultSpellModifier = <AWWayofTime:AlchemicalWizardrytile.blockSpellModifier>;
val particleGenerator = <AWWayofTime:AlchemicalWizardrytile.blockSpellParadigm>;
val bloodAltar = <AWWayofTime:Altar>;
val weakActivationCrystal = <AWWayofTime:activationCrystal>;
val aether = <AWWayofTime:aether>;
val airScribeTool =  <AWWayofTime:airScribeTool>;
val airSigil = <AWWayofTime:airSigil>;
val potionFlask = <AWWayofTime:alchemyFlask>;
val apprenticeBloodOrb = <AWWayofTime:apprenticeBloodOrb>;
val aquasalus = <AWWayofTime:aquasalus>;
val archmageBloodOrb = <AWWayofTime:archmageBloodOrb>;
val armourForge = <AWWayofTime:armourForge>;
val armourInhibitor = <AWWayofTime:armourInhibitor>;
val averageLengtheningCatalyst = <AWWayofTime:averageLengtheningCatalyst>;
val averagePowerCatalyst = <AWWayofTime:averagePowerCatalyst>;
val blankSlate = <AWWayofTime:blankSlate>;
val unboundSpellCrystal = <AWWayofTime:blankSpell>;
val blockSpellConduit = <AWWayofTime:blockConduit>;
val spellTable = <AWWayofTime:blockHomHeart>;
val arcanePedestal = <AWWayofTime:blockPedestal>;
val arcanePlinth = <AWWayofTime:blockPlinth>;
val schematicSaver = <AWWayofTime:blockSchemSaver>;
val teleposer = <AWWayofTime:blockTeleposer>;
val alchemicChemistrySet = <AWWayofTime:blockWritingTable>;
val bloodLight = <AWWayofTime:bloodLight>;
val offensa = <AWWayofTime:bloodMagicBaseAlchemyItems>;
val quartzRod = <AWWayofTime:bloodMagicBaseItems>;
val filledSocket = <AWWayofTime:bloodSocket>;
val bloodStoneBrick = <AWWayofTime:bloodStoneBrick>;
val boundAxe = <AWWayofTime:boundAxe>;
val boundBoots = <AWWayofTime:boundBoots>;
val boundHelmet = <AWWayofTime:boundHelmet>;
val boundLeggings = <AWWayofTime:boundLeggings>;
val boundPickaxe = <AWWayofTime:boundPickaxe>;
val boundPlate = <AWWayofTime:boundPlate>;
val boundShovel = <AWWayofTime:boundShovel>;
val bucketLife = <AWWayofTime:bucketLife>;
val testingOrb = <AWWayofTime:creativeFiller>;
val crepitous = <AWWayofTime:crepitous>;
val crystallos = <AWWayofTime:crystallos>;
val dynamicMace = <AWWayofTime:customTool>;
val daggerSacrifice = <AWWayofTime:daggerOfSacrifice>;
val demonBloodShard = <AWWayofTime:demonBloodShard>;
val demonPlacer = <AWWayofTime:demonPlacer>;
val demonPortalMain = <AWWayofTime:demonPortalMain>;
val demonicSlate = <AWWayofTime:demonicSlate>;
val demonicTelepositionFocus = <AWWayofTime:demonicTelepositionFocus>;
val divinationSigil = <AWWayofTime:divinationSigil>;
val duskScribeTool= <AWWayofTime:duskScribeTool>;
val earthScribeTool = <AWWayofTime:earthScribeTool>;
val efficiencyRune = <AWWayofTime:efficiencyRune>;
val emptySocket = <AWWayofTime:emptySocket>;
val energyBazooka = <AWWayofTime:energyBazooka>;
val energyBlaster = <AWWayofTime:energyBlaster>;
val boundBlade = <AWWayofTime:energySword>;
val enhancedFillingAgent = <AWWayofTime:enhancedFillingAgent>;
val enhancedTelepositionFocus = <AWWayofTime:enhancedTelepositionFocus>;
val fireScribeTool = <AWWayofTime:fireScribeTool>;
val fluidSigil = <AWWayofTime:fluidSigil>;
val greaterLengtheningCatalyst = <AWWayofTime:greaterLengtheningCatalyst>;
val greaterPowerCatalyst = <AWWayofTime:greaterPowerCatalyst>;
val growthSigil = <AWWayofTime:growthSigil>;
val imbuedSlate = <AWWayofTime:imbuedSlate>;
val imperfectRitualStone = <AWWayofTime:imperfectRitualStone>;
val incendium  = <AWWayofTime:incendium>;
val itemBloodLightSigil  = <AWWayofTime:itemBloodLightSigil>;
val itemComplexSpellCrystal = <AWWayofTime:itemComplexSpellCrystal>;
val keyBinding = <AWWayofTime:itemKeyOfDiablo>;
val itemRitualDiviner = <AWWayofTime:itemRitualDiviner>;
val largeBloodStoneBrick = <AWWayofTime:largeBloodStoneBrick>;
val lavaCrystal = <AWWayofTime:lavaCrystal>;
val lavaSigil = <AWWayofTime:lavaSigil>;
val lifeEssence = <AWWayofTime:lifeEssence>;
val magicales = <AWWayofTime:magicales>;
val magicianBloodOrb = <AWWayofTime:magicianBloodOrb>;
val masterBloodOrb = <AWWayofTime:masterBloodOrb>;
val masterRitualStone = <AWWayofTime:masterStone>;
val mundaneLengtheningCatalyst = <AWWayofTime:mundaneLengtheningCatalyst>;
val mundanePowerCatalyst = <AWWayofTime:mundanePowerCatalyst>;
val reinforcedSlate = <AWWayofTime:reinforcedSlate>;
val reinforcedTelepositionFocus = <AWWayofTime:reinforcedTelepositionFocus>;
val ritualStone = <AWWayofTime:ritualStone>;
val runeOfSacrifice = <AWWayofTime:runeOfSacrifice>;
val runeOfSelfSacrifice = <AWWayofTime:runeOfSelfSacrifice>;
val sacrificialKnife = <AWWayofTime:sacrificialKnife>;
val sanctus = <AWWayofTime:sanctus>;
val sigilSight = <AWWayofTime:seerSigil>;
val sigilOfElementalAffinity = <AWWayofTime:sigilOfElementalAffinity>;
val sigilOfEnderSeverance = <AWWayofTime:sigilOfEnderSeverance>;
val sigilOfHaste = <AWWayofTime:sigilOfHaste>;
val sigilOfHolding = <AWWayofTime:sigilOfHolding>;
val sigilOfMagnetism = <AWWayofTime:sigilOfMagnetism>;
val sigilOfSupression = <AWWayofTime:sigilOfSupression>;
val sigilOfThePhantomBridge = <AWWayofTime:sigilOfTheBridge>;
val sigilOfTheFastMiner = <AWWayofTime:sigilOfTheFastMiner>;
val sigilOfWhirlwind = <AWWayofTime:sigilOfWind>;
val simpleCatalyst = <AWWayofTime:simpleCatalyst>;
val spectralBlock = <AWWayofTime:spectralBlock>;
val spectralContainer = <AWWayofTime:spectralContainer>;
val speedRune = <AWWayofTime:speedRune>;
val standardBindingAgent = <AWWayofTime:standardBindingAgent>;
val standardFillingAgent = <AWWayofTime:standardFillingAgent>;
val telepositionFocus = <AWWayofTime:telepositionFocus>;
val tennebrae = <AWWayofTime:tennebrae>;
val terrae = <AWWayofTime:terrae>;
val voidSigil = <AWWayofTime:voidSigil>;
val waterScribeTool = <AWWayofTime:waterScribeTool>;
val waterSigil = <AWWayofTime:waterSigil>;
val weakBindingAgent = <AWWayofTime:weakBindingAgent>;
val weakBloodOrb = <AWWayofTime:weakBloodOrb>;
val weakBloodShard = <AWWayofTime:weakBloodShard>;
val weakFillingAgent = <AWWayofTime:weakFillingAgent>;

##Botania
val alchemyCatalyst = <Botania:alchemyCatalyst>;
val elvenGatewayCore = <Botania:alfheimPortal>;
val petalApothecary = <Botania:altar>;
val bandAura = <Botania:auraRing>;
val gereaterBandAura = <Botania:auraRingGreater>;
val rodBifrost = <Botania:bifrost>;
val buriedPetals = <Botania:buriedPetals>;
val conjurationCatalyst = <Botania:conjurationCatalyst>;
val hellishBrick = <Botania:customBrick>;
val hellishBrickSlab = <Botania:customBrick0Slab>;
val hellishBrickSlabFull = <Botania:customBrick0SlabFull>;
val hellishBrickStairs = <Botania:customBrick0Stairs>;
val soulBrickSlab = <Botania:customBrick1Slab>;
val soulBrickSlabFull = <Botania:customBrick1SlabFull> ;
val soulBrickStairs = <Botania:customBrick1Stairs>;
val frostyBrickSlab = <Botania:customBrick2Slab>;
val frostyBrickSlabFull = <Botania:customBrick2SlabFull>;
val frostyBrickStairs = <Botania:customBrick2Stairs>;
val roofTileSlab = <Botania:customBrick3Slab> ;
val roofTileSlabFull = <Botania:customBrick3SlabFull>;
val roofTileStairs = <Botania:customBrick3Stairs>;
val rodLands = <Botania:dirtRod>;
val manaDistributor = <Botania:distributor>;
val divaCharm = <Botania:divaCharm>;
val dreamwood = <Botania:dreamwood>;
val dreamwoodSlab = <Botania:dreamwood0Slab>;
val dreamwoodSlabFull = <Botania:dreamwood0SlabFull>;
val dreamwoodStairs = <Botania:dreamwood0Stairs>;
val dreamwoodPlankSlab = <Botania:dreamwood1Slab>;
val dreamwoodPlankSlabFull = <Botania:dreamwood1SlabFull>;
val dreamwoodPlankStairs = <Botania:dreamwood1Stairs>;
val floralPowder = <Botania:dye>;
val elementiumAxe = <Botania:elementiumAxe>;
val elementiumBoots = <Botania:elementiumBoots>;
val elementiumChestplate = <Botania:elementiumChest>;
val elementiumHelmet = <Botania:elementiumHelm>;
val elementiumHelmetRevealing = <Botania:elementiumHelmReveal>;
val elementiumLeggings = <Botania:elementiumLegs>;
val elementiumPick = <Botania:elementiumPick>;
val elementiumShears = <Botania:elementiumShears>;
val elementiumShovel = <Botania:elementiumShovel>;
val elementiumSword = <Botania:elementiumSword> ;
val manaEnchanter = <Botania:enchanter>;
val soulscribe = <Botania:enderDagger>;
val enderOverseer = <Botania:enderEyeBlock>;
val enderHand = <Botania:enderHand>;
val floralFertilier = <Botania:fertilizer>;
val hellRod = <Botania:fireRod>;
val flugelTiara = <Botania:flightTiara>;
val mysticalFlower = <Botania:flower>;
val drumWild = <Botania:forestDrum>;
val eyeAncients = <Botania:forestEye>;
val goldenLaurel = <Botania:goldenLaurel>;
val hornWild = <Botania:grassHorn>;
val pastureSeeds = <Botania:grassSeeds>;
val snowflakePendant = <Botania:icePendant>;
val spectator = <Botania:itemFinder>;
val tectonicGirdle = <Botania:knockbackBelt>;
val laputaShard =  <Botania:laputaShard>;
val pyroclastPendant = <Botania:lavaPendant>;
val manaLens =  <Botania:lens>;
val lexicaBotania = <Botania:lexicon>;
val livingrock = <Botania:livingrock>;
val livingrockSlab = <Botania:livingrock0Slab>;
val livingrockSlabFull = <Botania:livingrock0SlabFull>;
val livingrockStairs = <Botania:livingrock0Stairs>;
val livingrockBrickSlab = <Botania:livingrock1Slab>;
val livingrockBrickSlabFull = <Botania:livingrock1SlabFull>;
val livingrockBrickStairs = <Botania:livingrock1Stairs>;
val livingwood = <Botania:livingwood>;
val livingwoodSlab = <Botania:livingwood0Slab>;
val livingwoodSlabFull = <Botania:livingwood0SlabFull>;
val livingwoodStairs = <Botania:livingwood0Stairs>;
val livingwoodPlank = <Botania:livingwood:1>;
val livingwoodPlanksSlab = <Botania:livingwood1Slab>;
val livingwoodPlanksSlabFull = <Botania:livingwood1SlabFull>;
val livingwoodPlanksStairs = <Botania:livingwood1Stairs>;
val magnetRing = <Botania:magnetRing>;
val unstableBeacon = <Botania:manaBeacon>;
val manaBottle = <Botania:manaBottle>;
val manaCookie =  <Botania:manaCookie>;
val manaDetector = <Botania:manaDetector>;
val manaBlaster = <Botania:manaGun>;
val manaMirror = <Botania:manaMirror>;
val manaSteelIngot = <Botania:manaResource>;
val manaPearl = <Botania:manaResource:1>;
val manaDiamond = <Botania:manaResource:2>;
val livingwoodTwig = <Botania:manaResource:3>;
val terrasteelIngot = <Botania:manaResource:4>;
val gaiaSpirit = <Botania:manaResource:5>;
val redstoneRoot = <Botania:manaResource:6>;
val elementiumIngot = <Botania:manaResource:7>;
val pixieDust = <Botania:manaResource:8>;
val dragonStone = <Botania:manaResource:9>;
val prismarineShard = <Botania:manaResource:10>;
val craftingPlaceholder = <Botania:manaResource:11>;
val manaRing = <Botania:manaRing>;
val greaterManaRing = <Botania:manaRingGreater>;
val manaTablet = <Botania:manaTablet>;
val manaVoid = <Botania:manaVoid>;
val manasteelAxe = <Botania:manasteelAxe>;
val manasteelBoots = <Botania:manasteelBoots>;
val manasteelChestplate = <Botania:manasteelChest>;
val manasteelHelmet = <Botania:manasteelHelm>;
val manasteelHelmetRevealing = <Botania:manasteelHelmReveal>;
val manasteelLeggings = <Botania:manasteelLegs>;
val manasteelPick = <Botania:manasteelPick>;
val manasteelShears = <Botania:manasteelShears>;
val manasteelShovel = <Botania:manasteelShovel>;
val manasteelSword = <Botania:manasteelSword>;
val floatingFlower = <Botania:miniIsland>;
val ringMantle = <Botania:miningRing>;
val extrapolatedBucket = <Botania:openBucket>;
val openCrate = <Botania:openCrate>;
val pestleAndMortar = <Botania:pestleAndMortar>;
val forceRelay = <Botania:pistonRelay>;
val greatFairyRing = <Botania:pixieRing>;
val abstrusePlatform = <Botania:platform>;
val prismarine = <Botania:prismarine>;
val prismarineSlab = <Botania:prismarine0Slab>;
val prismarineSlabFull = <Botania:prismarine0SlabFull>;
val prismarineStairs = <Botania:prismarine0Stairs>;
val prismarineBrickSlab = <Botania:prismarine1Slab>;
val prismarineBrickSlabFull = <Botania:prismarine1SlabFull>;
val prismarineBrickStairs = <Botania:prismarine1Stairs>;
val darkPrismarineSlab = <Botania:prismarine2Slab>;
val darkPrismarineSlabFull = <Botania:prismarine2SlabFull> ;
val darkPrismarineStairs = <Botania:prismarine2Stairs>;
val manaPylon = <Botania:pylon>;
val smokyQuartz = <Botania:quartz>;
val blazeQuartzSlabFull = <Botania:quartzSlabBlazeFull>;
val blazeQuartzSlab = <Botania:quartzSlabBlazeHalf>;
val smokeyQuartzSlabFull = <Botania:quartzSlabDarkFull>;
val smokeyQuartzSlab = <Botania:quartzSlabDarkHalf>;
val elfQuartzSlabFull = <Botania:quartzSlabElfFull>;
val elfQuartzSlab = <Botania:quartzSlabElfHalf>;
val lavenderQuartzSlabFull = <Botania:quartzSlabLavenderFull>;
val lavenderQuartzSlab = <Botania:quartzSlabLavenderHalf>;
val manaQuartzSlabFull = <Botania:quartzSlabManaFull>;
val manaQuartzSlab = <Botania:quartzSlabManaHalf>;
val redQuartzSlabFull = <Botania:quartzSlabRedFull>;
val redQuartzSlab = <Botania:quartzSlabRedHalf>;
val blazeQuartzStairs = <Botania:quartzStairsBlaze>;
val smokeyQuartzStairs = <Botania:quartzStairsBlaze>;	
val elfQuartzStairs = <Botania:quartzStairsElf>;
val lavenderQuartzStairs = <Botania:quartzStairsLavender>;
val manaQuartzStairs = <Botania:quartzStairsMana>;
val redQuartzStairs = <Botania:quartzStairsRed>;
val blazeQuartzBlock = <Botania:quartzTypeBlaze>;
val smokeyQuartzBlock = <Botania:quartzTypeDark>;
val elfQuartzBlock = <Botania:quartzTypeDark>;
val lavenderQuartzBlock = <Botania:quartzTypeLavender>;
val manaQuartzBlock = <Botania:quartzTypeMana>;
val redQuartzBlock = <Botania:quartzTypeRed>;
val rainbowRod = <Botania:rainbowRod>;
val farReachRing = <Botania:reachRing>;
val reedBlock = <Botania:reedBlock>;
val reedSlab = <Botania:reedBlock0Slab>;
val reedSlabFull = <Botania:reedBlock0SlabFull>;
val reedStairs = <Botania:reedBlock0Stairs>;
val rune = <Botania:rune>;
val runicAltar = <Botania:runeAltar>;
val seaLantern = <Botania:seaLamp>;
val terrasteelBlock = <Botania:storage:1>;
val glimmeringFlower = <Botania:shinyFlower>;
val signalFlare = <Botania:signalFlare>;
val rodHighlands = <Botania:skyDirtRod>;
val slingshot = <Botania:slingshot>;
val solidVine = <Botania:solidVine>;
val lifeImbuer = <Botania:spawnerClaw>;
val lifeAggregator = <Botania:spawnerMover>;
val botaniaFlower = <Botania:specialFlower>;
val manaSpreader = <Botania:spreader>;
val crimsonPendant = <Botania:superLavaPendant>;
val globetrotterSash = <Botania:superTravelBelt>;
val terraPick = <Botania:terraPick>;
val terraSword = <Botania:terraSword>;
val terrafirmaRod = <Botania:terraformRod>;
val terrasteelBoots = <Botania:terrasteelBoots>;
val terrasteelChestplate = <Botania:terrasteelChest>;
val terrasteelHelmet = <Botania:terrasteelHelm>;
val terrasteelHelmetRevealing = <Botania:terrasteelHelmReveal>;
val terrasteelLegs = <Botania:terrasteelLegs>;
val thatch = <Botania:thatch>;
val thatchSlab = <Botania:thatch0Slab>;
val thatchSlabFull = <Botania:thatch0SlabFull>;
val thatchStairs = <Botania:thatch0Stairs>;
val tinyPlanet = <Botania:tinyPlanet>;
val tinyPlanetBlock = <Botania:tinyPlanetBlock>;
val tinyPotato = <Botania:tinyPotato>;
val skiesRod = <Botania:tornadoRod>;
val soujournersSash = <Botania:travelBelt>;
val turntable = <Botania:turntable>;
val wandForest = <Botania:twigWand>;
val unstableCube = <Botania:unstableBlock>;
val vineBall = <Botania:vineBall>;
val necrodermalVirus = <Botania:virus>;
val chordataRing = <Botania:waterRing>;
val seasRod = <Botania:waterRod>;

##BTN Flora
val jadedAmaranthus = <Botania:specialFlower>.withTag({type: "jadedAmaranthus"});
val endoFlame = <Botania:specialFlower>.withTag({type: "endoflame"});
val pureDaisy = <Botania:specialFlower>.withTag({type: "puredaisy"});
val manaStar = <Botania:specialFlower>.withTag({type: "manastar"});
val dayBloom = <Botania:specialFlower>.withTag({type: "daybloom"});
val nightShade = <Botania:specialFlower>.withTag({type: "nightshade"});
val thermaLily = <Botania:specialFlower>.withTag({type: "thermalily"});
val rosaArcana = <Botania:specialFlower>.withTag({type: "arcanerose"});
val munchDew = <Botania:specialFlower>.withTag({type: "munchdew"});
val entropinnyum = <Botania:specialFlower>.withTag({type: "entropinnyum"});
val kekimurus = <Botania:specialFlower>.withTag({type: "kekimurus"});
val gourmaryllis = <Botania:specialFlower>.withTag({type: "gourmaryllis"});
val belleThorn = <Botania:specialFlower>.withTag({type: "bellethorn"});
val dreadThorn = <Botania:specialFlower>.withTag({type: "dreadthorn"});
val heiseiDream = <Botania:specialFlower>.withTag({type: "heiseiDream"});
val tigersEye = <Botania:specialFlower>.withTag({type: "tigerseye"});
val oreChid = <Botania:specialFlower>.withTag({type: "orechid"});
val exoFlame = <Botania:specialFlower>.withTag({type: "exoflame"});
val agricarnation = <Botania:specialFlower>.withTag({type: "agricarnation"});
val hopperHock = <Botania:specialFlower>.withTag({type: "hopperhock"});
val rennuncarpus = <Botania:specialFlower>.withTag({type: "rannuncarpus"});
val tangleBerrie = <Botania:specialFlower>.withTag({type: "tangleberrie"});
val jiyuulia = <Botania:specialFlower>.withTag({type: "jiyuulia"});
val hyacidus = <Botania:specialFlower>.withTag({type: "hyacidus"});
val pollidisiac = <Botania:specialFlower>.withTag({type: "pollidisiac"});
val clayConia = <Botania:specialFlower>.withTag({type: "clayconia"});
val loonium = <Botania:specialFlower>.withTag({type: "loonium"});
val daffomill = <Botania:specialFlower>.withTag({type: "daffomill"});
val vinculotus = <Botania:specialFlower>.withTag({type: "vinculotus"});
val hydroangeas = <Botania:specialFlower>.withTag({type: "hydroangeas"});
val fallenKanade = <Botania:specialFlower>.withTag({type: "fallenKanade"});

##BTN Petals
val whiteMysticalPetal = <Botania:petal>;
val orangeMysticalPetal = <Botania:petal:1>;
val magentaMysticalPetal = <Botania:petal:2>;
val lightBlueMysticalPetal = <Botania:petal:3>;
val yellowMysticalPetal = <Botania:petal:4>;
val limeMysticalPetal = <Botania:petal:5>;
val pinkMysticalPetal = <Botania:petal:6>;
val grayMysticalPetal = <Botania:petal:7>;
val lightGrayMysticalPetal = <Botania:petal:8>;
val cyanMysticalPetal = <Botania:petal:9>;
val purpleMysticalPetal = <Botania:petal:10>;
val blueMysticalPetal = <Botania:petal:11>;
val brownMysticalPetal = <Botania:petal:12>;
val greenMysticalPetal = <Botania:petal:13>;
val redMysticalPetal = <Botania:petal:14>;
val blackMysticalPetal = <Botania:petal:15>;
val allMysticalPetals = <Botania:petal:*>;

##BTN Mana Petals
val whiteManaPetal = <Botania:manaPetal>;
val orangeManaPetal = <Botania:manaPetal:1>;
val magentaManaPetal = <Botania:manaPetal:2>;
val lightBlueManaPetal = <Botania:manaPetal:3>;
val yellowManaPetal = <Botania:manaPetal:4>;
val limeManaPetal = <Botania:manaPetal:5>;
val pinkManaPetal = <Botania:manaPetal:6>;
val grayManaPetal = <Botania:manaPetal:7>;
val lightGrayManaPetal = <Botania:manaPetal:8>;
val cyanManaPetal = <Botania:manaPetal:9>;
val purpleManaPetal = <Botania:manaPetal:10>;
val blueManaPetal = <Botania:manaPetal:11>;
val brownManaPetal = <Botania:manaPetal:12>;
val greenManaPetal = <Botania:manaPetal:13>;
val redManaPetal = <Botania:manaPetal:14>;
val blackManaPetal = <Botania:manaPetal:15>;
val allManaPetals = <Botania:manaPetal:*>;

##BTN Runes
val runeOfWater = <Botania:rune>;
val runeOfFire = <Botania:rune:1>;
val runeOfEarth = <Botania:rune:2>;
val runeOfAir = <Botania:rune:3>;
val runeOfSpring = <Botania:rune:4>;
val runeOfSummer = <Botania:rune:5>;
val runeOfAutumn = <Botania:rune:6>;
val runeOfWinter = <Botania:rune:7>;
val runeOfMana = <Botania:rune:8>;
val runeOfLust = <Botania:rune:9>;
val runeOfGluttony = <Botania:rune:10>;
val runeOfGreed = <Botania:rune:11>;
val runeOfSloth = <Botania:rune:12>;
val runeOfWrath = <Botania:rune:13>;
val runeOfEnvy = <Botania:rune:14>;
val runeOfPride = <Botania:rune:15>;
val allBTNRunes = <Botania:rune:*>;

##BTN Dyes
val whiteBTNDye = <Botania:dye>;
val orangeBTNDye = <Botania:dye:1>;
val magentaBTNDye = <Botania:dye:2>;
val lightBlueBTNDye = <Botania:dye:3>;
val yellowBTNDye = <Botania:dye:4>;
val limeBTNDye = <Botania:dye:5>;
val pinkBTNDye = <Botania:dye:6>;
val grayBTNDye = <Botania:dye:7>;
val lightGrayBTNDye = <Botania:dye:8>;
val cyanBTNDye = <Botania:dye:9>;
val purpleBTNDye = <Botania:dye:10>;
val blueBTNDye = <Botania:dye:11>;
val brownBTNDye = <Botania:dye:12>;
val greenBTNDye = <Botania:dye:13>;
val redBTNDye = <Botania:dye:14>;
val blackBTNDye = <Botania:dye:15>;
val allBTNDyes = <Botania:dye:*>;

##BuildCraft
val architectTable = <BuildCraft|Builders:architectBlock>;
val blueprint = <BuildCraft|Builders:blueprintItem>;
val builder = <BuildCraft|Builders:builderBlock>;
val filler = <BuildCraft|Builders:fillerBlock>;
val blueprintLibrary = <BuildCraft|Builders:libraryBlock>;
val landMark = <BuildCraft|Builders:markerBlock>;
val null = <BuildCraft|Builders:null>;
val pathMarker = <BuildCraft|Builders:pathMarkerBlock>;
val template = <BuildCraft|Builders:templateItem>;
val diamondGear =  <BuildCraft|Core:diamondGearItem>;
val eternalSpring = <BuildCraft|Core:eternalSpring>;
val goldGear = <BuildCraft|Core:goldGearItem> -- Gold Gear
val ironGear = <BuildCraft|Core:ironGearItem>;
val stoneGear =  <BuildCraft|Core:stoneGearItem>;
val woodGear = <BuildCraft|Core:woodenGearItem>;
val wrench = <BuildCraft|Core:wrenchItem>;
val fuel = <BuildCraft|Energy:blockFuel>;
val oil = <BuildCraft|Energy:blockOil>;
val redPlasma = <BuildCraft|Energy:blockRedPlasma>;
val fuelBucket = <BuildCraft|Energy:bucketFuel> ;
val oilBucket = <BuildCraft|Energy:bucketOil>;
val energyConverter = <BuildCraft|Energy:energyConverter>;
val engine = <BuildCraft|Energy:engineBlock>;
val autoWorkbench = <BuildCraft|Factory:autoWorkbenchBlock>;
val chute = <BuildCraft|Factory:blockHopper>;
val floodGate = <BuildCraft|Factory:floodGateBlock>;
val frame = <BuildCraft|Factory:frameBlock>;
val quarry = <BuildCraft|Factory:machineBlock>;
val miningWell = <BuildCraft|Factory:miningWellBlock>;
val miningPipe = <BuildCraft|Factory:plainPipeBlock>;
val pump = <BuildCraft|Factory:pumpBlock>;
val refinery = <BuildCraft|Factory:refineryBlock>;
val tank = <BuildCraft|Factory:tankBlock>;
val laser = <BuildCraft|Silicon:laserBlock>;
val assemblyTable = <BuildCraft|Silicon:null>;
val advancedCraftingTable = <BuildCraft|Silicon:null:1>;
val integrationTable = <BuildCraft|Silicon:null:2>;
val redstoneChipset = <BuildCraft|Silicon:redstoneChipset>;
val ironChipset = <BuildCraft|Silicon:redstoneChipset:1>;
val goldChipset = <BuildCraft|Silicon:redstoneChipset:2>;
val diamondChipset = <BuildCraft|Silicon:redstoneChipset:3>;
val pulsatingChipset = <BuildCraft|Silicon:redstoneChipset:4>;
val quartzChipset = <BuildCraft|Silicon:redstoneChipset:5>;
val redstoneCompChipset = <BuildCraft|Silicon:redstoneChipset:6>;
val filteredBuffer = <BuildCraft|Transport:filteredBufferBlock>;
val cobblestoneFluidPipe = <BuildCraft|Transport:item.buildcraftPipe.pipefluidscobblestone>;
val emeraldFluidPipe =  <BuildCraft|Transport:item.buildcraftPipe.pipefluidsemerald>;
val goldenFluidPipe = <BuildCraft|Transport:item.buildcraftPipe.pipefluidsgold>;
val ironFluidPipe = <BuildCraft|Transport:item.buildcraftPipe.pipefluidsiron>;
val sandstoneFluidPipe = <BuildCraft|Transport:item.buildcraftPipe.pipefluidssandstone>;
val stoneFluidPipe = <BuildCraft|Transport:item.buildcraftPipe.pipefluidsstone>;
val voidFluidPipe = <BuildCraft|Transport:item.buildcraftPipe.pipefluidsvoid>;
val woodFluidPipe = <BuildCraft|Transport:item.buildcraftPipe.pipefluidswood>;
val cobblestoneTransportPipe = <BuildCraft|Transport:item.buildcraftPipe.pipeitemscobblestone>;
val daizuliTransportPipe = <BuildCraft|Transport:item.buildcraftPipe.pipeitemsdaizuli>;
val diamondTranspotPipe = <BuildCraft|Transport:item.buildcraftPipe.pipeitemsdiamond>;
val emeraldTransportPipe = <BuildCraft|Transport:item.buildcraftPipe.pipeitemsemerald>;
val emzuliTransportPipe = <BuildCraft|Transport:item.buildcraftPipe.pipeitemsemzuli>;
val goldTransportPipe = <BuildCraft|Transport:item.buildcraftPipe.pipeitemsgold>;
val ironTransportPipe = <BuildCraft|Transport:item.buildcraftPipe.pipeitemsiron>;
val lazuliTransportPipe = <BuildCraft|Transport:item.buildcraftPipe.pipeitemslapis>;
val obsidianTransportPipe =  <BuildCraft|Transport:item.buildcraftPipe.pipeitemsobsidian>;
val quartzTransportPipe = <BuildCraft|Transport:item.buildcraftPipe.pipeitemsquartz>;
val sandstoneTransportPipe = <BuildCraft|Transport:item.buildcraftPipe.pipeitemssandstone>;
val stoneTransportPipe = <BuildCraft|Transport:item.buildcraftPipe.pipeitemsstone>;
val stripesTransportPipe = <BuildCraft|Transport:item.buildcraftPipe.pipeitemsstripes>;
val voidTransportPipe =  <BuildCraft|Transport:item.buildcraftPipe.pipeitemsvoid>;
val woodTransportPipe =  <BuildCraft|Transport:item.buildcraftPipe.pipeitemswood>;
val cobblestoneKinesisPipe = <BuildCraft|Transport:item.buildcraftPipe.pipepowercobblestone>;
val diamondKinesisPipe = <BuildCraft|Transport:item.buildcraftPipe.pipepowerdiamond>;
val goldenKinesisPipe = <BuildCraft|Transport:item.buildcraftPipe.pipepowergold>;
val ironKinesisPipe = <BuildCraft|Transport:item.buildcraftPipe.pipepoweriron>;
val quartzKinesisPipe = <BuildCraft|Transport:item.buildcraftPipe.pipepowerquartz>;
val stoneKinesisPipe = <BuildCraft|Transport:item.buildcraftPipe.pipepowerstone>;
val woodKinesisPipe = <BuildCraft|Transport:item.buildcraftPipe.pipepowerwood>;
val cobblestoneStructurePipe = <BuildCraft|Transport:item.buildcraftPipe.pipestructurecobblestone>;
val pipeBlock = <BuildCraft|Transport:pipeBlock>;
val facade = <BuildCraft|Transport:pipeFacade>;
val basicGate = <BuildCraft|Transport:pipeGate>;
val pipePlug = <BuildCraft|Transport:pipePlug>;
val pipeSealant = <BuildCraft|Transport:pipeWaterproof>;
val pipeWire = <BuildCraft|Transport:pipeWire>;

##Carpenter’s Blocks
val carpentersBarrier = <CarpentersBlocks:blockCarpentersBarrier>;
val carpentersBed = <CarpentersBlocks:blockCarpentersBed>;
val carpentersBlock = <CarpentersBlocks:blockCarpentersBlock>;
val carpentersButton = <CarpentersBlocks:blockCarpentersButton>
val collapsibleBlock = <CarpentersBlocks:blockCarpentersCollapsibleBlock>;
val carpentersDaylightSensor = <CarpentersBlocks:blockCarpentersDaylightSensor>;
val carpentersDoor = <CarpentersBlocks:blockCarpentersDoor>;
val carpentersFlowerPot = <CarpentersBlocks:blockCarpentersFlowerPot>;
val carpentersGate = <CarpentersBlocks:blockCarpentersGate>;
val carpentersHatch =  <CarpentersBlocks:blockCarpentersHatch>;
val carpentersLadder = <CarpentersBlocks:blockCarpentersLadder>;
val carpentersLever = <CarpentersBlocks:blockCarpentersLever>;
val carpentersPressurePlate = <CarpentersBlocks:blockCarpentersPressurePlate>;
val carpentersSafe = <CarpentersBlocks:blockCarpentersSafe>;
val carpentersSlope = <CarpentersBlocks:blockCarpentersSlope>;
val carpentersStairs =  <CarpentersBlocks:blockCarpentersStairs>;
val carpentersTorch = <CarpentersBlocks:blockCarpentersTorch>;
val itemCarpentersBed = <CarpentersBlocks:itemCarpentersBed>;
val carpentersChisel = <CarpentersBlocks:itemCarpentersChisel>;
val itemCarpentersDoor = <CarpentersBlocks:itemCarpentersDoor>;
val carpentersHammer = <CarpentersBlocks:itemCarpentersHammer>;
val carpentersTile = <CarpentersBlocks:itemCarpentersTile>;

##ComputerCraft
val ccCable = <ComputerCraft:CC-Cable>;
val ccComputer = <ComputerCraft:CC-Computer>;
val ccPeripheral = <ComputerCraft:CC-Peripheral>;
val ccTurtle = <ComputerCraft:CC-Turtle>; 
val ccTurtleAdvanced = <ComputerCraft:CC-TurtleAdvanced>;
val ccTurtleExpanded = <ComputerCraft:CC-TurtleExpanded>;
val disk = <ComputerCraft:disk>;
val diskExpanded = <ComputerCraft:diskExpanded>;
val pocketComputer = <ComputerCraft:pocketComputer>;
val printout = <ComputerCraft:printout>;
val treasureDisk = <ComputerCraft:treasureDisk>

##Ender Storage
val esEnderChest = <EnderStorage:enderChest>
val enderPouch = <EnderStorage:enderPouch>;

##Ender Chests
val enderChestWhite     = <EnderStorage:enderChest:0>;
val enderChestOrange    = <EnderStorage:enderChest:273>;
val enderChestMagenta   = <EnderStorage:enderChest:546>;
val enderChestLightBlue = <EnderStorage:enderChest:819>;
val enderChestYellow    = <EnderStorage:enderChest:1092>;
val enderChestLime      = <EnderStorage:enderChest:1365>;
val enderChestPink      = <EnderStorage:enderChest:1638>;
val enderChestGray      = <EnderStorage:enderChest:1911>;
val enderChestLightGray = <EnderStorage:enderChest:2184>;
val enderChestCyan      = <EnderStorage:enderChest:2457>;
val enderChestPurple    = <EnderStorage:enderChest:2730>;
val enderChestBlue      = <EnderStorage:enderChest:3003>;
val enderChestBrown     = <EnderStorage:enderChest:3276>;
val enderChestGreen     = <EnderStorage:enderChest:3549>;
val enderChestRed       = <EnderStorage:enderChest:3822>;
val enderChestBlack     = <EnderStorage:enderChest:4095>;

##Ender Pouches
val enderPouchWhite     = <EnderStorage:enderPouch:0>;
val enderPouchOrange    = <EnderStorage:enderPouch:273>;
val enderPouchMagenta   = <EnderStorage:enderPouch:546>;
val enderPouchLightBlue = <EnderStorage:enderPouch:819>;
val enderPouchYellow    = <EnderStorage:enderPouch:1092>;
val enderPouchLime      = <EnderStorage:enderPouch:1365>;
val enderPouchPink      = <EnderStorage:enderPouch:1638>;
val enderPouchGray      = <EnderStorage:enderPouch:1911>;
val enderPouchLightGray = <EnderStorage:enderPouch:2184>;
val enderPouchCyan      = <EnderStorage:enderPouch:2457>;
val enderPouchPurple    = <EnderStorage:enderPouch:2730>;
val enderPouchBlue      = <EnderStorage:enderPouch:3003>;
val enderPouchBrown     = <EnderStorage:enderPouch:3276>;
val enderPouchGreen     = <EnderStorage:enderPouch:3549>;
val enderPouchRed       = <EnderStorage:enderPouch:3822>;
val enderPouchBlack     = <EnderStorage:enderPouch:4095>;

##Ender Tanks
val enderTankWhite      = <EnderStorage:enderChest:4096>; 
val enderTankOrange     = <EnderStorage:enderChest:4369>; 
val enderTankMagenta    = <EnderStorage:enderChest:4642>;
val enderTankLightBlue  = <EnderStorage:enderChest:4915>;
val enderTankYellow     = <EnderStorage:enderChest:5188>;
val enderTankLime       = <EnderStorage:enderChest:5461>;
val enderTankPink       = <EnderStorage:enderChest:5734>;
val enderTankGray       = <EnderStorage:enderChest:6007>;
val enderTankLightGray  = <EnderStorage:enderChest:6280>;
val enderTankCyan       = <EnderStorage:enderChest:6553>;
val enderTankPurple     = <EnderStorage:enderChest:6826>;
val enderTankBlue       = <EnderStorage:enderChest:7099>;
val enderTankBrown      = <EnderStorage:enderChest:7372>;
val enderTankGreen      = <EnderStorage:enderChest:7645>;
val enderTankRed        = <EnderStorage:enderChest:7918>;
val enderTankBlack      = <EnderStorage:enderChest:8191>;

##ExtraUtilities
val angelBlock = <ExtraUtilities:angelBlock>;
val angelRing = <ExtraUtilities:angelRing>;
val bedrockiumIngot = <ExtraUtilities:bedrockiumIngot>;
val blockBedrockium = <ExtraUtilities:block_bedrockium>;
val budOff = <ExtraUtilities:budoff>;
val buildersWand = <ExtraUtilities:builderswand>;
val chandelier = <ExtraUtilities:chandelier>;
val cobblestoneCompressed = <ExtraUtilities:cobblestone_compressed>;
val colorStoneBrick = <ExtraUtilities:colorStoneBrick>;
val colorWoodPlanks = <ExtraUtilities:colorWoodPlanks>;
val conveyor = <ExtraUtilities:conveyor>;
val creativeBuildersWand = <ExtraUtilities:creativebuilderswand>;
val cursedEarthSide = <ExtraUtilities:cursedearthside>;
val curtains = <ExtraUtilities:curtains>;
val darkPortal = <ExtraUtilities:dark_portal>;
val dataBlock = <ExtraUtilities:datablock>;
val decorativeBlock1 = <ExtraUtilities:decorativeBlock1>;
val decorativeBlock2 = <ExtraUtilities:decorativeBlock2>;
val defoliageAxe = <ExtraUtilities:defoliageAxe>;
val destructionPickaxe = <ExtraUtilities:destructionpickaxe>;
val divisionSigil = <ExtraUtilities:divisionSigil>
val drum = <ExtraUtilities:drum>;
val endConstructor = <ExtraUtilities:endConstructor>;
val endMarker = <ExtraUtilities:endMarker>;
val  enderQuarry = <ExtraUtilities:enderQuarry>;
val enderThermicPump = <ExtraUtilities:enderThermicPump>;
val erosionShovel = <ExtraUtilities:erosionShovel>;
val etherealGlass = <ExtraUtilities:etherealglass>;
val ethericSword = <ExtraUtilities:ethericsword>;
val extractorBase = <ExtraUtilities:extractor_base>;
val extractorBaseRemote = <ExtraUtilities:extractor_base_remote>;
val filing = <ExtraUtilities:filing>;
val generator = <ExtraUtilities:generator>;
val generator64 = <ExtraUtilities:generator.64>;
val generator8 = <ExtraUtilities:generator.8>;
val goldenBag = <ExtraUtilities:golden_bag>;
val goldenLasso = <ExtraUtilities:golden_lasso>;
val greenScreen = <ExtraUtilities:greenscreen>;
val heatingElement = <ExtraUtilities:heatingElement>;
val magnumTorch = <ExtraUtilities:magnumTorch>;
val microBlocks = <ExtraUtilities:microblocks>;
val miniSoul = <ExtraUtilities:mini-soul>;
val nodeUpgrade = <ExtraUtilities:nodeUpgrade>;
val paintbrush = <ExtraUtilities:paintbrush>;
val peacefulTableTop = <ExtraUtilities:peaceful_table_top>;
val pipes = <ExtraUtilities:pipes>;
val pipes1 = <ExtraUtilities:pipes.1>;
val plantEnderLilly = <ExtraUtilities:plant/ender_lilly>;
val pure

##Fishing Nets
val fishingNet = <FishingNets:fishing_nets>;
val upgrade = <FishingNets:upgrade>;

##Forestry
val adventurerBackpack = <Forestry:adventurerBackpack>;
val wovenAdventurerBackpack = <Forestry:adventurerBackpackT2>;
val ambrosia = <Forestry:ambrosia>;
val apatite = <Forestry:apatite>;
val apiaristBag = <Forestry:apiaristBag>;
val apiaristBoots = <Forestry:apiaristBoots>;
val apiaristChestplate = <Forestry:apiaristChest>;
val apiaristHelmet =  <Forestry:apiaristHelmet>;
val apiaristLeggings = <Forestry:apiaristLegs>;
val ash = <Forestry:ash>;
val beeCombs = <Forestry:beeCombs>;
val beeDrone = <Forestry:beeDroneGE>
val beeLarvae = <Forestry:beeLarvaeGE>;
val beePrincess = <Forestry:beePrincessGE>;
val beeQueen = <Forestry:beeQueenGE>;
val beealyzer = <Forestry:beealyzer>;
val beeswax = <Forestry:beeswax>;
val biofuelCan = <Forestry:biofuelCan>;
val biomassCan = <Forestry:biomassCan>;
val bituminousPeat = <Forestry:bituminousPeat>;
val brokenBronzePick = <Forestry:brokenBronzePickaxe>;
val brokenBronzeShovel =  <Forestry:brokenBronzeShovel>;
val bronzePick = <Forestry:bronzePickaxe>;
val bronzeShovel = <Forestry:bronzeShovel>;
val biofuelBucket = <Forestry:bucketBiofuel>;
val biomassBucket = <Forestry:bucketBiomass>;
val builderBackpack = <Forestry:builderBackpack>;
val  wovenBuilderBackpack = <Forestry:builderBackpackT2>;
val butterfly = <Forestry:butterflyGE>;
val can =  <Forestry:canEmpty>;
val fuelCan =  <Forestry:canFuel>;
val honeyCan = <Forestry:canHoney>;
val iceCan = <Forestry:canIce>;
val juiceCan = <Forestry:canJuice>;
val lavaCan = <Forestry:canLava>;
val oilCan = <Forestry:canOil>;
val seedOilCan = <Forestry:canSeedOil>
val carton = <Forestry:carton>;
val catalogue = <Forestry:catalogue>;
val caterpillar = <Forestry:caterpillarGE>;
val chipset = <Forestry:chipsets>;
val pulsatingDust = <Forestry:craftingMaterial>;
val crate = <Forestry:crate>;
val cratedApatite = <Forestry:cratedApatite>;
val cratedApples = <Forestry:cratedApples>;
val cratedAsh = <Forestry:cratedAsh>;
val cratedBeeswax = <Forestry:cratedBeeswax>;
val cratedBogearth = <Forestry:cratedBogearth>;
val cratedBrass = <Forestry:cratedBrass>;
val cratedBrick = <Forestry:cratedBrick>;
val cratedBronze = <Forestry:cratedBronze>;
val cratedCacti = <Forestry:cratedCacti>;
val cratedCharcoal = <Forestry:cratedCharcoal>;
val cratedClay = <Forestry:cratedClay>
val cratedCoal = <Forestry:cratedCoal>;
val cratedCobblestone = <Forestry:cratedCobblestone>;
val cratedCocoaComb = <Forestry:cratedCocoaComb>;
val cratedCookies = <Forestry:cratedCookies>;
val cratedCopper = <Forestry:cratedCopper>;
val cratedDirt = <Forestry:cratedDirt>;
val cratedDrippingCombs = <Forestry:cratedDrippingCombs>;
val cratedFertilizer = <Forestry:cratedFertilizer>;
val cratedFrozenCombs = <Forestry:cratedFrozenCombs>;
val cratedGlowstone = <Forestry:cratedGlowstone>;
val cratedGravel =  <Forestry:cratedGravel>;
val cratedHoneycombs = <Forestry:cratedHoneycombs>;
val cratedHoneydew = <Forestry:cratedHoneydew>;
val cratedHumus = <Forestry:cratedHumus>;
val cratedLapis = <Forestry:cratedLapis>;
val cratedMulch = <Forestry:cratedMulch>;
val cratedMycelium = <Forestry:cratedMycelium>;
val cratedNetherbrick = <Forestry:cratedNetherbrick>;
val cratedNetherrack = <Forestry:cratedNetherrack>;
val cratedNetherwart = <Forestry:cratedNetherwart> ;
val cratedNikolite = <Forestry:cratedNikolite>;
val cratedObsidian = <Forestry:cratedObsidian>;
val cratedPeat = <Forestry:cratedPeat>;
val cratedPhosphor = <Forestry:cratedPhosphor>;
val cratedPollen = <Forestry:cratedPollen>;
val cratedPropolis = <Forestry:cratedPropolis>;
val cratedRedstone = <Forestry:cratedRedstone>;
val cratedReeds = <Forestry:cratedReeds>;
val cratedRefractoryWax = <Forestry:cratedRefractoryWax>;
val cratedResin = <Forestry:cratedResin>;
val cratedRoyalJelly = <Forestry:cratedRoyalJelly>;
val cratedRubber = <Forestry:cratedRubber> ;
val cratedSand = <Forestry:cratedSand>;
val cratedSandstone = <Forestry:cratedSandstone>;
val cratedSaplings = <Forestry:cratedSaplings>;
val cratedScrap = <Forestry:cratedScrap>;
val  cratedSeeds = <Forestry:cratedSeeds>;
val cratedSilver = <Forestry:cratedSilver>;
val cratedSimmeringCombs = <Forestry:cratedSimmeringCombs>;
cal cratedSoulsand = <Forestry:cratedSoulsand>;
val cratedStone = <Forestry:cratedStone>;
val cratedStringyCombs = <Forestry:cratedStringyCombs>;
val cratedTin = <Forestry:cratedTin>;
val cratedUUM = <Forestry:cratedUUM>;
val cratedWheat = <Forestry:cratedWheat>;
val cratedWood = <Forestry:cratedWood>;
val decayingWheat = <Forestry:decayingWheat>;
val diggerBag = <Forestry:diggerBag>;
val wovenDiggerBag = <Forestry:diggerBagT2>;
val compost = <Forestry:fertilizerBio>;
val fertilizer = <Forestry:fertilizerCompound>;
val flutterlyzer = <Forestry:flutterlyzer>;
val foresterBag = <Forestry:foresterBag>;
val wovenForesterBag = <Forestry:foresterBagT2>;
val frameImpregnated = <Forestry:frameImpregnated>;
val frameProven = <Forestry:frameProven>;
val frameUntreated = <Forestry:frameUntreated>;
val fruit = <Forestry:fruits>;
val bronzeGear = <Forestry:gearBronze>;
val copperGear = <Forestry:gearCopper>;
val tinGear = <Forestry:gearTin>;
val grafter = <Forestry:grafter>;
val grafterProven= <Forestry:grafterProven>;
val hardenedCasing = <Forestry:hardenedMachine>;
val honeyDrop =  <Forestry:honeyDrop>;
val honeyPot =  <Forestry:honeyPot>;
val honeydew = <Forestry:honeydew>;
val honeyedSlice = <Forestry:honeyedSlice>;
val hunterBag = <Forestry:hunterBag>;
val wovenHunterBag= <Forestry:hunterBagT2>;
val impregnatedCasing = <Forestry:impregnatedCasing>;
val imprinter = <Forestry:imprinter>;
val infuser = <Forestry:infuser>;
val bronzeIngot = <Forestry:ingotBronze>;
val copperIngot = <Forestry:ingotCopper>;
val tinIngot = <Forestry:ingotTin>;
val iodineCapsule = <Forestry:iodineCapsule>;
val kitPickaxe = <Forestry:kitPickaxe>;
val kitShovel = <Forestry:kitShovel>;
val lepidopteristBag = <Forestry:lepidopteristBag>;
val letter = <Forestry:letters>;
val minerBag = <Forestry:minerBag>;
val wovenMinerBag = <Forestry:minerBagT2>;
val mouldyWheat = <Forestry:mouldyWheat>;
val mulch =  <Forestry:mulch>;
val spectacles =  <Forestry:naturalistHelmet>;
val impregnatedStick = <Forestry:oakStick> ;
val peat = <Forestry:peat>;
val phosphor = <Forestry:phosphor>;
val pipette = <Forestry:pipette>;
val pollen = <Forestry:pollen>;
val pollenFertile = <Forestry:pollenFertile>;
val propolis = <Forestry:propolis>;
val refractoryBiofuel = <Forestry:refractoryBiofuel>;
val refractoryBiomass = <Forestry:refractoryBiomass>;
val refractoryEmpty = <Forestry:refractoryEmpty>;
val refractoryFuel = <Forestry:refractoryFuel>;
val refractoryHoney = <Forestry:refractoryHoney>;
val refractoryIce = <Forestry:refractoryIce>;
val refractoryJuice = <Forestry:refractoryJuice>;
val refractoryLava = <Forestry:refractoryLava>;
val refractoryOil = <Forestry:refractoryOil>;
val refractorySeedOil =  <Forestry:refractorySeedOil>;
val refractoryWater = <Forestry:refractoryWater>;
val refractoryWax = <Forestry:refractoryWax>;
val researchNote = <Forestry:researchNote>;
val royalJelly = <Forestry:royalJelly>;
val sapling = <Forestry:sapling>;
val scoop =  <Forestry:scoop>;
val serum = <Forestry:serumGE>;
val shortMead = <Forestry:shortMead>;
val solderingIron = <Forestry:solderingIron>;
val stamp = <Forestry:stamps>;
val sturdyCasing = <Forestry:sturdyMachine>;
val thermionicTubes = <Forestry:thermionicTubes>;
val alveary = <Forestry:tile.alveary>;
val beeHives = <Forestry:tile.beehives>;
val candle = <Forestry:tile.candle>;
val farmBlock = <Forestry:tile.ffarm>;
val apiary = <Forestry:tile.for.apiculture>;
val arboristsChest = <Forestry:tile.for.arboriculture>;
val analyzer = <Forestry:tile.for.core>;
val electricalEngine =  <Forestry:tile.for.engine>;
val bottler = <Forestry:tile.for.factory>;
val thermionicFabricator = <Forestry:tile.for.factory2>;
val larchFence = <Forestry:tile.for.fences>;
val mahoeFence = <Forestry:tile.for.fences2>;
val lepidopteristsChest = <Forestry:tile.for.lepidopterology>;
val larchWood = <Forestry:tile.for.log1>;
val chestnutWood = <Forestry:tile.for.log2>;
val kapokWood =  <Forestry:tile.for.log3>;
val willowWood = <Forestry:tile.for.log4>;
val mahoeWood = <Forestry:tile.for.log5>;
val pineWood = <Forestry:tile.for.log6>;
val wood24 = <Forestry:tile.for.log7>;
val mailbox = <Forestry:tile.for.mail>;
val larchWoodPlanks = <Forestry:tile.for.planks>;
val mahoeWoodPlanks = <Forestry:tile.for.planks2>;
val pods =  <Forestry:tile.for.pods>;
val larchWoodSlab = <Forestry:tile.for.slabs1>;
val kapokWoodSlab = <Forestry:tile.for.slabs2>;
val mahoeWoodSlab = <Forestry:tile.for.slabs3>;
val larchStairs = <Forestry:tile.for.stairs>;
val forestryLeaves = <Forestry:tile.leaves>;
val apatiteOre = <Forestry:tile.resources>;
val forestrySapling = <Forestry:tile.saplingGE>;
val humus = <Forestry:tile.soil>;
val forestryStainedGlass = <Forestry:tile.stained>;
val candleStump = <Forestry:tile.stump>;
val treealyzer = <Forestry:treealyzer>;
val catalyst = <Forestry:vialCatalyst>;
val waterCan = <Forestry:waterCan>;
val waxCapsule =  <Forestry:waxCapsule>;
val waxCapsuleBiofuel = <Forestry:waxCapsuleBiofuel>;
val waxCapsuleBiomass = <Forestry:waxCapsuleBiomass>;
val waxCapsuleFuel = <Forestry:waxCapsuleFuel>;
val waxCapsuleHoney = <Forestry:waxCapsuleHoney>;
val waxCapsuleIce = <Forestry:waxCapsuleIce>; 
val waxCapsuleJuice = <Forestry:waxCapsuleJuice>;
val waxCapsuleOil  = <Forestry:waxCapsuleOil>;
val waxCapsuleSeedOil = <Forestry:waxCapsuleSeedOil>;
val waxCapsuleWater = <Forestry:waxCapsuleWater>;
val waxCast = <Forestry:waxCast>;
val woodPulp = <Forestry:woodPulp>;
val wrench = <Forestry:wrench>;

##Forge Microblock
val microblock = <ForgeMicroblock:microblock>;
val sawDiamond = <ForgeMicroblock:sawDiamond>;
val sawIron = <ForgeMicroblock:sawIron>;
val sawStone = <ForgeMicroblock:sawStone>;
val stoneRod =  <ForgeMicroblock:stoneRod>;

##Gendustry
val modulePower = <gendustry:PowerModule>;
val tankMutagen = <gendustry:MutagenTank>;
val moduleClimate = <gendustry:ClimateModule>;
val frameUpgrade = <gendustry:UpgradeFrame>;

##Iron Chests
val ironChest = <IronChest:BlockIronChest>;
val copperIronUpgrade = <IronChest:copperIronUpgrade>;
val copperSilverUpgrade = <IronChest:copperSilverUpgrade>;
val diamondCrystalUpgrade = <IronChest:diamondCrystalUpgrade>;
val diamondObsidianUpgrade = <IronChest:diamondObsidianUpgrade>;
val goldDiamondUpgrade = <IronChest:goldDiamondUpgrade>;
val ironGoldUpgrade = <IronChest:ironGoldUpgrade>l
val silverGoldUpgrade = <IronChest:silverGoldUpgrade>;
val woodCopperUpgrade = <IronChest:woodCopperUpgrade>;
val woodIronUpgrade = <IronChest:woodIronUpgrade>;

##Mantle
val mantleBook = <Mantle:mantleBook>;

##Mekanism
val armoredJetpack = <Mekanism:ArmoredJetpack>;
val atomicDisassembler = <Mekanism:AtomicDisassembler>;
val BalloonBlack = <Mekanism:Balloon>;
val BalloonRed = <Mekanism:Balloon:1>;
val BalloonGreen = <Mekanism:Balloon:2>;
val BalloonBrown = <Mekanism:Balloon:3>;
val BalloonBlue = <Mekanism:Balloon:4>;
val BalloonPurple = <Mekanism:Balloon:5>;
val BalloonCyan = <Mekanism:Balloon:6>;
val BalloonGreyLight = <Mekanism:Balloon:7>;
val BalloonGrey = <Mekanism:Balloon:8>;
val BalloonPink = <Mekanism:Balloon:9>;
val BalloonLime = <Mekanism:Balloon:10>;
val BalloonYellow = <Mekanism:Balloon:11>;
val BalloonBlueLight = <Mekanism:Balloon:12>;
val BalloonMagenta = <Mekanism:Balloon:13>;
val BalloonOrange = <Mekanism:Balloon:14>;
val BalloonWhite = <Mekanism:Balloon:15>;
val BalloonsAll = <Mekanism:Balloon:*>;
val osmiumBlock = <Mekanism:BasicBlock>;
val salinationBlock = <Mekanism:BasicBlock2>;
val mekBiofuel = <Mekanism:BioFuel>;
val boundingBlock = <Mekanism:BoundingBlock>;
val brineBucket = <Mekanism:BrineBucket>;
val cardboardBox = <Mekanism:CardboardBox>;
val oreClump = <Mekanism:Clump>;
val compressedCarbon = <Mekanism:CompressedCarbon>;
val compressedDiamond = <Mekanism:CompressedDiamond>;
val compressedObsidian = <Mekanism:CompressedObsidian>;
val compressedRedstone = <Mekanism:CompressedRedstone>;
val configurator = <Mekanism:Configurator>;
val controlCircuit = <Mekanism:ControlCircuit>;
val controlCircuitAdv = <Mekanism:ControlCircuit:1>;
val controlCircuitElite = <Mekanism:ControlCircuit:2>;
val controlCircuitUltimate = <Mekanism:ControlCircuit:3>;
val controlCircuitAll = <Mekanism:ControlCircuit:*>;
val oreCrystal = <Mekanism:Crystal>;
val dictionary = <Mekanism:Dictionary>;
val oreDirtyDust = <Mekanism:DirtyDust>;
val oreDust = <Mekanism:Dust>;
val electricBow = <Mekanism:ElectricBow>; 
val electrolyticCore =  <Mekanism:ElectrolyticCore>;
val energyCube = <Mekanism:EnergyCube>;
val energyTablet = <Mekanism:EnergyTablet>;
val energyUpgrade = <Mekanism:EnergyUpgrade>;
val enrichedAlloy = <Mekanism:EnrichedAlloy>;
val enrichedIron = <Mekanism:EnrichedIron>;
val filterCard = <Mekanism:FilterCard>;
val frictionBoots = <Mekanism:FrictionBoots>;
val gasMask = <Mekanism:GasMask>;
val gasTank = <Mekanism:GasTank>;
val glowPanel = <Mekanism:GlowPanel>;
val glowPlasticBlock = <Mekanism:GlowPlasticBlock>;
val ingot = <Mekanism:Ingot>;
val mekItemProxy = <Mekanism:ItemProxy>;
val jetpack =  <Mekanism:Jetpack>;
val enrichmentChamber = <Mekanism:MachineBlock>;
val rotaryCondensentrator = <Mekanism:MachineBlock2>;
val networkReader = <Mekanism:NetworkReader>;
val obsidianTNT = <Mekanism:ObsidianTNT>;
val oreBlock = <Mekanism:OreBlock>;
val cable = <Mekanism:PartTransmitter>;
val plasticBlock = <Mekanism:PlasticBlock>;
val plasticFence = <Mekanism:PlasticFence>;
val hdpePellet = <Mekanism:Polyethene>;
val portableTeleporter = <Mekanism:PortableTeleporter>;
val reinforcedAlloy = <Mekanism:ReinforcedAlloy>;
val reinforcedPlasticBlock = <Mekanism:ReinforcedPlasticBlock>;
val roadPlasticBlock = <Mekanism:RoadPlasticBlock>;
val robit = <Mekanism:Robit>;
val salt = <Mekanism:Salt>;
val saltBlock = <Mekanism:SaltBlock>;
val sawdust = <Mekanism:Sawdust>;
val scubaTank = <Mekanism:ScubaTank>;
val seismicReader = <Mekanism:SeismicReader>;
val oreShard = <Mekanism:Shard>;
val slickPlasticBlock = <Mekanism:SlickPlasticBlock>;
val speedUpgrade = <Mekanism:SpeedUpgrade>;
val substrate = <Mekanism:Substrate>;
val teleportationCore = <Mekanism:TeleportationCore>;
val walkieTalkie = <Mekanism:WalkieTalkie>;
val heatGenerator = <MekanismGenerators:Generator>;
val solarPanel = <MekanismGenerators:SolarPanel>;
val bronzeAxe = <MekanismTools:BronzeAxe>;
val bronzeBoots = <MekanismTools:BronzeBoots>;
val bronzeChestplate = <MekanismTools:BronzeChestplate>;
val bronzeHelmet = <MekanismTools:BronzeHelmet>;
val bronzeHoe = <MekanismTools:BronzeHoe>;
val bronzeLeggings = <MekanismTools:BronzeLeggings> ;
val bronzePaxel = <MekanismTools:BronzePaxel>;
val bronzePick = <MekanismTools:BronzePickaxe>;
val bronzeShovel = <MekanismTools:BronzeShovel>;
val bronzeSword = <MekanismTools:BronzeSword>;
val diamondPaxel = <MekanismTools:DiamondPaxel>;
val glowstoneAxe = <MekanismTools:GlowstoneAxe>;
val glowstoneBoots = <MekanismTools:GlowstoneBoots>;
val glowstoneChestplate = <MekanismTools:GlowstoneChestplate>;
val glowstoneHelmet = <MekanismTools:GlowstoneHelmet>;
val glowstoneHoe = <MekanismTools:GlowstoneHoe>;
val glowstoneLeggings = <MekanismTools:GlowstoneLeggings> ;
val glowstonePaxel = <MekanismTools:GlowstonePaxel>;
val glowstonePick = <MekanismTools:GlowstonePickaxe>;
val glowstoneShovel = <MekanismTools:GlowstoneShovel>;
val glowstoneSword = <MekanismTools:GlowstoneSword>;
val ironPaxel = <MekanismTools:IronPaxel>;
val lapisLazuliAxe = <MekanismTools:LapisLazuliAxe>;
val lapisLazuliBoots = <MekanismTools:LapisLazuliBoots>;
val lapisLazuliChestplate = <MekanismTools:LapisLazuliChestplate>;
val lapisLazuliHelmet = <MekanismTools:LapisLazuliHelmet>;
val lapisLazuliHoe = <MekanismTools:LapisLazuliHoe>;
val lapisLazuliLeggings = <MekanismTools:LapisLazuliLeggings> ;
val lapisLazuliPaxel = <MekanismTools:LapisLazuliPaxel>;
val lapisLazuliPick = <MekanismTools:LapisLazuliPickaxe>;
val lapisLazuliShovel = <MekanismTools:LapisLazuliShovel>;
val lapisLazuliSword = <MekanismTools:LapisLazuliSword>;
val obsidianAxe = <MekanismTools:ObsidianAxe>;
val obsidianBoots = <MekanismTools:ObsidianBoots>;
val obsidianChestplate = <MekanismTools:ObsidianChestplate>;
val obsidianHelmet = <MekanismTools:ObsidianHelmet>;
val obsidianHoe = <MekanismTools:ObsidianHoe>;
val obsidianLeggings = <MekanismTools:ObsidianLeggings> ;
val obsidianPaxel = <MekanismTools:ObsidianPaxel>;
val obsidianPick = <MekanismTools:ObsidianPickaxe>;
val obsidianShovel = <MekanismTools:ObsidianShovel>;
val obsidianSword = <MekanismTools:ObsidianSword>;
val osmiumAxe = <MekanismTools:OsmiumAxe>;
val osmiumBoots = <MekanismTools:OsmiumBoots>;
val osmiumChestplate = <MekanismTools:OsmiumChestplate>;
val osmiumHelmet = <MekanismTools:OsmiumHelmet>;
val osmiumHoe = <MekanismTools:OsmiumHoe>;
val osmiumLeggings = <MekanismTools:OsmiumLeggings> ;
val osmiumPaxel = <MekanismTools:OsmiumPaxel>;
val osmiumPick = <MekanismTools:OsmiumPickaxe>;
val osmiumShovel = <MekanismTools:OsmiumShovel>;
val osmiumSword = <MekanismTools:OsmiumSword>;
val steelAxe = <MekanismTools:SteelAxe>;
val steelBoots = <MekanismTools:SteelBoots>;
val steelChestplate = <MekanismTools:SteelChestplate>;
val steelHelmet = <MekanismTools:SteelHelmet>;
val steelHoe = <MekanismTools:SteelHoe>;
val steelLeggings = <MekanismTools:SteelLeggings> ;
val steelPaxel = <MekanismTools:SteelPaxel>;
val steelPick = <MekanismTools:SteelPickaxe>;
val steelShovel = <MekanismTools:SteelShovel>;
val steelSword = <MekanismTools:SteelSword>;
val stonePaxel = <MekanismTools:StonePaxel>;
val woodPaxel = <MekanismTools:WoodPaxel>;

##Mystcraft
val blockBookBinder = <Mystcraft:BlockBookBinder>;
val blockBookReceptacle = <Mystcraft:BlockBookReceptacle>;
val blockBookstand = <Mystcraft:BlockBookstand>;
val blockCrystal = <Mystcraft:BlockCrystal>;
val blockDecay = <Mystcraft:BlockDecay>;
val blackInk = <Mystcraft:BlockFluidMyst>;
val inkMixer = <Mystcraft:BlockInkMixer>;
val lectern = <Mystcraft:BlockLectern>;
val blockLinkModifier = <Mystcraft:BlockLinkModifier>;
val blockStarFissure = <Mystcraft:BlockStarFissure>;
val linkPortal = <Mystcraft:LinkPortal>;
val writingDesk = <Mystcraft:WritingDesk>;
val descriptiveBook = <Mystcraft:agebook>;
val linkBook = <Mystcraft:linkbook>;
val notebook = <Mystcraft:notebook>;
val page = <Mystcraft:page>;
val unlinkedBook = <Mystcraft:unlinkedbook> ;
val inkVial = <Mystcraft:vial>;
val writingdesk = <Mystcraft:writingdesk>;

##OpenComputers
val analyzer = <OpenComputers:item>;
val keyboard = <OpenComputers:keyboard>
val adapter = <OpenComputers:simple>;
val computerCase = <OpenComputers:simple_redstone>;
val cable = <OpenComputers:special>;
val robot = <OpenComputers:special_redstone>;

##PneumaticCraft
val blackPlasticSheet     = <PneumaticCraft:plastic>;
val redPlasticSheet       = <PneumaticCraft:plastic:1>;
val greenPlasticSheet     = <PneumaticCraft:plastic:2>;
val brownPlasticSheet     = <PneumaticCraft:plastic:3>;
val bluePlasticSheet      = <PneumaticCraft:plastic:4>;
val purplePlasticSheet    = <PneumaticCraft:plastic:5>;
val cyanPlasticSheet      = <PneumaticCraft:plastic:6>;
val lightGreyPlasticSheet = <PneumaticCraft:plastic:7>;
val greyPlasticSheet      = <PneumaticCraft:plastic:8>;
val pinkPlasticSheet      = <PneumaticCraft:plastic:9>;
val limePlasticSheet      = <PneumaticCraft:plastic:10>;
val yellowPlasticSheet    = <PneumaticCraft:plastic:11>;
val lightBluePlasticSheet = <PneumaticCraft:plastic:12>;
val magentaPlasticSheet   = <PneumaticCraft:plastic:13>;
val orangePlasticSheet    = <PneumaticCraft:plastic:14>;
val whitePlasticSheet     = <PneumaticCraft:plastic:15>;
val allPlasticSheets      = <PneumaticCraft:plastic:*>;

##Redstone Arsenal
val fluxedElectrumBlock = <RedstoneArsenal:Storage>;
val fluxBoots = <RedstoneArsenal:armor.bootsFlux>;
val fluxHelmet = <RedstoneArsenal:armor.helmetFlux>;
val fluxLeggings = <RedstoneArsenal:armor.legsFlux>;
val fluxChestplate = <RedstoneArsenal:armor.plateFlux>;
val fluxedElectrumBlend = <RedstoneArsenal:material>;
val fluxAxe = <RedstoneArsenal:tool.axeFlux>
val fluxBattleWrench = <RedstoneArsenal:tool.battleWrenchFlux>;
val fluxBow = <RedstoneArsenal:tool.bowFlux>;
val fluxFishingRod = <RedstoneArsenal:tool.fishingRodFlux>;
val fluxPick = <RedstoneArsenal:tool.pickaxeFlux>;
val fluxShovel = <RedstoneArsenal:tool.shovelFlux>;
val fluxSickle = <RedstoneArsenal:tool.sickleFlux>;
val fluxSword = <RedstoneArsenal:tool.swordFlux>;
val fluxWrench = <RedstoneArsenal:tool.wrenchFlux>;

##Professor Flaxbeard’s Steam mod
val astrolabe = <Steamcraft:astrolabe>;
val brassAxe = <Steamcraft:axeBrass>;
val gildedGoldAxe = <Steamcraft:axeGildedGold>;
val blankMold = <Steamcraft:blankMold>;
val blockBrass = <Steamcraft:blockBrass>;
val blockCopper = <Steamcraft:blockCopper>;
val blockZinc = <Steamcraft:blockZinc>;
val blunderbuss = <Steamcraft:blunderbuss>;
val boiler = <Steamcraft:boiler>;
val boilerOn = <Steamcraft:boilerOn>;
val esteemedInnovation = <Steamcraft:book>;
val carvingTable = <Steamcraft:carving>;
val steamFiller = <Steamcraft:charger>;
val brassChestplate = <Steamcraft:chestBrass>;
val gildedGoldChestplate = <Steamcraft:chestGildedGold>;
val scCrucible = <Steamcraft:crucible>;
val dummy = <Steamcraft:dummy>;
val engineeringTable = <Steamcraft:engineering>;
val exoArmourChestplate = <Steamcraft:exoArmorBody>;
val exoArmourBoots = <Steamcraft:exoArmorFeet>;
val exoArmourHelmet =  <Steamcraft:exoArmorHead>;
val exoArmorLeggings = <Steamcraft:exoArmorLegs>;
val fallAssist = <Steamcraft:fallAssist>;
val brassBoots = <Steamcraft:feetBrass>;
val gildedGoldBoots = <Steamcraft:feetGildedGold>;
val flashBoilerComponet = <Steamcraft:flashBoiler>;
val steamHammer = <Steamcraft:hammer>;
val steamHeater = <Steamcraft:heater>;
val brassHelmet = <Steamcraft:helmBrass>;
val gildedGoldHelmet = <Steamcraft:helmGildedGold>;
val brassHoe = <Steamcraft:hoeBrass>;
val gildedGoldHoe = <Steamcraft:hoeGildedGold>;
val ingotMold = <Steamcraft:ingotMold>;
val mortar = <Steamcraft:itemMortar>;
val steamJetpack = <Steamcraft:jetpack>;
val brassLeggings = <Steamcraft:legsBrass>;
val gildedGoldLeggings = <Steamcraft:legsGildedGold>;
val steamGauge = <Steamcraft:legsGildedGold>;
val mold = <Steamcraft:mold>;
val musket = <Steamcraft:musket>;
val musketCartridge = <Steamcraft:musketCartridge>
val nuggerMold = <Steamcraft:nuggetMold>;
val brassPick = <Steamcraft:pickBrass>;
val gildedGoldPick = <Steamcraft:pickGildedGold>;
val scPipe = <Steamcraft:pipe>;
val pistol = <Steamcraft:pipe>
val plateMold = <Steamcraft:plateMold>
val scPowerFist = <Steamcraft:powerFist>;
val scPump = <Steamcraft:pump>;
val ruptureDisk = <Steamcraft:ruptureDisc>;
val brassShovel = <Steamcraft:shovelBrass>;
val gildedGoldShovel = <Steamcraft:shovelGildedGold>;
val smashedOre = <Steamcraft:smashedOre>
val smasher = <Steamcraft:smasher>;
val spyglass = <Steamcraft:spyglass>;
val steamAxe = <Steamcraft:steamAxe>;
val steamDrill = <Steamcraft:steamDrill>;
val steamShovel = <Steamcraft:steamShovel>;
val steamTank = <Steamcraft:steamTank>;
val brassPiston = <Steamcraft:steamcraftCrafting>;
val copperIngot = <Steamcraft:steamcraftIngot>;
val copperNugget = <Steamcraft:steamcraftNugget>;
val copperOre = <Steamcraft:steamcraftOre>;
val copperPlate = <Steamcraft:steamcraftPlate>;
val steamedBeef = <Steamcraft:steamedBeef>;
val steamedChicken = <Steamcraft:steamedChicken>;
val steamedFish = <Steamcraft:steamedFish>
val steamedPorckchop = <Steamcraft:steamedPorkchop>;
val survivalistsTooklkit = <Steamcraft:survivalist>;
val brassSword = <Steamcraft:swordBrass>;
val gildedGoldSword = <Steamcraft:swordGildedGold>;
val thrusters = <Steamcraft:thrusters>;
val thumper = <Steamcraft:thumper>
val thuperDummy = <Steamcraft:thumperDummy>;
val valvePipe = <Steamcraft:valvePipe>;
val steamWings = <Steamcraft:wings>;

##Steve’s Carts 2
val moduleToggler =  <StevesCarts:BlockActivator>;
val advancedDetectorRail =  <StevesCarts:BlockAdvDetector>;
val cargoManager = <StevesCarts:BlockCargoManager>;
val cartAssembler = <StevesCarts:BlockCartAssembler>;
val detectorManager = <StevesCarts:BlockDetector>;
val externalDistributer = <StevesCarts:BlockDistributor>;
val junctionRail = <StevesCarts:BlockJunction>;
val liquidManager = <StevesCarts:BlockLiquidManager>;
val reinforcedMetalBlock = <StevesCarts:BlockMetalStorage>;
val cartModule = <StevesCarts:CartModule>;
val modularCart = StevesCarts:ModularCart>;
val moduleComponets = <StevesCarts:ModuleComponents>;
val upgrades = <StevesCarts:upgrade>;

##TConstruct
val canisterEmpty = <TConstruct:heartCanister:0>;
val miniRedHeart = <TConstruct:heartCanister:1>;
val canisterRedHeart = <TConstruct:heartCanister:2>;
val miniYellowHeart = <TConstruct:heartCanister:3>;
val canisterYellowHeart = <TConstruct:heartCanister:4>;
val miniGreenHeart = <TConstruct:heartCanister:5>;
val canisterGreenHeart = <TConstruct:heartCanister:6>;

# Tool Rods
val woodToolRod               = <TConstruct:toolRod:0>;
val stoneToolRod              = <TConstruct:toolRod:1>;
val ironToolRod               = <TConstruct:toolRod:2>;
val flintToolRod              = <TConstruct:toolRod:3>;
val cactusToolRod             = <TConstruct:toolRod:4>;
val boneToolRod               = <TConstruct:toolRod:5>;
val obsidianToolRod           = <TConstruct:toolRod:6>;
val netherrackToolRod         = <TConstruct:toolRod:7>;
val greenSlimeToolRod         = <TConstruct:toolRod:8>;
val paperToolRod              = <TConstruct:toolRod:9>;
val cobaltToolRod             = <TConstruct:toolRod:10>;
val arditeToolRod             = <TConstruct:toolRod:11>;
val manyullynToolRod          = <TConstruct:toolRod:12>;
val copperToolRod             = <TConstruct:toolRod:13>;
val bronzeToolRod             = <TConstruct:toolRod:14>;
val alumiteToolRod            = <TConstruct:toolRod:15>;
val steelToolRod              = <TConstruct:toolRod:16>;
val blueSlimeToolRod          = <TConstruct:toolRod:17>;
val pigIronToolRod            = <TConstruct:toolRod:18>;
val stringToolRod             = <TConstruct:toolRod:40>;

# Shards
val woodShard                 = <TConstruct:toolShard:0>;
val stoneShard                = <TConstruct:toolShard:1>;
val ironShard                 = <TConstruct:toolShard:2>;
val flintShard                = <TConstruct:toolShard:3>;
val cactusShard               = <TConstruct:toolShard:4>;
val boneShard                 = <TConstruct:toolShard:5>;
val obsidianShard             = <TConstruct:toolShard:6>;
val netherrackShard           = <TConstruct:toolShard:7>;
val greenSlimeShard           = <TConstruct:toolShard:8>;
val paperShard                = <TConstruct:toolShard:9>;
val cobaltShard               = <TConstruct:toolShard:10>;
val arditeShard               = <TConstruct:toolShard:11>;
val manyullynShard            = <TConstruct:toolShard:12>;
val copperShard               = <TConstruct:toolShard:13>;
val bronzeShard               = <TConstruct:toolShard:14>;
val alumiteShard              = <TConstruct:toolShard:15>;
val steelShard                = <TConstruct:toolShard:16>;
val blueSlimeShard            = <TConstruct:toolShard:17>;
val pigIronShard              = <TConstruct:toolShard:18>;

# Pickaxe Heads
val woodPickHead              = <TConstruct:pickaxeHead:0>;
val stonePickHead             = <TConstruct:pickaxeHead:1>;
val ironPickHead              = <TConstruct:pickaxeHead:2>;
val flintPickHead             = <TConstruct:pickaxeHead:3>;
val cactusPickHead            = <TConstruct:pickaxeHead:4>;
val bonePickHead              = <TConstruct:pickaxeHead:5>;
val obsidianPickHead          = <TConstruct:pickaxeHead:6>;
val netherrackPickHead        = <TConstruct:pickaxeHead:7>;
val greenSlimePickHead        = <TConstruct:pickaxeHead:8>;
val paperPickHead             = <TConstruct:pickaxeHead:9>;
val cobaltPickHead            = <TConstruct:pickaxeHead:10>;
val arditePickHead            = <TConstruct:pickaxeHead:11>;
val manyullynPickHead         = <TConstruct:pickaxeHead:12>;
val copperPickHead            = <TConstruct:pickaxeHead:13>;
val bronzePickHead            = <TConstruct:pickaxeHead:14>;
val alumitePickHead           = <TConstruct:pickaxeHead:15>;
val steelPickHead             = <TConstruct:pickaxeHead:16>;
val blueSlimePickHead         = <TConstruct:pickaxeHead:17>;
val pigIronPickHead           = <TConstruct:pickaxeHead:18>;

# Arrowheads
val woodArrowhead             = <TConstruct:arrowhead:0>;
val stoneArrowhead            = <TConstruct:arrowhead:1>;
val ironArrowhead             = <TConstruct:arrowhead:2>;
val flintArrowhead            = <TConstruct:arrowhead:3>;
val cactusArrowhead           = <TConstruct:arrowhead:4>;
val boneArrowhead             = <TConstruct:arrowhead:5>;
val obsidianArrowhead         = <TConstruct:arrowhead:6>;
val netherrackArrowhead       = <TConstruct:arrowhead:7>;
val greenSlimeArrowhead       = <TConstruct:arrowhead:8>;
val paperArrowhead            = <TConstruct:arrowhead:9>;
val cobaltArrowhead           = <TConstruct:arrowhead:10>;
val arditeArrowhead           = <TConstruct:arrowhead:11>;
val manyullynArrowhead        = <TConstruct:arrowhead:12>;
val copperArrowhead           = <TConstruct:arrowhead:13>;
val bronzeArrowhead           = <TConstruct:arrowhead:14>;
val alumiteArrowhead          = <TConstruct:arrowhead:15>;
val steelArrowhead            = <TConstruct:arrowhead:16>;
val blueSlimeArrowhead        = <TConstruct:arrowhead:17>;
val pigIronArrowhead          = <TConstruct:arrowhead:18>;

# Hammer Heads
val woodHammerHead            = <TConstruct:hammerHead:0>;
val stoneHammerHead           = <TConstruct:hammerHead:1>;
val ironHammerHead            = <TConstruct:hammerHead:2>;
val flintHammerHead           = <TConstruct:hammerHead:3>;
val cactusHammerHead          = <TConstruct:hammerHead:4>;
val boneHammerHead            = <TConstruct:hammerHead:5>;
val obsidianHammerHead        = <TConstruct:hammerHead:6>;
val netherrackHammerHead      = <TConstruct:hammerHead:7>;
val greenSlimeHammerHead      = <TConstruct:hammerHead:8>;
val paperHammerHead           = <TConstruct:hammerHead:9>;
val cobaltHammerHead          = <TConstruct:hammerHead:10>;
val arditeHammerHead          = <TConstruct:hammerHead:11>;
val manyullynHammerHead       = <TConstruct:hammerHead:12>;
val copperHammerHead          = <TConstruct:hammerHead:13>;
val bronzeHammerHead          = <TConstruct:hammerHead:14>;
val alumiteHammerHead         = <TConstruct:hammerHead:15>;
val steelHammerHead           = <TConstruct:hammerHead:16>;
val blueSlimeHammerHead       = <TConstruct:hammerHead:17>;
val pigIronHammerHead         = <TConstruct:hammerHead:18>;

# Large Sword Blades
val woodLargeSwordBlade       = <TConstruct:largeSwordBlade:0>;
val stoneLargeSwordBlade      = <TConstruct:largeSwordBlade:1>;
val ironLargeSwordBlade       = <TConstruct:largeSwordBlade:2>;
val flintLargeSwordBlade      = <TConstruct:largeSwordBlade:3>;
val cactusLargeSwordBlade     = <TConstruct:largeSwordBlade:4>;
val boneLargeSwordBlade       = <TConstruct:largeSwordBlade:5>;
val obsidianLargeSwordBlade   = <TConstruct:largeSwordBlade:6>;
val netherrackLargeSwordBlade = <TConstruct:largeSwordBlade:7>;
val greenSlimeLargeSwordBlade = <TConstruct:largeSwordBlade:8>;
val paperLargeSwordBlade      = <TConstruct:largeSwordBlade:9>;
val cobaltLargeSwordBlade     = <TConstruct:largeSwordBlade:10>;
val arditeLargeSwordBlade     = <TConstruct:largeSwordBlade:11>;
val manyullynLargeSwordBlade  = <TConstruct:largeSwordBlade:12>;
val copperLargeSwordBlade     = <TConstruct:largeSwordBlade:13>;
val bronzeLargeSwordBlade     = <TConstruct:largeSwordBlade:14>;
val alumiteLargeSwordBlade    = <TConstruct:largeSwordBlade:15>;
val steelLargeSwordBlade      = <TConstruct:largeSwordBlade:16>;
val blueSlimeLargeSwordBlade  = <TConstruct:largeSwordBlade:17>;
val pigIronLargeSwordBlade    = <TConstruct:largeSwordBlade:18>;

# Excavator Heads
val woodExcavatorHead         = <TConstruct:excavatorHead:0>;
val stoneExcavatorHead        = <TConstruct:excavatorHead:1>;
val ironExcavatorHead         = <TConstruct:excavatorHead:2>;
val flintExcavatorHead        = <TConstruct:excavatorHead:3>;
val cactusExcavatorHead       = <TConstruct:excavatorHead:4>;
val boneExcavatorHead         = <TConstruct:excavatorHead:5>;
val obsidianExcavatorHead     = <TConstruct:excavatorHead:6>;
val netherrackExcavatorHead   = <TConstruct:excavatorHead:7>;
val greenSlimeExcavatorHead   = <TConstruct:excavatorHead:8>;
val paperExcavatorHead        = <TConstruct:excavatorHead:9>;
val cobaltExcavatorHead       = <TConstruct:excavatorHead:10>;
val arditeExcavatorHead       = <TConstruct:excavatorHead:11>;
val manyullynExcavatorHead    = <TConstruct:excavatorHead:12>;
val copperExcavatorHead       = <TConstruct:excavatorHead:13>;
val bronzeExcavatorHead       = <TConstruct:excavatorHead:14>;
val alumiteExcavatorHead      = <TConstruct:excavatorHead:15>;
val steelExcavatorHead        = <TConstruct:excavatorHead:16>;
val blueSlimeExcavatorHead    = <TConstruct:excavatorHead:17>;
val pigIronExcavatorHead      = <TConstruct:excavatorHead:18>;

# Broad Axe Heads
val woodBroadAxeHead          = <TConstruct:broadAxeHead:0>;
val stoneBroadAxeHead         = <TConstruct:broadAxeHead:1>;
val ironBroadAxeHead          = <TConstruct:broadAxeHead:2>;
val flintBroadAxeHead         = <TConstruct:broadAxeHead:3>;
val cactusBroadAxeHead        = <TConstruct:broadAxeHead:4>;
val boneBroadAxeHead          = <TConstruct:broadAxeHead:5>;
val obsidianBroadAxeHead      = <TConstruct:broadAxeHead:6>;
val netherrackBroadAxeHead    = <TConstruct:broadAxeHead:7>;
val greenSlimeBroadAxeHead    = <TConstruct:broadAxeHead:8>;
val paperBroadAxeHead         = <TConstruct:broadAxeHead:9>;
val cobaltBroadAxeHead        = <TConstruct:broadAxeHead:10>;
val arditeBroadAxeHead        = <TConstruct:broadAxeHead:11>;
val manyullynBroadAxeHead     = <TConstruct:broadAxeHead:12>;
val copperBroadAxeHead        = <TConstruct:broadAxeHead:13>;
val bronzeBroadAxeHead        = <TConstruct:broadAxeHead:14>;
val alumiteBroadAxeHead       = <TConstruct:broadAxeHead:15>;
val steelBroadAxeHead         = <TConstruct:broadAxeHead:16>;
val blueSlimeBroadAxeHead     = <TConstruct:broadAxeHead:17>;
val pigIronBroadAxeHead       = <TConstruct:broadAxeHead:18>;

# Chisel Heads
val woodChiselHead            = <TConstruct:chiselHead:0>;
val stoneChiselHead           = <TConstruct:chiselHead:1>;
val ironChiselHead            = <TConstruct:chiselHead:2>;
val flintChiselHead           = <TConstruct:chiselHead:3>;
val cactusChiselHead          = <TConstruct:chiselHead:4>;
val boneChiselHead            = <TConstruct:chiselHead:5>;
val obsidianChiselHead        = <TConstruct:chiselHead:6>;
val netherrackChiselHead      = <TConstruct:chiselHead:7>;
val greenSlimeChiselHead      = <TConstruct:chiselHead:8>;
val paperChiselHead           = <TConstruct:chiselHead:9>;
val cobaltChiselHead          = <TConstruct:chiselHead:10>;
val arditeChiselHead          = <TConstruct:chiselHead:11>;
val manyullynChiselHead       = <TConstruct:chiselHead:12>;
val copperChiselHead          = <TConstruct:chiselHead:13>;
val bronzeChiselHead          = <TConstruct:chiselHead:14>;
val alumiteChiselHead         = <TConstruct:chiselHead:15>;
val steelChiselHead           = <TConstruct:chiselHead:16>;
val blueSlimeChiselHead       = <TConstruct:chiselHead:17>;
val pigIronChiselHead         = <TConstruct:chiselHead:18>;

# Scythe Heads
val woodScytheBlade           = <TConstruct:scytheBlade:0>;
val stoneScytheBlade          = <TConstruct:scytheBlade:1>;
val ironScytheBlade           = <TConstruct:scytheBlade:2>;
val flintScytheBlade          = <TConstruct:scytheBlade:3>;
val cactusScytheBlade         = <TConstruct:scytheBlade:4>;
val boneScytheBlade           = <TConstruct:scytheBlade:5>;
val obsidianScytheBlade       = <TConstruct:scytheBlade:6>;
val netherrackScytheBlade     = <TConstruct:scytheBlade:7>;
val greenSlimeScytheBlade     = <TConstruct:scytheBlade:8>;
val paperScytheBlade          = <TConstruct:scytheBlade:9>;
val cobaltScytheBlade         = <TConstruct:scytheBlade:10>;
val arditeScytheBlade         = <TConstruct:scytheBlade:11>;
val manyullynScytheBlade      = <TConstruct:scytheBlade:12>;
val copperScytheBlade         = <TConstruct:scytheBlade:13>;
val bronzeScytheBlade         = <TConstruct:scytheBlade:14>;
val alumiteScytheBlade        = <TConstruct:scytheBlade:15>;
val steelScytheBlade          = <TConstruct:scytheBlade:16>;
val blueSlimeScytheBlade      = <TConstruct:scytheBlade:17>;
val pigIronScytheBlade        = <TConstruct:scytheBlade:18>;

# Knife Blades
val woodKnifeBlade            = <TConstruct:knifeBlade:0>;
val stoneKnifeBlade           = <TConstruct:knifeBlade:1>;
val ironKnifeBlade            = <TConstruct:knifeBlade:2>;
val flintKnifeBlade           = <TConstruct:knifeBlade:3>;
val cactusKnifeBlade          = <TConstruct:knifeBlade:4>;
val boneKnifeBlade            = <TConstruct:knifeBlade:5>;
val obsidianKnifeBlade        = <TConstruct:knifeBlade:6>;
val netherrackKnifeBlade      = <TConstruct:knifeBlade:7>;
val greenSlimeKnifeBlade      = <TConstruct:knifeBlade:8>;
val paperKnifeBlade           = <TConstruct:knifeBlade:9>;
val cobaltKnifeBlade          = <TConstruct:knifeBlade:10>;
val arditeKnifeBlade          = <TConstruct:knifeBlade:11>;
val manyullynKnifeBlade       = <TConstruct:knifeBlade:12>;
val copperKnifeBlade          = <TConstruct:knifeBlade:13>;
val bronzeKnifeBlade          = <TConstruct:knifeBlade:14>;
val alumiteKnifeBlade         = <TConstruct:knifeBlade:15>;
val steelKnifeBlade           = <TConstruct:knifeBlade:16>;
val blueSlimeKnifeBlade       = <TConstruct:knifeBlade:17>;
val pigIronKnifeBlade         = <TConstruct:knifeBlade:18>;

# Frying Pan Heads
val woodFryingPanHead         = <TConstruct:frypanHead:0>;
val stoneFryingPanHead        = <TConstruct:frypanHead:1>;
val ironFryingPanHead         = <TConstruct:frypanHead:2>;
val flintFryingPanHead        = <TConstruct:frypanHead:3>;
val cactusFryingPanHead       = <TConstruct:frypanHead:4>;
val boneFryingPanHead         = <TConstruct:frypanHead:5>;
val obsidianFryingPanHead     = <TConstruct:frypanHead:6>;
val netherrackFryingPanHead   = <TConstruct:frypanHead:7>;
val greenSlimeFryingPanHead   = <TConstruct:frypanHead:8>;
val paperFryingPanHead        = <TConstruct:frypanHead:9>;
val cobaltFryingPanHead       = <TConstruct:frypanHead:10>;
val arditeFryingPanHead       = <TConstruct:frypanHead:11>;
val manyullynFryingPanHead    = <TConstruct:frypanHead:12>;
val copperFryingPanHead       = <TConstruct:frypanHead:13>;
val bronzeFryingPanHead       = <TConstruct:frypanHead:14>;
val alumiteFryingPanHead      = <TConstruct:frypanHead:15>;
val steelFryingPanHead        = <TConstruct:frypanHead:16>;
val blueSlimeFryingPanHead    = <TConstruct:frypanHead:17>;
val pigIronFryingPanHead      = <TConstruct:frypanHead:18>;

# Crossbars
val woodCrossbar              = <TConstruct:crossbar:0>;
val stoneCrossbar             = <TConstruct:crossbar:1>;
val ironCrossbar              = <TConstruct:crossbar:2>;
val flintCrossbar             = <TConstruct:crossbar:3>;
val cactusCrossbar            = <TConstruct:crossbar:4>;
val boneCrossbar              = <TConstruct:crossbar:5>;
val obsidianCrossbar          = <TConstruct:crossbar:6>;
val netherrackCrossbar        = <TConstruct:crossbar:7>;
val greenSlimeCrossbar        = <TConstruct:crossbar:8>;
val paperCrossbar             = <TConstruct:crossbar:9>;
val cobaltCrossbar            = <TConstruct:crossbar:10>;
val arditeCrossbar            = <TConstruct:crossbar:11>;
val manyullynCrossbar         = <TConstruct:crossbar:12>;
val copperCrossbar            = <TConstruct:crossbar:13>;
val bronzeCrossbar            = <TConstruct:crossbar:14>;
val alumiteCrossbar           = <TConstruct:crossbar:15>;
val steelCrossbar             = <TConstruct:crossbar:16>;
val blueSlimeCrossbar         = <TConstruct:crossbar:17>;
val pigIronCrossbar           = <TConstruct:crossbar:18>;

# Sign Heads
val woodSignHead              = <TConstruct:signHead:0>;
val stoneSignHead             = <TConstruct:signHead:1>;
val ironSignHead              = <TConstruct:signHead:2>;
val flintSignHead             = <TConstruct:signHead:3>;
val cactusSignHead            = <TConstruct:signHead:4>;
val boneSignHead              = <TConstruct:signHead:5>;
val obsidianSignHead          = <TConstruct:signHead:6>;
val netherrackSignHead        = <TConstruct:signHead:7>;
val greenSlimeSignHead        = <TConstruct:signHead:8>;
val paperSignHead             = <TConstruct:signHead:9>;
val cobaltSignHead            = <TConstruct:signHead:10>;
val arditeSignHead            = <TConstruct:signHead:11>;
val manyullynSignHead         = <TConstruct:signHead:12>;
val copperSignHead            = <TConstruct:signHead:13>;
val bronzeSignHead            = <TConstruct:signHead:14>;
val alumiteSignHead           = <TConstruct:signHead:15>;
val steelSignHead             = <TConstruct:signHead:16>;
val blueSlimeSignHead         = <TConstruct:signHead:17>;
val pigIronSignHead           = <TConstruct:signHead:18>;

# Hand Guards
val woodHandGuard             = <TConstruct:handGuard:0>;
val stoneHandGuard            = <TConstruct:handGuard:1>;
val ironHandGuard             = <TConstruct:handGuard:2>;
val flintHandGuard            = <TConstruct:handGuard:3>;
val cactusHandGuard           = <TConstruct:handGuard:4>;
val boneHandGuard             = <TConstruct:handGuard:5>;
val obsidianHandGuard         = <TConstruct:handGuard:6>;
val netherrackHandGuard       = <TConstruct:handGuard:7>;
val greenSlimeHandGuard       = <TConstruct:handGuard:8>;
val paperHandGuard            = <TConstruct:handGuard:9>;
val cobaltHandGuard           = <TConstruct:handGuard:10>;
val arditeHandGuard           = <TConstruct:handGuard:11>;
val manyullynHandGuard        = <TConstruct:handGuard:12>;
val copperHandGuard           = <TConstruct:handGuard:13>;
val bronzeHandGuard           = <TConstruct:handGuard:14>;
val alumiteHandGuard          = <TConstruct:handGuard:15>;
val steelHandGuard            = <TConstruct:handGuard:16>;
val blueSlimeHandGuard        = <TConstruct:handGuard:17>;
val pigIronHandGuard          = <TConstruct:handGuard:18>;

# Wide Guards
val woodWideGuard             = <TConstruct:wideGuard:0>;
val stoneWideGuard            = <TConstruct:wideGuard:1>;
val ironWideGuard             = <TConstruct:wideGuard:2>;
val flintWideGuard            = <TConstruct:wideGuard:3>;
val cactusWideGuard           = <TConstruct:wideGuard:4>;
val boneWideGuard             = <TConstruct:wideGuard:5>;
val obsidianWideGuard         = <TConstruct:wideGuard:6>;
val netherrackWideGuard       = <TConstruct:wideGuard:7>;
val greenSlimeWideGuard       = <TConstruct:wideGuard:8>;
val paperWideGuard            = <TConstruct:wideGuard:9>;
val cobaltWideGuard           = <TConstruct:wideGuard:10>;
val arditeWideGuard           = <TConstruct:wideGuard:11>;
val manyullynWideGuard        = <TConstruct:wideGuard:12>;
val copperWideGuard           = <TConstruct:wideGuard:13>;
val bronzeWideGuard           = <TConstruct:wideGuard:14>;
val alumiteWideGuard          = <TConstruct:wideGuard:15>;
val steelWideGuard            = <TConstruct:wideGuard:16>;
val blueSlimeWideGuard        = <TConstruct:wideGuard:17>;
val pigIronWideGuard          = <TConstruct:wideGuard:18>;

# Sword Blades
val woodSwordBlade            = <TConstruct:swordBlade:0>;
val stoneSwordBlade           = <TConstruct:swordBlade:1>;
val ironSwordBlade            = <TConstruct:swordBlade:2>;
val flintSwordBlade           = <TConstruct:swordBlade:3>;
val cactusSwordBlade          = <TConstruct:swordBlade:4>;
val boneSwordBlade            = <TConstruct:swordBlade:5>;
val obsidianSwordBlade        = <TConstruct:swordBlade:6>;
val netherrackSwordBlade      = <TConstruct:swordBlade:7>;
val greenSlimeSwordBlade      = <TConstruct:swordBlade:8>;
val paperSwordBlade           = <TConstruct:swordBlade:9>;
val cobaltSwordBlade          = <TConstruct:swordBlade:10>;
val arditeSwordBlade          = <TConstruct:swordBlade:11>;
val manyullynSwordBlade       = <TConstruct:swordBlade:12>;
val copperSwordBlade          = <TConstruct:swordBlade:13>;
val bronzeSwordBlade          = <TConstruct:swordBlade:14>;
val alumiteSwordBlade         = <TConstruct:swordBlade:15>;
val steelSwordBlade           = <TConstruct:swordBlade:16>;
val blueSlimeSwordBlade       = <TConstruct:swordBlade:17>;
val pigIronSwordBlade         = <TConstruct:swordBlade:18>;

# Heavy plates
val woodHeavyPlate            = <TConstruct:heavyPlate:0>;
val stoneHeavyPlate           = <TConstruct:heavyPlate:1>;
val ironHeavyPlate            = <TConstruct:heavyPlate:2>;
val flintHeavyPlate           = <TConstruct:heavyPlate:3>;
val cactusHeavyPlate          = <TConstruct:heavyPlate:4>;
val boneHeavyPlate            = <TConstruct:heavyPlate:5>;
val obsidianHeavyPlate        = <TConstruct:heavyPlate:6>;
val netherrackHeavyPlate      = <TConstruct:heavyPlate:7>;
val greenSlimeHeavyPlate      = <TConstruct:heavyPlate:8>;
val paperHeavyPlate           = <TConstruct:heavyPlate:9>;
val cobaltHeavyPlate          = <TConstruct:heavyPlate:10>;
val arditeHeavyPlate          = <TConstruct:heavyPlate:11>;
val manyullynHeavyPlate       = <TConstruct:heavyPlate:12>;
val copperHeavyPlate          = <TConstruct:heavyPlate:13>;
val bronzeHeavyPlate          = <TConstruct:heavyPlate:14>;
val alumiteHeavyPlate         = <TConstruct:heavyPlate:15>;
val steelHeavyPlate           = <TConstruct:heavyPlate:16>;
val blueSlimeHeavyPlate       = <TConstruct:heavyPlate:17>;
val pigIronHeavyPlate         = <TConstruct:heavyPlate:18>;

# Tough Rods
val woodToughRod              = <TConstruct:toughRod:0>;
val stoneToughRod             = <TConstruct:toughRod:1>;
val ironToughRod              = <TConstruct:toughRod:2>;
val flintToughRod             = <TConstruct:toughRod:3>;
val cactusToughRod            = <TConstruct:toughRod:4>;
val boneToughRod              = <TConstruct:toughRod:5>;
val obsidianToughRod          = <TConstruct:toughRod:6>;
val netherrackToughRod        = <TConstruct:toughRod:7>;
val greenSlimeToughRod        = <TConstruct:toughRod:8>;
val paperToughRod             = <TConstruct:toughRod:9>;
val cobaltToughRod            = <TConstruct:toughRod:10>;
val arditeToughRod            = <TConstruct:toughRod:11>;
val manyullynToughRod         = <TConstruct:toughRod:12>;
val copperToughRod            = <TConstruct:toughRod:13>;
val bronzeToughRod            = <TConstruct:toughRod:14>;
val alumiteToughRod           = <TConstruct:toughRod:15>;
val steelToughRod             = <TConstruct:toughRod:16>;
val blueSlimeToughRod         = <TConstruct:toughRod:17>;
val pigIronToughRod           = <TConstruct:toughRod:18>;

# Shovel Heads
val woodShovelHead            = <TConstruct:shovelHead:0>;
val stoneShovelHead           = <TConstruct:shovelHead:1>;
val ironShovelHead            = <TConstruct:shovelHead:2>;
val flintShovelHead           = <TConstruct:shovelHead:3>;
val cactusShovelHead          = <TConstruct:shovelHead:4>;
val boneShovelHead            = <TConstruct:shovelHead:5>;
val obsidianShovelHead        = <TConstruct:shovelHead:6>;
val netherrackShovelHead      = <TConstruct:shovelHead:7>;
val greenSlimeShovelHead      = <TConstruct:shovelHead:8>;
val paperShovelHead           = <TConstruct:shovelHead:9>;
val cobaltShovelHead          = <TConstruct:shovelHead:10>;
val arditeShovelHead          = <TConstruct:shovelHead:11>;
val manyullynShovelHead       = <TConstruct:shovelHead:12>;
val copperShovelHead          = <TConstruct:shovelHead:13>;
val bronzeShovelHead          = <TConstruct:shovelHead:14>;
val alumiteShovelHead         = <TConstruct:shovelHead:15>;
val steelShovelHead           = <TConstruct:shovelHead:16>;
val blueSlimeShovelHead       = <TConstruct:shovelHead:17>;
val pigIronShovelHead         = <TConstruct:shovelHead:18>;

# Hatchet Heads
val woodHatchetHead           = <TConstruct:hatchetHead:0>;
val stoneHatchetHead          = <TConstruct:hatchetHead:1>;
val ironHatchetHead           = <TConstruct:hatchetHead:2>;
val flintHatchetHead          = <TConstruct:hatchetHead:3>;
val cactusHatchetHead         = <TConstruct:hatchetHead:4>;
val boneHatchetHead           = <TConstruct:hatchetHead:5>;
val obsidianHatchetHead       = <TConstruct:hatchetHead:6>;
val netherrackHatchetHead     = <TConstruct:hatchetHead:7>;
val greenSlimeHatchetHead     = <TConstruct:hatchetHead:8>;
val paperHatchetHead          = <TConstruct:hatchetHead:9>;
val cobaltHatchetHead         = <TConstruct:hatchetHead:10>;
val arditeHatchetHead         = <TConstruct:hatchetHead:11>;
val manyullynHatchetHead      = <TConstruct:hatchetHead:12>;
val copperHatchetHead         = <TConstruct:hatchetHead:13>;
val bronzeHatchetHead         = <TConstruct:hatchetHead:14>;
val alumiteHatchetHead        = <TConstruct:hatchetHead:15>;
val steelHatchetHead          = <TConstruct:hatchetHead:16>;
val blueSlimeHatchetHead      = <TConstruct:hatchetHead:17>;
val pigIronHatchetHead        = <TConstruct:hatchetHead:18>;

# Bindings
val woodBinding               = <TConstruct:binding:0>;
val stoneBinding              = <TConstruct:binding:1>;
val ironBinding               = <TConstruct:binding:2>;
val flintBinding              = <TConstruct:binding:3>;
val cactusBinding             = <TConstruct:binding:4>;
val boneBinding               = <TConstruct:binding:5>;
val obsidianBinding           = <TConstruct:binding:6>;
val netherrackBinding         = <TConstruct:binding:7>;
val greenSlimeBinding         = <TConstruct:binding:8>;
val paperBinding              = <TConstruct:binding:9>;
val cobaltBinding             = <TConstruct:binding:10>;
val arditeBinding             = <TConstruct:binding:11>;
val manyullynBinding          = <TConstruct:binding:12>;
val copperBinding             = <TConstruct:binding:13>;
val bronzeBinding             = <TConstruct:binding:14>;
val alumiteBinding            = <TConstruct:binding:15>;
val steelBinding              = <TConstruct:binding:16>;
val blueSlimeBinding          = <TConstruct:binding:17>;
val pigIronBinding            = <TConstruct:binding:18>;

# Tough Binding
val woodToughBinding          = <TConstruct:toughBinding:0>;
val stoneToughBinding         = <TConstruct:toughBinding:1>;
val ironToughBinding          = <TConstruct:toughBinding:2>;
val flintToughBinding         = <TConstruct:toughBinding:3>;
val cactusToughBinding        = <TConstruct:toughBinding:4>;
val boneToughBinding          = <TConstruct:toughBinding:5>;
val obsidianToughBinding      = <TConstruct:toughBinding:6>;
val netherrackToughBinding    = <TConstruct:toughBinding:7>;
val greenSlimeToughBinding    = <TConstruct:toughBinding:8>;
val paperToughBinding         = <TConstruct:toughBinding:9>;
val cobaltToughBinding        = <TConstruct:toughBinding:10>;
val arditeToughBinding        = <TConstruct:toughBinding:11>;
val manyullynToughBinding     = <TConstruct:toughBinding:12>;
val copperToughBinding        = <TConstruct:toughBinding:13>;
val bronzeToughBinding        = <TConstruct:toughBinding:14>;
val alumiteToughBinding       = <TConstruct:toughBinding:15>;
val steelToughBinding         = <TConstruct:toughBinding:16>;
val blueSlimeToughBinding     = <TConstruct:toughBinding:17>;
val pigIronToughBinding       = <TConstruct:toughBinding:18>;

# Full Guards
val woodFullGuard             = <TConstruct:fullGuard:0>;
val stoneFullGuard            = <TConstruct:fullGuard:1>;
val ironFullGuard             = <TConstruct:fullGuard:2>;
val flintFullGuard            = <TConstruct:fullGuard:3>;
val cactusFullGuard           = <TConstruct:fullGuard:4>;
val boneFullGuard             = <TConstruct:fullGuard:5>;
val obsidianFullGuard         = <TConstruct:fullGuard:6>;
val netherrackFullGuard       = <TConstruct:fullGuard:7>;
val greenSlimeFullGuard       = <TConstruct:fullGuard:8>;
val paperFullGuard            = <TConstruct:fullGuard:9>;
val cobaltFullGuard           = <TConstruct:fullGuard:10>;
val arditeFullGuard           = <TConstruct:fullGuard:11>;
val manyullynFullGuard        = <TConstruct:fullGuard:12>;
val copperFullGuard           = <TConstruct:fullGuard:13>;
val bronzeFullGuard           = <TConstruct:fullGuard:14>;
val alumiteFullGuard          = <TConstruct:fullGuard:15>;
val steelFullGuard            = <TConstruct:fullGuard:16>;
val blueSlimeFullGuard        = <TConstruct:fullGuard:17>;
val pigIronFullGuard          = <TConstruct:fullGuard:18>;

##Thermal Foundation

##dusts
val dustIron = <ThermalFoundation:material>;
val dustGold = <ThermalFoundation:material:1>;
val dustCoal = <ThermalFoundation:material:2>;
val dustCharcoal = <ThermalFoundation:material:3>;
val dustObsidian = <ThermalFoundation:material:4>;
val dustSulfur = <ThermalFoundation:material:16>;
val dustNiter = <ThermalFoundation:material:17>;
val cinnabar = <ThermalFoundation:material:20>;
val dustCopper = <ThermalFoundation:material:32>;
val dustTin = <ThermalFoundation:material:33>;
val dustSilver = <ThermalFoundation:material:34>;
val dustLead = <ThermalFoundation:material:35>;
val dustFerrous = <ThermalFoundation:material:36>;
val dustShiny = <ThermalFoundation:material:37>;
val dustMana = <ThermalFoundation:material:38>;
val dustPyro = <ThermalFoundation:material:512>;
val dustCyro = <ThermalFoundation:material:513>;
val dustPrimalMana = <ThermalFoundation:material:514>;
val dustElectrum = <ThermalFoundation:material:39>;
val dustInvar = <ThermalFoundation:material:40>;
val dustBronze = <ThermalFoundation:material:41>;
val dustSignalum = <ThermalFoundation:material:42>;
val dustLumium = <ThermalFoundation:material:43>;
val dustEnderium = <ThermalFoundation:material:44>;
##ingots
val ingotCopper = <ThermalFoundation:material:64>;
val ingotCopperdict = <ore:ingotCopper>;
val ingotTin = <ThermalFoundation:material:65>;
val ingotSilver = <ThermalFoundation:material:66>;
val ingotLead = <ThermalFoundation:material:67>;
val ingotFerrous = <ThermalFoundation:material:68>;
val ingotShiny = <ThermalFoundation:material:69>;
val ingotMana = <ThermalFoundation:material:70>;
val ingotElectrum = <ThermalFoundation:material:71>;
val ingotInvar = <ThermalFoundation:material:72>;
val ingotBronze = <ThermalFoundation:material:73>;
val ingotSignalum = <ThermalFoundation:material:74>;
val ingotLumium = <ThermalFoundation:material:75>;
val ingotEnderium = <ThermalFoundation:material:76>;
##nuggets
val nuggetIron = <ThermalFoundation:material:8>;
val nuggetCopper = <ThermalFoundation:material:96>;
val nuggetTin = <ThermalFoundation:material:97>;
val nuggetSilver = <ThermalFoundation:material:98>;
val nuggetLead = <ThermalFoundation:material:99>;
val nuggetFerrous = <ThermalFoundation:material:100>;
val nuggetShiny = <ThermalFoundation:material:101>;
val nuggetMana = <ThermalFoundation:material:102>;
val nuggetElectrum = <ThermalFoundation:material:103>;
val nuggetInvar = <ThermalFoundation:material:104>;
val nuggetBronze = <ThermalFoundation:material:105>;
val nuggetSignalum = <ThermalFoundation:material:106>;
val nuggetLumium = <ThermalFoundation:material:107>;
val nuggetEnderium = <ThermalFoundation:material:108>;
##gears
val gearIron = <ThermalFoundation:material:12>;
val gearGold = <ThermalFoundation:material:13>;
val gearCopper = <ThermalFoundation:material:128>;
val gearTin = <ThermalFoundation:material:129>;
val gearSilver = <ThermalFoundation:material:130>;
val gearLead = <ThermalFoundation:material:131>;
val gearFerrous = <ThermalFoundation:material:132>;
val gearShiny = <ThermalFoundation:material:133>;
val gearMana = <ThermalFoundation:material:134>;
val gearElectrum = <ThermalFoundation:material:135>;
val gearInvar = <ThermalFoundation:material:136>;
val gearBronze = <ThermalFoundation:material:137>;
val gearSignalum = <ThermalFoundation:material:138>;
val gearLumium = <ThermalFoundation:material:139>;
val gearEnderium = <ThermalFoundation:material:140>;
##misc
val blizzRod =  <ThermalFoundation:material:1024>;
val blizzPowder =  <ThermalFoundation:material:1025>;
##ores
val oreCopperDict = <ore:oreCopper>;
val oreCopper = <ThermalFoundation:Ore>;
val oreTin = <ThermalFoundation:Ore:1>;
val oreTinDict = <ore:oreTin>;
val oreSilver = <ThermalFoundation:Ore:2>;
val oreLead = <ThermalFoundation:Ore:3>;
val oreFerrous = <ThermalFoundation:Ore:4>;
val oreShiny = <ThermalFoundation:Ore:5>;
val oreMana = <ThermalFoundation:Ore:6>;
##Buckets
val bucketDesRedstone = <ThermalFoundation:bucket>;
val bucketDesGlowstone = <ThermalFoundation:bucket:1>;
val bucketResEnder = <ThermalFoundation:bucket:2>;
val bucketPyro = <ThermalFoundation:bucket:3>;
val bucketCyro = <ThermalFoundation:bucket:4>;
val bucketManaPrimal = <ThermalFoundation:bucket:5>;
##Blocks
val blockCopper = <ThermalFoundation:Storage>;
val blockTin = <ThermalFoundation:Storage:1>;
val blockSilver = <ThermalFoundation:Storage:2>;
val blockLead = <ThermalFoundation:Storage:3>;
val blockFerrous = <ThermalFoundation:Storage:4>;
val BlockShiny = <ThermalFoundation:Storage:5>;
val blockMana = <ThermalFoundation:Storage:6>;

##Minecraft
val acaciaStairs = <minecraft:acacia_stairs>;
val activatorRail = <minecraft:activator_rail>;
val anvil = <minecraft:anvil>;
val apple = <minecraft:apple>;
val arrow = <minecraft:arrow>;
val bakedPotato = <minecraft:baked_potato>;
val beacon = <minecraft:beacon>;
val bed = <minecraft:bed>;
val bedrock = <minecraft:bedrock>;
val beef = <minecraft:beef>;
val birchStairs = <minecraft:birch_stairs>;
val blazePowder = <minecraft:blaze_powder>;
val blazeRod = <minecraft:blaze_rod>;
val boat = <minecraft:boat>;
val bone = <minecraft:bone>;
val book = <minecraft:book>;
val bookshelf = <minecraft:bookshelf>;
val bow = <minecraft:bow>;
val bowl = <minecraft:bowl>;
val bread = <minecraft:bread>;
val brewingStand = <minecraft:brewing_stand>;
val brick = <minecraft:brick>;
val brickBlock = <minecraft:brick_block>;
val brickStairs = <minecraft:brick_stairs>;
val brownMushroom = <minecraft:brown_mushroom>;
val brownMushroomBlock = <minecraft:brown_mushroom_block>;
val bucket = <minecraft:bucket>;
val cactus = <minecraft:cactus>;
val cake = <minecraft:cake>;
val carpet = <minecraft:carpet>;
val carrot = <minecraft:carrot>;
val carrotOnAStick = <minecraft:carrot_on_a_stick>;
val carrots = <minecraft:carrots>;
val cauldron = <minecraft:cauldron>;
val chainBoots = <minecraft:chainmail_boots>;
val chainChestplate = <minecraft:chainmail_chestplate>;
val chainHelmet = <minecraft:chainmail_helmet>;
val chainmailLeggings = <minecraft:chainmail_leggings>;
val chest = <minecraft:chest>;
val chestMinecart = <minecraft:chest_minecart>;
val chicken = <minecraft:chicken>;
val clay = <minecraft:clay>;
val clayBall = <minecraft:clay_ball>;
val clock = <minecraft:clock>;
val coal =  <minecraft:coal>;
val coalBlock =  <minecraft:coal_block>;
val coalOre = <minecraft:coal_ore>;
val cobblestone = <minecraft:cobblestone>;
val cobblestoneWall = <minecraft:cobblestone_wall>;
val cocoa = <minecraft:cocoa>;
val commandBlock = <minecraft:command_block>;
val commandBlockMinecart = <minecraft:command_block_minecart>;
val comparator = <minecraft:comparator>;
val compass = <minecraft:compass>;
val steak = <minecraft:cooked_beef>;
val cookedChicken = <minecraft:cooked_chicken>;
val cookedFish = <minecraft:cooked_fished>;
val cookedPorkchop = <minecraft:cooked_porkchop>;
val cookie = <minecraft:cookie>;
val craftingTable = <minecraft:crafting_table>;
val darkOakStairs = <minecraft:dark_oak_stairs>;
val daylightDetector = <minecraft:daylight_detector>;
val deadbush = <minecraft:deadbush>;
val detectorRail = <minecraft:detector_rail>;
val diamond = <minecraft:diamond>;
val diamondBlock = <minecraft:diamond_block>;
val diamondBoots = <minecraft:diamond_boots>;
val diamondChestplate = <minecraft:diamond_chestplate>;
val diamondHelmet = <minecraft:diamond_helmet>;
val diamondHorseArmor = <minecraft:diamond_horse_armor>;
val diamondLeggings = <minecraft:diamond_leggings>;
val diamondOre =  <minecraft:diamond_ore>;
val dirt = <minecraft:dirt>;
val dispenser = <minecraft:dispenser>;
val sunflower =  <minecraft:double_plant>;
val doubleStoneSlab = <minecraft:double_stone_slab>;
val doubleWoodSlab = <minecraft:double_wooden_slab>;
val dragonEgg = <minecraft:dragon_egg>;
val dropper = <minecraft:dropper>;
val egg = <minecraft:egg>;
val emerald = <minecraft:emerald>;
val emeraldBlock = <minecraft:emerald_block>;
val emeraldOre = <minecraft:emerald_ore>;
val enchantedBook = <minecraft:enchanted_book>;
val enchantingTable = <minecraft:enchanting_table>;
val endPortal = <minecraft:end_portal>;
val endPortalFrame = <minecraft:end_portal_frame>;
val endStone = <minecraft:end_stone>;
val enderChest = <minecraft:ender_chest>;
val eyeEnder = <minecraft:ender_eye>;
val enderPearl = <minecraft:ender_pearl>;
val experienceBottle = <minecraft:experience_bottle>;
val farmland = <minecraft:farmland>;
val feather = <minecraft:feather>;
val fence = <minecraft:fence>;
val fenceGate = <minecraft:fence_gate>;
val fermentedSpiderEye = <minecraft:fermented_spider_eye>;
val filledMap = <minecraft:filled_map>;
val fire = <minecraft:fire>;
val fireCharge = <minecraft:fire_charge>;
val fireworkCharge = <minecraft:firework_charge>;
val firework = <minecraft:fireworks>;
val fish = <minecraft:fish>;
val fishingRod = <minecraft:fishing_rod>;
val flint = <minecraft:flint>;
val flintAndSteel = <minecraft:flint_and_steel>;
val flowerPot = <minecraft:flower_pot>;
val flowingLava = <minecraft:flowing_lava>;
val flowingWater = <minecraft:flowing_water>;
val furnaceBlock = <minecraft:furnace>;
val furnaceMinecart = <minecraft:furnace_minecart>;
val ghastTear = <minecraft:ghast_tear>;
val glass = <minecraft:glass>;
val glassBottle = <minecraft:glass_bottle>;
val glassPane = <minecraft:glass_pane>;
val glowstoneBlock = <minecraft:glowstone>;
val glowstoneDust = <minecraft:glowstone_dust>;
val goldBlock = <minecraft:gold_block>;
val goldIngot = <minecraft:gold_ingot>;
val nuggetGold = <minecraft:gold_nugget>;
val goldOre = <minecraft:gold_ore>;
val goldenApple = <minecraft:golden_apple>;
val goldenBoots = <minecraft:golden_boots>;
val goldenCarrot = <minecraft:golden_carrot>;
val goldenChestplate = <minecraft:golden_chestplate>;
val goldenHelmet = <minecraft:golden_helmet>;
val goldenHorseArmor = <minecraft:golden_horse_armor>;
val goldenLeggings = <minecraft:golden_leggings>;
val poweredRail = <minecraft:golden_rail>;
val grass = <minecraft:grass>;
val gravel = <minecraft:gravel>;
val gunpowder = <minecraft:gunpowder>;
val hardenedClay = <minecraft:hardened_clay>;
val hayBale = <minecraft:hay_block>;
val heavyWeightedPressurePlate = <minecraft:heavy_weighted_pressure_plate>;
val hopper = <minecraft:hopper>;
val hopperMinecart = <minecraft:hopper_minecart>;
val ice = <minecraft:ice>;
val ironBar = <minecraft:iron_bars>;
val ironBlock = <minecraft:iron_block>;
val ironBoots = <minecraft:iron_boots>;
val ironChestplate = <minecraft:iron_chestplate>;
val ironDoor = <minecraft:iron_door>;
val ironHelmet = <minecraft:iron_helmet>;
val ironHorseArmor = <minecraft:iron_horse_armor>;
val ironIngot = <minecraft:iron_ingot>;
val ironLeggings = <minecraft:iron_leggings>;
val ironOre = <minecraft:iron_ore>;
val itemFrame = <minecraft:item_frame>;
val jukebox = <minecraft:jukebox>;
val jungleStairs = <minecraft:jungle_stairs>;
val ladder = <minecraft:ladder>;
val lapisBlock = <minecraft:lapis_block>;
val lapisOre = <minecraft:lapis_ore>;
val lava = <minecraft:lava>;
val lavaBucket = <minecraft:lava_bucket>;
val lead = <minecraft:lead>;
val leather = <minecraft:leather>;
val leatherBoots = <minecraft:leather_boots>;
val leatherTunic = <minecraft:leather_chestplate>;
val leatherCap = <minecraft:leather_helmet>;
val leatherPants = <minecraft:leather_leggings>;
val oakLeaves = <minecraft:leaves>;
val acaciaLeaves = <minecraft:leaves2>;
val lever = <minecraft:lever>;
val lightWeightedPressurePlate = <minecraft:light_weighted_pressure_plate>;
val litFurnace = <minecraft:lit_furnace>;
val jackOLantern = <minecraft:lit_pumpkin>;
val oakWood = <minecraft:log>;
val acaciaWood = <minecraft:log2>;
val logAll = <minecraft:log:*>;
val magmaCream = <minecraft:magma_cream>;
val emptyMap = <minecraft:map>;
val melon = <minecraft:melon>;
val melonBlock = <minecraft:melon_block>;
val melonSeed = <minecraft:melon_seeds>;
val milkBucket = <minecraft:milk_bucket>;
val minecraft = <minecraft:minecart>;
val mobSpawner = <minecraft:mob_spawner>;
val monsterEgg = <minecraft:monster_egg>;
val mossyCobblestone = <minecraft:mossy_cobblestone>;
val mushroomStew = <minecraft:mushroom_stew>;
val mycelium = <minecraft:mycelium>;
val nameTag = <minecraft:name_tag>;
val netherBrickBlock = <minecraft:nether_brick>;
val netherBrickFence = <minecraft:nether_brick_fence>;
val netherBrickStairs = <minecraft:nether_brick_stairs>;
val netherStar = <minecraft:nether_star>;
val netherWart = <minecraft:nether_wart>;
val netherBrick = <minecraft:netherbrick>;
val netherrack = <minecraft:netherrack>;
val noteblock = <minecraft:noteblock>;
val oakWoodStairs = <minecraft:oak_stairs>;
val obsidian = <minecraft:obsidian>;
val packedIce = <minecraft:packed_ice>;
val painting = <minecraft:painting>;
val paper = <minecraft:paper>;
val piston = <minecraft:piston>;
val oakWoodPlanks = <minecraft:planks>;
val woodPlankAll = <minecraft:planks:*>;
val poisonousPotato = <minecraft:poisonous_potato>;
val rawPorkchop = <minecraft:porkchop>;
val portal = <minecraft:portal>;
val potato = <minecraft:potato>;
val potatoCrop = <minecraft:potatoes>;
val waterBottle = <minecraft:potion>;
val pumpkin = <minecraft:pumpkin>;
val pumpkinPie = <minecraft:pumpkin_pie>;
val pumpkinSeed = <minecraft:pumpkin_seeds>;
val netherQuartz = <minecraft:quartz>;
val quartzBlock = <minecraft:quartz_block>;
val quartzOre = <minecraft:quartz_ore>;
val quartzStairs = <minecraft:quartz_stairs>;
val rail = <minecraft:rail>;
val record11 = <minecraft:record_11>;
val record13 = <minecraft:record_13>;
val recordBlocks = <minecraft:record_blocks>;
val recordCat = <minecraft:record_cat>;
val recordChirp = <minecraft:record_chirp>;
val recordFar = <minecraft:record_far>;
val recordMall = <minecraft:record_mall>;
val recordMallohi = <minecraft:record_mellohi>;
val recordStal = <minecraft:record_stal>;
val recordStrad = <minecraft:record_strad>;
val recordWait = <minecraft:record_wait>;
val recordWard = <minecraft:record_ward>;
val poppy = <minecraft:red_flower>;
val redMushroom = <minecraft:red_mushroom>;
val redMushroomBlock = <minecraft:red_mushroom_block>;
val redstone = <minecraft:redstone>;
val redstoneBlock = <minecraft:redstone_block>;
val redstoneLamp = <minecraft:redstone_lamp>;
val redstoneOre = <minecraft:redstone_ore>;
val redstoneTorch = <minecraft:redstone_torch>;
val reeds = <minecraft:reeds>;
val repeater = <minecraft:repeater>;
val rottenFlesh = <minecraft:rotten_flesh>;
val saddle = <minecraft:saddle>;
val sand = <minecraft:sand>;
val sandstone = <minecraft:sandstone>;
val sandstoneStairs = <minecraft:sandstone_stairs>;
val oakSapling = <minecraft:sapling>;
val allSaplings = <minecraft:sapling:*>;
val shears = <minecraft:shears>;
val sign = <minecraft:sign>;
val skeletonSkull = <minecraft:skull>;
val witherSkeletonSkull = <minecraft:skull:1>;
val slimeBall = <minecraft:slime_ball>;
val snow = <minecraft:snow>;
val snowLayer = <minecraft:snow_layer>;
val snowball = <minecraft:snowball>;
val soulSand = <minecraft:soul_sand>;
val spawnEgg = <minecraft:spawn_egg>;
val glisteringMelon = <minecraft:speckled_melon>;
val spiderEye = <minecraft:spider_eye>;
val sponge = <minecraft:sponge>;
val spruceStairs = <minecraft:spruce_stairs>;
val stainedGlass = <minecraft:stained_glass>;
val stainedGlassPane = <minecraft:stained_glass_pane>;
val whiteStainedClay = <minecraft:stained_hardened_clay>;
val allStainedClay = <minecraft:stained_hardened_clay:*>;
val stick = <minecraft:stick>;
val stickyPiston = <minecraft:sticky_piston>;
val stone = <minecraft:stone>;
val stoneBrickStairs = <minecraft:stone_brick_stairs>;
val stoneButton = <minecraft:stone_button>;
val stonePressurePlate = <minecraft:stone_pressure_plate>;
val stoneSlab = <minecraft:stone_slab>;
val stoneStairs = <minecraft:stone_stairs>;
val stoneBrick = <minecraft:stonebrick>;
val string = <minecraft:string>;
val sugar = <minecraft:sugar>;
val shrub = <minecraft:tallgrass>;
val tnt = <minecraft:tnt>;
val tntMinecart = <minecraft:tnt_minecart>;
val torch = <minecraft:torch>;
val trapdoor = <minecraft:trapdoor>;
val trappedChest = <minecraft:trapped_chest>;
val tripwireHook = <minecraft:tripwire_hook>;
val vine = <minecraft:vine>;
val water = <minecraft:water>;
val waterBucket = <minecraft:water_bucket>;
val lilyPad = <minecraft:waterlily>;
val cobweb = <minecraft:web>;
val wheat = <minecraft:wheat>;
val wheatSeed = <minecraft:wheat_seeds>;
val woodenButton = <minecraft:wooden_button>;
val woodenDoor = <minecraft:wooden_door>;
val woodenPressurePlate = <minecraft:wooden_pressure_plate>;
val oakWoodSlab = <minecraft:wooden_slab>;
val whiteWool = <minecraft:wool>;
val woolAll = <minecraft:wool:*>;
val bookAndQuill = <minecraft:writable_book>;
val writtenBook = <minecraft:written_book>;
val dandelion = <minecraft:yellow_flower>;

##MC Tools
val woodPick = <minecraft:wooden_pickaxe>;
val woodAxe = <minecraft:wooden_axe>;
val woodShovel = <minecraft:wooden_shovel>;
val woodSword = <minecraft:wooden_sword>;
val woodHoe = <minecraft:wooden_hoe>;

val stonePick = <minecraft:stone_pickaxe>;
val stoneAxe = <minecraft:stone_axe>;
val stoneShovel = <minecraft:stone_shovel>;
val stoneSword = <minecraft:stone_sword>;
val stoneHoe = <minecraft:stone_hoe>;

val ironPick = <minecraft:iron_pickaxe>;
val ironAxe = <minecraft:iron_axe>;
val ironShovel = <minecraft:iron_shovel>;
val ironSword = <minecraft:iron_sword>;
val ironHoe = <minecraft:iron_hoe>;

val goldPick = <minecraft:golden_pickaxe>;
val goldAxe = <minecraft:golden_axe>;
val goldShovel = <minecraft:golden_shovel>;
val goldSword = <minecraft:golden_sword>;
val goldHoe = <minecraft:golden_hoe>;

val diamondPick = <minecraft:diamond_pickaxe>;
val diamondAxe = <minecraft:diamond_axe>;
val diamondShovel = <minecraft:diamond_shovel>;
val diamondSword = <minecraft:diamond_sword>;
val diamondHoe = <minecraft:diamond_hoe>;

##MC Dyes
val inkSac = <minecraft:dye>;
val roseRed = <minecraft:dye:1>;
val cactusGreen = <minecraft:dye:2>;
val cocoaBeans = <minecraft:dye:3>;
val lapisLazuli = <minecraft:dye:4>;
val purpleDye = <minecraft:dye:5>;
val cyanDye = <minecraft:dye:6>;
val lightGrayDye = <minecraft:dye:7>;
val grayDye = <minecraft:dye:8>;
val pinkDye = <minecraft:dye:9>;
val limeDye = <minecraft:dye:10>;
val dandelionYellow = <minecraft:dye:11>;
val lightBlueDye = <minecraft:dye:12>;
val magentaDye = <minecraft:dye:13>;
val orangeDye = <minecraft:dye:14>;
val boneMeal = <minecraft:dye:15>;

##FLORA
val hardenedBoots = <flora:item.HardenedBoots>;
val hardenedChestplate = <flora:item.HardenedChestplate>;
val hardenedHelmet = <flora:item.HardenedHelm>;
val hardenedLeggings = <flora:item.HardenedLeggings>;
val leadstoneBoots = <flora:item.LeadstoneBoots>;
val leadstoneChestplate = <flora:item.LeadstoneChestplate>;
val leadstoneHelmet = <flora:item.LeadstoneHelm>;
val leadstoneLeggings = <flora:item.LeadstoneLeggings>;
val redstoneBoots = <flora:item.RedstoneBoots>;
val redstoneChestplate = <flora:item.RedstoneChestplate>;
val redstoneHelmet = <flora:item.RedstoneHelm>;
val redstoneLeggings = <flora:item.RedstoneLeggings>;
val resonantBoots = <flora:item.ResonantBoots>;
val resonantChestplate = <flora:item.ResonantChestplate>;
val resonantHelmet = <flora:item.ResonantHelm>;
val resonantLeggings = <flora:item.ResonantLeggings>;
val fluidicInfuser = <flora:tile.FLORAInfuser>;

##Random Things
val interfacePlayer = <RandomThings:playerinterface>;
val interfacePlayerCreative = <RandomThings:creativePlayerInterface>;
val fluidDisplay = <RandomThings:fluidDisplay>;
val fertilizedDirt = <RandomThings:fertilizedDirt>;
val itemCollector = <RandomThings:itemCollector>;
val itemCollectorAdvanced = <RandomThings:advancedItemCollector>;
val onlineDetector = <RandomThings:onlineDetector>;
val sensorMoon = <RandomThings:moonSensor>;
val interfaceNotification = <RandomThings:notificationInterface>;
val lampLapis = <RandomThings:lapisLamp>;
val leverWireless = <RandomThings:wirelessLever>;
val machineDyeing = <RandomThings:dyeingMachine>;
val stationImbuing = <RandomThings:imbuingStation>;
val capsuleBiome = <RandomThings:biomeCapsule>;
val painterBiome = <RandomThings:biomePainter>;
val whiteStoneUncharged = <RandomThings:whitestone>;
val whiteStoneCharged = <RandomThings:whitestone:1>;
val forceMagnetic = <RandomThings:magneticForce>;
val voidStone = <RandomThings:voidStone>;
val enderLetter = <RandomThings:enderLetter>;
val spectreKey = <RandomThings:spectreKey>;
val helmetSpectre = <RandomThings:spectreHelmet>;
val chestplateSpectre = <RandomThings:spectreChestplate>;
val leggingsSpectre = <RandomThings:spectreLeggings>;
val bootsSpectre = <RandomThings:spectreBoots>;
val swordSpectre = <RandomThings:spectreSword>;
val spiritBinder = <RandomThings:spiritBinder>;
val poisonFlask = <RandomThings:imbue>;
val experienceFlask = <RandomThings:imbue:1>;
val fireFlask = <RandomThings:imbue:2>;
val witheringFlask = <RandomThings:imbue:3>;
val weaknessFlask = <RandomThings:imbue:4>;
val spectreFlask = <RandomThings:imbue:5>;
val demorpher = <RandomThings:demorpher>;
val swordCreative = <RandomThings:creativeSword>;
val growerCreative = <RandomThings:creativeGrower>;
val soundRecorder = <RandomThings:soundRecorder>;
val corePlayer = <RandomThings:ingredient>;
val stickObsidian = <RandomThings:ingredient:1>;
val fragmentEnder = <RandomThings:ingredient:2>;
val ectoplasm = <RandomThings:ingredient:3>;
val ironSpectre = <RandomThings:ingredient:4>;
val coreTransformation = <RandomThings:ingredient:5>;
val kojaku = <RandomThings:kojaku>;

##Santa’s Decor
val blazeBrick = <santasdecor:blaze_brick>;
val chiseledBlazeBrick = <santasdecor:blaze_chiseled>;
val chiseledBlazeQuartz = <santasdecor:blaze_chiseled_quartz>;
val blazeCobblestone = <santasdecor:blaze_cobble>;
val blazeLog = <santasdecor:blaze_log>;
val blazePillar = <santasdecor:blaze_pillar>;
val blazePlank = <santasdecor:blaze_plank>;
val blazeQuartz = <santasdecor:blaze_quartz>;
val blazeStone = <santasdecor:blaze_stone>;
val boneBrick = <santasdecor:bone_brick>;
val chiseledBoneBrick = <santasdecor:bone_chiseled>;
val boneCobblestone = <santasdecor:bone_cobble>;
val boneLog = <santasdecor:bone_log>;
val bonePlank = <santasdecor:bone_plank> ;
val boneStone = <santasdecor:bone_stone>;
val burntBricks = <santasdecor:burnt_brick>;
val chiseledBurntBricks = <santasdecor:burnt_chiseled>;
val chiseledBurntQuartz = <santasdecor:burnt_chiseled_quartz>;
val burntCobblestone = <santasdecor:burnt_cobble>;
val burntLog = <santasdecor:burnt_log>;
val burntPillar = <santasdecor:burnt_pillar_quartz>;
val burntPlank = <santasdecor:burnt_plank>;
val burntQuartz = <santasdecor:burnt_quartz>;
val burntStone = <santasdecor:burnt_stone>;
val enderBrick = <santasdecor:ender_brick>;
val chiseledEnderBrick = <santasdecor:ender_chiseled>;
val chiseledEnderQuartz = <santasdecor:ender_chiseled_quartz>;
val enderCobblestone = <santasdecor:ender_cobble>;
val enderLog = <santasdecor:ender_log>;
val enderPillar = <santasdecor:ender_pillar>;
val enderPlank = <santasdecor:ender_plank>;
val enderQuartz = <santasdecor:ender_quartz>;
val enderStone = <santasdecor:ender_stone>;
val fleshBrick = <santasdecor:flesh_brick>;
val chiseledFleshBrick = <santasdecor:flesh_chiseled>;
val fleshCobblestone = <santasdecor:flesh_cobble>;
val fleshLog = <santasdecor:flesh_log>;
val fleshPlank = <santasdecor:flesh_plank>;
val fleshStone = <santasdecor:flesh_stone>;
val icyBrick = <santasdecor:icy_brick>;
val chiseledIcyBrick = <santasdecor:icy_chiseled>;
val chiseledIcy Quartz = <santasdecor:icy_chiseled_quartz>;
val icyCobblestone = <santasdecor:icy_cobble>;
val icyLog = <santasdecor:icy_log>;
val icyPillar = <santasdecor:icy_pillar>;
val icyPlank = <santasdecor:icy_plank>;
val icyQuartz = <santasdecor:icy_quartz>;
val icyStone = <santasdecor:icy_stone>;
val leatherBrick = <santasdecor:leather_brick>;
val chiseledLeatherBrick = <santasdecor:leather_chiseled>;
val leatherCobblestone = <santasdecor:leather_cobble>;
val leatherLog = <santasdecor:leather_log>;
val leatherPlank = <santasdecor:leather_plank>;
val leatherStone = <santasdecor:leather_stone>;
val slimyBrick = <santasdecor:slimy_brick>;
val chiseledSlimyBrick = <santasdecor:slimy_chiseled>;
val chiseledSlimyQuartz = <santasdecor:slimy_chiseled_quartz>;
val slimyCobblestone = <santasdecor:slimy_cobble>;
val slimyLog = <santasdecor:slimy_log>;
val slimyPillar = <santasdecor:slimy_pillar_quartz>;
val slimyPlank = <santasdecor:slimy_plank> ;
val slimyQuartz = <santasdecor:slimy_quartz>;
val slimyStone = <santasdecor:slimy_stone>;
val snowyBrick = <santasdecor:snowy_brick>;
val chiseledSnowyBrick = <santasdecor:snowy_chiseled>;
val snowyCobblestone = <santasdecor:snowy_cobble>;
val snowyLog = <santasdecor:snowy_log>;
val snowyPlank = <santasdecor:snowy_plank>;
val snowyStone = <santasdecor:snowy_stone>;

##Santa’s Toys
val enderBlaster = <santastoys:ender_blaster>;
val match = <santastoys:match>;
val netherBlaster = <santastoys:nether_blaster>; 

##Witchery
val waterArtichokeSeeds = <witchery:seedsartichoke>; 
val belladonnaSeeds = <witchery:seedsbelladonna>;
val mandrakeSeeds = <witchery:seedsmandrake>;
val minedrakeBulb = <witchery:seedsmindrake>;
val snowbellSeeds = <witchery:seedssnowbell>;
val wormwoodSeeds = <witchery:seedswormwood>; 
val seepingShoes = <witchery:seepingshoes>;
val poppetshelfCompass = <witchery:shelfcompass>;  
val snowbell = <witchery:snowbell>; 
val wispyCotton =  <witchery:somniancotton>; 
val spanishMoss = <witchery:spanishmoss>;
val spectralStone = <witchery:spectralstone>;
val spinningWheel = <witchery:spinningwheel>; 
val flowingSpirit = <witchery:spiritflowing>; 
val spiritPortal = <witchery:spiritportal>;
val alderStairs = <witchery:stairswoodalder>;
val hawthornStairs = <witchery:stairswoodhawthorn>; 
val rowanStairs = <witchery:stairswoodrowan>;
val statueoftheGoddess = <witchery:statuegoddess>;
val statueofhobgoblinPatron = <witchery:statueofworship>; 
val oakStockade = <witchery:stockade>;  
val taglockKit = <witchery:taglockkit>;
val tormentPortal = <witchery:tormentportal>; 
val tormentStone = <witchery:tormentstone>; 
val trentEffigy = <witchery:trent>;
val voidBramble = <witchery:voidbramble>;
val wickerBundle = <witchery:wickerbundle>;
val witchesOvenBurning =  <witchery:witchesovenburning>;
val witchesOven =  <witchery:witchesovenidle>;
val witchHand = <witchery:witchhand>; 
val witchesHat = <witchery:witchhat>;
val rowanLeaves = <witchery:witchleaves>;  
val rowanWood = <witchery:witchlog>;
val witchesRobes = <witchery:witchrobe>;
val rowanSapling = <witchery:witchsapling>;  
val witchLadder = <witchery:witchsladder>; 
val rowanPlanks = <witchery:witchwood>;
val rowanSlabDouble = <witchery:witchwooddoubleslab>; 
val rowanSlab = <witchery:witchwoodslab>; 
val wormwood = <witchery:wormwood>;
val alderWoodDoor = <witchery:alderwooddoor>;
val alluringSkull = <witchery:alluringskull>;
val altar = <witchery:altar>;
val arthana = <witchery:arthana>;
val waterArtichoke = <witchery:artichoke>;
val babaYagasHat = <witchery:babashat>; 
val barkBelt = <witchery:barkbelt>; 
val barrier = <witchery:barrier>;
val belladonna = <witchery:belladonna>; 
val bitingBelt = <witchery:bitingbelt>;
val bloodPoppy = <witchery:bloodrose>; 
val boline = <witchery:boline>;
val enderBramble = <witchery:bramble>;  
val brazier = <witchery:brazier>;
val brewBag = <witchery:brewbag>;
val hollowTearsBucket = <witchery:buckethollowtears>; 
val spiritBucket = <witchery:bucketspirit>; 
val candelabra = <witchery:candelabra>; 
val chalice = <witchery:chalice>;
val goldenChalk = <witchery:chalkheart>;
val infernalChalk = <witchery:chalkinfernal>;
val otherwhereChalk = <witchery:chalkotherwhere>; 
val ritualChalk = <witchery:chalkritual>;  
val heartGlyph = <witchery:circle>;
val infernalGlyph = <witchery:circleglyphinfernal>;
val otherwhereGlyph = <witchery:circleglyphotherwhere>;
val ritualGlyph = <witchery:circleglyphritual>;
val circleTalisman = <witchery:circletalisman>;
val critterSnare = <witchery:crittersnare>;
val crystalBall = <witchery:crystalball>;
val deathsHood = <witchery:deathscowl>;
val deathsFootwear = <witchery:deathsfeet>;
val deathsHand = <witchery:deathshand>;
val deathsRobe = <witchery:deathsrobe>;
val statueBrokenCurses = <witchery:decursedirected>;
val statueOccludedSummons = <witchery:decurseteleport>;
val demonHeart = <witchery:demonheart>;
val devilsTongueCharm = <witchery:devilstonguecharm>;
val distilleryBurning = <witchery:distilleryburning>;
val distillery = <witchery:distilleryidle>;
val lavaDiviner = <witchery:divinerlava>; 
val waterDiviner = <witchery:divinerwater>;
val dreamWeaver = <witchery:dreamcatcher>;
val staffDuplication = <witchery:dupstaff>;
val emberMoss = <witchery:embermoss>;
val filteredFumeFunnel = <witchery:filteredfumefunnel>;
val solid = <witchery:force>;
val fumeFunnel = <witchery:fumefunnel>;
val glintWeed = <witchery:glintweed>;
val glowGlobe = <witchery:glowglobe>;
val Grassper = <witchery:grassper>;
val gulgsGurdle = <witchery:gurdleofgulg>;
val pistolCrossbow = <witchery:handbow>; 
val flowingSpirit = <witchery:hollowtears>;
val witchHunterBoots = <witchery:hunterboots>;
val witchHunterCoat = <witchery:huntercoat>;
val witchHunterHat = <witchery:hunterhat>;
val witchHunterTrousers = <witchery:hunterlegs>;
val spearHuntsman = <witchery:huntsmanspear>;
val icySlippers = <witchery:iceslippers>;
val infinityEgg = <witchery:infinityegg>;
val kettle = <witchery:kettle>;
val kobolditePick = <witchery:kobolditepickaxe>; 
val leapingLily = <witchery:leapinglily>;
val leechChest = <witchery:leechchest>;
val parasyticLouse = <witchery:louse>;
val mandrake = <witchery:mandrake>;
val minedrake = <witchery:mindrake>;
val mutatingSprig = <witchery:mutator>;
val mysticBranch = <witchery:mysticbranch>;
val necromancerRobes = <witchery:necromancerrobe>;
val perpetualIce = <witchery:perpetualice>;
val poppyWebs = <witchery:plantmine>;
val polynesiaCharm = <witchery:polynesiacharm>;
val poppet = <witchery:poppet>;
val poppetShelf = <witchery:poppetshelf>;
val universalAntidote = <witchery:potion>;
val mogsQuiver = <witchery:quiverofmog>;
val refillingChest = <witchery:refillingchest>;
val rowanWoodDoor = <witchery:rowanwooddoor>;
val rubySlippers = <witchery:rubyslippers>;
val scarecrow = <witchery:scarecrow>;
val icyNeedle = <witchery:ingredient:78>;
val frozenHeart = <witchery:ingredient:79>;
val mutandis = <witchery:ingredient:14>;
val poppet = <witchery:poppet>;
val poppetEarth = <witchery:poppet:1>;
val poppetFire = <witchery:poppet:3>;
val poppetDeath = <witchery:poppet:6>;
val chaliceFilled = <witchery:ingredient:1>;
val kobolditeIngot = <witchery:ingredient:150>;
val goldenString = <witchery:ingredient:102>;
val diamondVapor = <witchery:ingredient:29>;
val pureOdour = <witchery:ingredient:36>;
val leatherImpregnated = <witchery:ingredient:72>;
val exhaleHorned = <witchery:ingredient:31>;
val breathGoddess = <witchery:ingredient:32>;
val hintRebirth = <witchery:ingredient:33>;
val mandrakeRoot = <witchery:ingredient:22>;
val woodAsh = <witchery:ingredient:18>;
val quicklime = <witchery:ingredient:16>;
val attunedStone = <witchery:ingredient:10>;
val chargedStone = <witchery:ingredient:11>;
val creeperHeart = <witchery:ingredient:74>;
val batWool = <witchery:ingredient:24>;
val luckDrop = <witchery:ingredient:39>;
val redstoneSoup = <witchery:ingredient:40>;
val candelabra = <witchery:ingredient>;
val whiffOfMagic = <witchery:ingredient:34>;
val oilOfVitriol = <witchery:ingredient:30>;
val breathOfTheGoddess = <witchery:ingredient:32>;
val exhaleOfTheHornedOne = <witchery:ingredient:31>;
val tearOfTheGoddess = <witchery:ingredient:37>;
val gypsum = <witchery:ingredient:17>;
val waterArtichokeGlobe = <witchery:ingredient:69>;

##Twilight Forest
val alphaFur = <TwilightForest:alphaFur>;
val arcticBoots = <TwilightForest:arcticBoots>;
val arcticFur = <TwilightForest:arcticFur>;
val arcticHelm = <TwilightForest:arcticHelp>;
val arcticLegs = <TwilightForest:arcticLegs>;
val arcticPlate = <TwilightForest:arcticPlate>;
val armorShards = <TwilightForest:armorShards>;
val borerEssence = <TwilightForest:borerEssence>;
val carminite = <TwilightForest:carminite>;
val charmOfKeeping1 = <TwilightForest:charmOfKeeping1>;
val charmOfKeeping2 = <TwilightForest:charmOfKeeping2>;
val charmOfKeeping3 = <TwilightForest:charmOfKeeping3>;
val charmOfLife1 = <TwilightForest:charmOfLife1>;
val charmOfLife2 = <TwilightForest:charmOfLife2>;
val crumbleHorn = <TwilightForest:crumbleHorn>;
val emptyMagicMap = <TwilightForest:emptyMagicMap>;
val emptyMazeMap = <TwilightForest:emptyMazeMap>;
val emptyOreMap = <TwilightForest:emptyOreMap>;
val experiment115 = <TwilightForest:experiment115>;
val fieryBlood = <TwilightForest:fieryBlood>;
val fieryBoots = <TwilightForest:fieryBoots>;
val fieryHelm = <TwilightForest:fieryHelm>;
val fieryIngot = <TwilightForest:fieryIngot>;
val fieryLegs = <TwilightForest:fieryLegs>;
val fieryPick = <TwilightForest:fieryPick>;
val fieryPlate = <TwilightForest:fieryPlate>;
val fierySword = <TwilightForest:fierySword>;
val fieryTears = <TwilightForest:fieryTears>;
val hydraChop = <TwilightForest:hydraChop>;
val iceBomb = <TwilightForest:iceBomb>;
val ironwoodAxe = <TwilightForest:ironwoodAxe>;
val ironwoodBoots = <TwilightForest:ironwoodBoots>;
val ironwoodHelm = <TwilightForest:ironwoodHelm>;
val ironwoodHoe = <TwilightForest:ironwoodHoe>;
val ironwoodIngot = <TwilightForest:ironwoodIngot>;
val ironwoodLegs = <TwilightForest:ironwoodLegs>;
val ironwoodPick = <TwilightForest:ironwoodPick>;
val ironwoodPlate = <TwilightForest:ironwoodPlate>;
val ironwoodRaw = <TwilightForest:ironwoodRaw>;
val ironwoodShovel = <TwilightForest:ironwoodShovel>;
val ironwoodSword = <TwilightForest:ironwoodSword>;
val knightMetal = <TwilightForest:knightMetal>;
val knightlyAxe = <TwilightForest:knightlyAxe>;
val knightlyBoots = <TwilightForest:knightlyBoots>;
val knightlyHelm = <TwilightForest:knightlyHelm>;
val knightlyLegs = <TwilightForest:knightlyLegs>;
val knightlyPick = <TwilightForest:knightlyPick>;
val knightlyPlate = <TwilightForest:knightlyPlate>;
val knightlySword = <TwilightForest:knightlySword>;
val lampOfCinders = <TwilightForest:lampOfCinders>;
val legsNaga = <TwilightForest:legsNaga>;
val liveRoot = <TwilightForest:liveRoot>;
val magicMap = <TwilightForest:magicMap>;
val magicMapFocus = <TwilightForest:magicMapFocus>;
val mazeMap = <TwilightForest:mazeMap>;
val mazeMapFocus = <TwilightForest:mazeMapFocus>;
val mazeWafer = <TwilightForest:mazeWafer>;
val mazebreaker = <TwilightForest:mazebreakerPick>;
val meefRaw = <TwilightForest:meefRaw>;
val meefSteak = <TwilightForest:meefSteak>;
val meefStroganoff = <TwilightForest:meefStroganoff>;
val minotaurAxe = <TwilightForest:minotaurAxe>;
val moonwormQueen = <TwilightForest:moonwormQueen>;
val nagaScale = <TwilightForest:nagaScale>;
val oreMagnet = <TwilightForest:oreMagnet>;
val oreMap = <TwilightForest:oreMap>;
val oreMeter = <TwilightForest:oreMeter>;
val peacockFan = <TwilightForest:peacockFan>;
val phantomHelm = <TwilightForest:phantomHelm>;
val phantomPlate = <TwilightForest:phantomPlate>;
val plateNaga = <TwilightForest:plateNaga>;
val scepterLifeDrain = <TwilightForest:scepterLifeDrain>;
val scepterTwilight = <TwilightForest:scepterTwilight>;
val scepterZombie = <TwilightForest:scepterZombie>;
val armorShardCluster = <TwilightForest:shardCluster>;
val steeleafAxe = <TwilightForest:steeleafAxe>;
val steeleafBoots = <TwilightForest:steeleafBoots>;
val steeleafHelm = <TwilightForest:steeleafHelm>;
val steeleafHoe = <TwilightForest:steeleafHoe>;
val steeleafIngot = <TwilightForest:steeleafIngot>;
val steeleafLegs = <TwilightForest:steeleafLegs>;
val steeleafPick = <TwilightForest:steeleafPick>;
val steeleafPlate = <TwilightForest:steeleafPlate>;
val steeleafShovel = <TwilightForest:steeleafShovel>;
val steeleafSword = <TwilightForest:steeleafSword>;
val ravenFeather = <TwilightForest:tfFeather>;
val torchberries = <TwilightForest:torchberries>;
val towerKey = <TwilightForest:towerKey>;
val transformPowder = <TwilightForest:transformPowder>;
val trophy = <TwilightForest:trophy>;
val venisonCooked = <TwilightForest:venisonCooked>;
val venisonRaw = <TwilightForest:venisonRaw>;
val yetiBoots = <TwilightForest:yetiBoots>;
val yetiHelm = <TwilightForest:yetiHelm>;
val yetiLegs = <TwilightForest:yetiLegs>;
val yetiPlate = <TwilightForest:yetiPlate>;
val AuroraDoubleSlab = <TwilightForest:AuroraDoubleSlab>;
val AuroraPillar = <TwilightForest:AuroraPillar>;
val AuroraSlab = <TwilightForest:AuroraSlab>;
val DarkLeaves = <TwilightForest:DarkLeaves>;
val AuroraBrick = <TwilightForest:TFAuroraBrick>;
val BurntThorns = <TwilightForest:TFBurntThorns>;
val Cicada = <TwilightForest:TFCicada>;
val Deadrock = <TwilightForest:TFDeadrock>;
val FireJet = <TwilightForest:TFFireJet>;
val Firefly = <TwilightForest:TFFirefly>;
val FireflyJar = <TwilightForest:TFFireflyJar>;
val Hedge = <TwilightForest:TFHedge>;
val Leaves = <TwilightForest:TFLeaves>;
val Leaves3 = <TwilightForest:TFLeaves3>;
val Log = <TwilightForest:TFLog>;
val MagicLeaves = <TwilightForest:TFMagicLeaves>;
val MagicLog = <TwilightForest:TFMagicLog>;
val MagicLogSpecial = <TwilightForest:TFMagicLogSpecial>;
val Mazestone = <TwilightForest:TFMazestone>;
val Moonworm = <TwilightForest:TFMoonworm>;
val Nagastone = <TwilightForest:TFNagastone>;
val Plant = <TwilightForest:TFPlant>;
val Portal = <TwilightForest:TFPortal>;
val Roots = <TwilightForest:TFRoots>;
val Sapling = <TwilightForest:TFSapling>;
val strongholdShield = <TwilightForest:TFShield>;
val ThornRose = <TwilightForest:TFThornRose>;
val Thorns = <TwilightForest:TFThorns>;
val TowerDevice = <TwilightForest:TFTowerDevice>;
val TowerStone = <TwilightForest:TFTowerStone>;
val TowerTranslucent = <TwilightForest:TFTowerTranslucent>;
val Trophy = <TwilightForest:TFTrophy>;
val TrophyPedestal = <TwilightForest:TFTrophyPedestal>;
val UncraftingTable = <TwilightForest:TFUncraftingTable>;
val UnderBrick = <TwilightForest:TFUnderBrick>;
val mayapple = <TwilightForest:TFPlant:4>;

//Keep this at the bottom
print("MinetweakerLib Loaded");
