## MinetweakerLib
/* Defines many, many variables for Minetweaker.
Is a must for any PhoenixConfig scripts to run.
Is not done yet. Many more mods to document. */

##Botania
val alchemyCatalyst = <Botania:alchemyCatalyst>;
val elvenGatewayCore = <Botania:alfheimPortal>;
val petalApothecary = <Botania:altar>;
val bandAura = <Botania:auraRing>;
val gereaterBandAura = <Botania:auraRingGreater>;
val rodBifrost = <Botania:bifrost>;
val buriedPetals = <Botania:buriedPetals>;
val conjurationCatalyst = <Botania:conjurationCatalyst>;
val hellishBrick = <Botania:customBrick>;
val hellishBrickSlab = <Botania:customBrick0Slab>;
val hellishBrickSlabFull = <Botania:customBrick0SlabFull>;
val hellishBrickStairs = <Botania:customBrick0Stairs>;
val soulBrickSlab = <Botania:customBrick1Slab>;
val soulBrickSlabFull = <Botania:customBrick1SlabFull> ;
val soulBrickStairs = <Botania:customBrick1Stairs>;
val frostyBrickSlab = <Botania:customBrick2Slab>;
val frostyBrickSlabFull = <Botania:customBrick2SlabFull>;
val frostyBrickStairs = <Botania:customBrick2Stairs>;
val roofTileSlab = <Botania:customBrick3Slab> ;
val roofTileSlabFull = <Botania:customBrick3SlabFull>;
val roofTileStairs = <Botania:customBrick3Stairs>;
val rodLands = <Botania:dirtRod>;
val manaDistributor = <Botania:distributor>;
val divaCharm = <Botania:divaCharm>;
val dreamwood = <Botania:dreamwood>;
val dreamwoodSlab = <Botania:dreamwood0Slab>;
val dreamwoodSlabFull = <Botania:dreamwood0SlabFull>;
val dreamwoodStairs = <Botania:dreamwood0Stairs>;
val dreamwoodPlankSlab = <Botania:dreamwood1Slab>;
val dreamwoodPlankSlabFull = <Botania:dreamwood1SlabFull>;
val dreamwoodPlankStairs = <Botania:dreamwood1Stairs>;
val floralPowder = <Botania:dye>;
val elementiumAxe = <Botania:elementiumAxe>;
val elementiumBoots = <Botania:elementiumBoots>;
val elementiumChestplate = <Botania:elementiumChest>;
val elementiumHelmet = <Botania:elementiumHelm>;
val elementiumHelmetRevealing = <Botania:elementiumHelmReveal>;
val elementiumLeggings = <Botania:elementiumLegs>;
val elementiumPick = <Botania:elementiumPick>;
val elementiumShears = <Botania:elementiumShears>;
val elementiumShovel = <Botania:elementiumShovel>;
val elementiumSword = <Botania:elementiumSword> ;
val manaEnchanter = <Botania:enchanter>;
val soulscribe = <Botania:enderDagger>;
val enderOverseer = <Botania:enderEyeBlock>;
val enderHand = <Botania:enderHand>;
val floralFertilier = <Botania:fertilizer>;
val hellRod = <Botania:fireRod>;
val flugelTiara = <Botania:flightTiara>;
val mysticalFlower = <Botania:flower>;
val drumWild = <Botania:forestDrum>;
val eyeAncients = <Botania:forestEye>;
val goldenLaurel = <Botania:goldenLaurel>;
val hornWild = <Botania:grassHorn>;
val pastureSeeds = <Botania:grassSeeds>;
val snowflakePendant = <Botania:icePendant>;
val spectator = <Botania:itemFinder>;
val tectonicGirdle = <Botania:knockbackBelt>;
val laputaShard =  <Botania:laputaShard>;
val pyroclastPendant = <Botania:lavaPendant>;
val manaLens =  <Botania:lens>;
val lexicaBotania = <Botania:lexicon>;
val livingrock = <Botania:livingrock>;
val livingrockSlab = <Botania:livingrock0Slab>;
val livingrockSlabFull = <Botania:livingrock0SlabFull>;
val livingrockStairs = <Botania:livingrock0Stairs>;
val livingrockBrickSlab = <Botania:livingrock1Slab>;
val livingrockBrickSlabFull = <Botania:livingrock1SlabFull>;
val livingrockBrickStairs = <Botania:livingrock1Stairs>;
val livingwood = <Botania:livingwood>;
val livingwoodSlab = <Botania:livingwood0Slab>;
val livingwoodSlabFull = <Botania:livingwood0SlabFull>;
val livingwoodStairs = <Botania:livingwood0Stairs>;
val livingwoodPlanksSlab = <Botania:livingwood1Slab>;
val livingwoodPlanksSlabFull = <Botania:livingwood1SlabFull>;
val livingwoodPlanksStairs = <Botania:livingwood1Stairs>;
val magnetRing = <Botania:magnetRing>;
val unstableBeacon = <Botania:manaBeacon>;
val manaBottle = <Botania:manaBottle>;
val manaCookie =  <Botania:manaCookie>;
val manaDetector = <Botania:manaDetector>;
val manaBlaster = <Botania:manaGun>;
val manaMirror = <Botania:manaMirror>;
val manasteelIngot = <Botania:manaResource>;
val manaPearl = <Botania:manaResource:1>;
val manaDiamond = <Botania:manaResource:2>;
val livingwoodTwig = <Botania:manaResource:3>;
val terrasteelIngot = <Botania:manaResource:4>;
val gaiaSpirit = <Botania:manaResource:5>;
val redstoneRoot = <Botania:manaResource:6>;
val elementiumIngot = <Botania:manaResource:7>;
val pixieDust = <Botania:manaResource:8>;
val dragonStone = <Botania:manaResource:9>;
val prismarineShard = <Botania:manaResource:10>;
val craftingPlaceholder = <Botania:manaResource:11>;
val manaRing = <Botania:manaRing>;
val greaterManaRing = <Botania:manaRingGreater>;
val manaTablet = <Botania:manaTablet>;
val manaVoid = <Botania:manaVoid>;
val manasteelAxe = <Botania:manasteelAxe>;
val manasteelBoots = <Botania:manasteelBoots>;
val manasteelChestplate = <Botania:manasteelChest>;
val manasteelHelmet = <Botania:manasteelHelm>;
val manasteelHelmetRevealing = <Botania:manasteelHelmReveal>;
val manasteelLeggings = <Botania:manasteelLegs>;
val manasteelPick = <Botania:manasteelPick>;
val manasteelShears = <Botania:manasteelShears>;
val manasteelShovel = <Botania:manasteelShovel>;
val manasteelSword = <Botania:manasteelSword>;
val floatingFlower = <Botania:miniIsland>;
val ringMantle = <Botania:miningRing>;
val extrapolatedBucket = <Botania:openBucket>;
val openCrate = <Botania:openCrate>;
val pestleAndMortar = <Botania:pestleAndMortar>;
val forceRelay = <Botania:pistonRelay>;
val greatFairyRing = <Botania:pixieRing>;
val abstrusePlatform = <Botania:platform>;
val prismarine = <Botania:prismarine>;
val prismarineSlab = <Botania:prismarine0Slab>;
val prismarineSlabFull = <Botania:prismarine0SlabFull>;
val prismarineStairs = <Botania:prismarine0Stairs>;
val prismarineBrickSlab = <Botania:prismarine1Slab>;
val prismarineBrickSlabFull = <Botania:prismarine1SlabFull>;
val prismarineBrickStairs = <Botania:prismarine1Stairs>;
val darkPrismarineSlab = <Botania:prismarine2Slab>;
val darkPrismarineSlabFull = <Botania:prismarine2SlabFull> ;
val darkPrismarineStairs = <Botania:prismarine2Stairs>;
val manaPylon = <Botania:pylon>;
val smokyQuartz = <Botania:quartz>;
val blazeQuartzSlabFull = <Botania:quartzSlabBlazeFull>;
val blazeQuartzSlab = <Botania:quartzSlabBlazeHalf>;
val smokeyQuartzSlabFull = <Botania:quartzSlabDarkFull>;
val smokeyQuartzSlab = <Botania:quartzSlabDarkHalf>;
val elfQuartzSlabFull = <Botania:quartzSlabElfFull>;
val elfQuartzSlab = <Botania:quartzSlabElfHalf>;
val lavenderQuartzSlabFull = <Botania:quartzSlabLavenderFull>;
val lavenderQuartzSlab = <Botania:quartzSlabLavenderHalf>;
val manaQuartzSlabFull = <Botania:quartzSlabManaFull>;
val manaQuartzSlab = <Botania:quartzSlabManaHalf>;
val redQuartzSlabFull = <Botania:quartzSlabRedFull>;
val redQuartzSlab = <Botania:quartzSlabRedHalf>;
val blazeQuartzStairs = <Botania:quartzStairsBlaze>;
val smokeyQuartzStairs = <Botania:quartzStairsBlaze>;	
val elfQuartzStairs = <Botania:quartzStairsElf>;
val lavenderQuartzStairs = <Botania:quartzStairsLavender>;
val manaQuartzStairs = <Botania:quartzStairsMana>;
val redQuartzStairs = <Botania:quartzStairsRed>;
val blazeQuartzBlock = <Botania:quartzTypeBlaze>;
val smokeyQuartzBlock = <Botania:quartzTypeDark>;
val elfQuartzBlock = <Botania:quartzTypeDark>;
val lavenderQuartzBlock = <Botania:quartzTypeLavender>;
val manaQuartzBlock = <Botania:quartzTypeMana>;
val redQuartzBlock = <Botania:quartzTypeRed>;
val rainbowRod = <Botania:rainbowRod>;
val farReachRing = <Botania:reachRing>;
val reedBlock = <Botania:reedBlock>;
val reedSlab = <Botania:reedBlock0Slab>;
val reedSlabFull = <Botania:reedBlock0SlabFull>;
val reedStairs = <Botania:reedBlock0Stairs>;
val runicAltar = <Botania:runeAltar>;
val seaLantern = <Botania:seaLamp>;
val terrasteelBlock = <Botania:storage:1>;
val glimmeringFlower = <Botania:shinyFlower>;
val signalFlare = <Botania:signalFlare>;
val rodHighlands = <Botania:skyDirtRod>;
val slingshot = <Botania:slingshot>;
val solidVine = <Botania:solidVine>;
val lifeImbuer = <Botania:spawnerClaw>;
val lifeAggregator = <Botania:spawnerMover>;
val botaniaFlower = <Botania:specialFlower>;
val manaSpreader = <Botania:spreader>;
val crimsonPendant = <Botania:superLavaPendant>;
val globetrotterSash = <Botania:superTravelBelt>;
val terraPick = <Botania:terraPick>;
val terraSword = <Botania:terraSword>;
val terrafirmaRod = <Botania:terraformRod>;
val terrasteelBoots = <Botania:terrasteelBoots>;
val terrasteelChestplate = <Botania:terrasteelChest>;
val terrasteelHelmet = <Botania:terrasteelHelm>;
val terrasteelHelmetRevealing = <Botania:terrasteelHelmReveal>;
val terrasteelLegs = <Botania:terrasteelLegs>;
val thatch = <Botania:thatch>;
val thatchSlab = <Botania:thatch0Slab>;
val thatchSlabFull = <Botania:thatch0SlabFull>;
val thatchStairs = <Botania:thatch0Stairs>;
val tinyPlanet = <Botania:tinyPlanet>;
val tinyPlanetBlock = <Botania:tinyPlanetBlock>;
val tinyPotato = <Botania:tinyPotato>;
val skiesRod = <Botania:tornadoRod>;
val soujournersSash = <Botania:travelBelt>;
val turntable = <Botania:turntable>;
val wandForest = <Botania:twigWand>;
val unstableCube = <Botania:unstableBlock>;
val vineBall = <Botania:vineBall>;
val necrodermalVirus = <Botania:virus>;
val chordataRing = <Botania:waterRing>;
val seasRod = <Botania:waterRod>;

##BTN Flora
val jadedAmaranthus = <Botania:specialFlower>.withTag({type: "jadedAmaranthus"});
val endoFlame = <Botania:specialFlower>.withTag({type: "endoflame"});
val pureDaisy = <Botania:specialFlower>.withTag({type: "puredaisy"});
val manaStar = <Botania:specialFlower>.withTag({type: "manastar"});
val dayBloom = <Botania:specialFlower>.withTag({type: "daybloom"});
val nightShade = <Botania:specialFlower>.withTag({type: "nightshade"});
val thermaLily = <Botania:specialFlower>.withTag({type: "thermalily"});
val rosaArcana = <Botania:specialFlower>.withTag({type: "arcanerose"});
val munchDew = <Botania:specialFlower>.withTag({type: "munchdew"});
val entropinnyum = <Botania:specialFlower>.withTag({type: "entropinnyum"});
val kekimurus = <Botania:specialFlower>.withTag({type: "kekimurus"});
val gourmaryllis = <Botania:specialFlower>.withTag({type: "gourmaryllis"});
val belleThorn = <Botania:specialFlower>.withTag({type: "bellethorn"});
val dreadThorn = <Botania:specialFlower>.withTag({type: "dreadthorn"});
val heiseiDream = <Botania:specialFlower>.withTag({type: "heiseiDream"});
val tigersEye = <Botania:specialFlower>.withTag({type: "tigerseye"});
val oreChid = <Botania:specialFlower>.withTag({type: "orechid"});
val exoFlame = <Botania:specialFlower>.withTag({type: "exoflame"});
val agricarnation = <Botania:specialFlower>.withTag({type: "agricarnation"});
val hopperHock = <Botania:specialFlower>.withTag({type: "hopperhock"});
val rennuncarpus = <Botania:specialFlower>.withTag({type: "rannuncarpus"});
val tangleBerrie = <Botania:specialFlower>.withTag({type: "tangleberrie"});
val jiyuulia = <Botania:specialFlower>.withTag({type: "jiyuulia"});
val hyacidus = <Botania:specialFlower>.withTag({type: "hyacidus"});
val pollidisiac = <Botania:specialFlower>.withTag({type: "pollidisiac"});
val clayConia = <Botania:specialFlower>.withTag({type: "clayconia"});
val loonium = <Botania:specialFlower>.withTag({type: "loonium"});
val daffomill = <Botania:specialFlower>.withTag({type: "daffomill"});
val vinculotus = <Botania:specialFlower>.withTag({type: "vinculotus"});
val hydroangeas = <Botania:specialFlower>.withTag({type: "hydroangeas"});
val fallenKanade = <Botania:specialFlower>.withTag({type: "fallenKanade"});

##BTN Petals
val whiteMysticalPetal = <Botania:petal>;
val orangeMysticalPetal = <Botania:petal:1>;
val magentaMysticalPetal = <Botania:petal:2>;
val lightBlueMysticalPetal = <Botania:petal:3>;
val yellowMysticalPetal = <Botania:petal:4>;
val limeMysticalPetal = <Botania:petal:5>;
val pinkMysticalPetal = <Botania:petal:6>;
val grayMysticalPetal = <Botania:petal:7>;
val lightGrayMysticalPetal = <Botania:petal:8>;
val cyanMysticalPetal = <Botania:petal:9>;
val purpleMysticalPetal = <Botania:petal:10>;
val blueMysticalPetal = <Botania:petal:11>;
val brownMysticalPetal = <Botania:petal:12>;
val greenMysticalPetal = <Botania:petal:13>;
val redMysticalPetal = <Botania:petal:14>;
val blackMysticalPetal = <Botania:petal:15>;

##BTN Mana Petals
val whiteManaPetal = <Botania:manaPetal>;
val orangeManaPetal = <Botania:manaPetal:1>;
val magentaManaPetal = <Botania:manaPetal:2>;
val lightBlueManaPetal = <Botania:manaPetal:3>;
val yellowManaPetal = <Botania:manaPetal:4>;
val limeManaPetal = <Botania:manaPetal:5>;
val pinkManaPetal = <Botania:manaPetal:6>;
val grayManaPetal = <Botania:manaPetal:7>;
val lightGrayManaPetal = <Botania:manaPetal:8>;
val cyanManaPetal = <Botania:manaPetal:9>;
val purpleManaPetal = <Botania:manaPetal:10>;
val blueManaPetal = <Botania:manaPetal:11>;
val brownManaPetal = <Botania:manaPetal:12>;
val greenManaPetal = <Botania:manaPetal:13>;
val redManaPetal = <Botania:manaPetal:14>;
val blackManaPetal = <Botania:manaPetal:15>;

##BTN Runes
val runeOfWater = <Botania:rune>;
val runeOfFire = <Botania:rune:1>;
val runeOfEarth = <Botania:rune:2>;
val runeOfAir = <Botania:rune:3>;
val runeOfSpring = <Botania:rune:4>;
val runeOfSummer = <Botania:rune:5>;
val runeOfAutumn = <Botania:rune:6>;
val runeOfWinter = <Botania:rune:7>;
val runeOfMana = <Botania:rune:8>;
val runeOfLust = <Botania:rune:9>;
val runeOfGluttony = <Botania:rune:10>;
val runeOfGreed = <Botania:rune:11>;
val runeOfSloth = <Botania:rune:12>;
val runeOfWrath = <Botania:rune:13>;
val runeOfEnvy = <Botania:rune:14>;
val runeOfPride = <Botania:rune:15>;

##Minecraft
val slimeBall = <minecraft:slime_ball>;
val lavaBucket = <minecraft:lava_bucket>;
val ironIngot = <minecraft:iron_ingot>;
val goldIngot = <minecraft:gold_ingot>;
val ironPick = <minecraft:iron_pickaxe>;
val woodPlankAll = <minecraft:planks:*>;
val woolAll = <minecraft:wool:*>;
val compass = <minecraft:compass>;
val lever = <minecraft:lever>;
val glass = <minecraft:glass>;
val logAll = <minecraft:log:*>;
val snowball = <minecraft:snowball>;
val powderBlaze = <minecraft:blaze_powder>;
val redstone = <minecraft:redstone>;
val waterBottle = <minecraft:potion>;
val oakSapling = <minecraft:sapling>;
val enderPearl = <minecraft:ender_pearl>;
val nuggetGold = <minecraft:gold_nugget>;
val blazePowder = <minecraft:blaze_powder>;

##MC Dyes
val inkSac = <minecraft:dye>;
val roseRed = <minecraft:dye:1>;
val cactusGreen = <minecraft:dye:2>;
val cocoaBeans = <minecraft:dye:3>;
val lapisLazuli = <minecraft:dye:4>;
val purpleDye = <minecraft:dye:5>;
val cyanDye = <minecraft:dye:6>;
val lightGrayDye = <minecraft:dye:7>;
val grayDye = <minecraft:dye:8>;
val pinkDye = <minecraft:dye:9>;
val limeDye = <minecraft:dye:10>;
val dandelionYellow = <minecraft:dye:11>;
val lightBlueDye = <minecraft:dye:12>;
val magentaDye = <minecraft:dye:13>;
val orangeDye = <minecraft:dye:14>;
val boneMeal = <minecraft:dye:15>;

##Witchery
val waterArtichokeSeeds = <witchery:seedsartichoke>; 
val belladonnaSeeds = <witchery:seedsbelladonna>;
val mandrakeSeeds = <witchery:seedsmandrake>;
val minedrakeBulb = <witchery:seedsmindrake>;
val snowbellSeeds = <witchery:seedssnowbell>;
val wormwoodSeeds = <witchery:seedswormwood>; 
val seepingShoes = <witchery:seepingshoes>;
val poppetshelfCompass = <witchery:shelfcompass>;  
val snowbell = <witchery:snowbell>; 
val wispyCotton =  <witchery:somniancotton>; 
val spanishMoss = <witchery:spanishmoss>;
val spectralStone = <witchery:spectralstone>;
val spinningWheel = <witchery:spinningwheel>; 
val flowingSpirit = <witchery:spiritflowing>; 
val spiritPortal = <witchery:spiritportal>;
val alderStairs = <witchery:stairswoodalder>;
val hawthornStairs = <witchery:stairswoodhawthorn>; 
val rowanStairs = <witchery:stairswoodrowan>;
val statueoftheGoddess = <witchery:statuegoddess>;
val statueofhobgoblinPatron = <witchery:statueofworship>; 
val oakStockade = <witchery:stockade>;  
val taglockKit = <witchery:taglockkit>;
val tormentPortal = <witchery:tormentportal>; 
val tormentStone = <witchery:tormentstone>; 
val trentEffigy = <witchery:trent>;
val voidBramble = <witchery:voidbramble>;
val wickerBundle = <witchery:wickerbundle>;
val witchesOvenBurning =  <witchery:witchesovenburning>;
val witchesOven =  <witchery:witchesovenidle>;
val witchHand = <witchery:witchhand>; 
val witchesHat = <witchery:witchhat>;
val rowanLeaves = <witchery:witchleaves>;  
val rowanWood = <witchery:witchlog>;
val witchesRobes = <witchery:witchrobe>;
val rowanSapling = <witchery:witchsapling>;  
val witchLadder = <witchery:witchsladder>; 
val rowanPlanks = <witchery:witchwood>;
val rowanSlabDouble = <witchery:witchwooddoubleslab>; 
val rowanSlab = <witchery:witchwoodslab>; 
val wormwood = <witchery:wormwood>;
val alderWoodDoor = <witchery:alderwooddoor>;
val alluringSkull = <witchery:alluringskull>;
val altar = <witchery:altar>;
val arthana = <witchery:arthana>;
val waterArtichoke = <witchery:artichoke>;
val babaYagasHat = <witchery:babashat>; 
val barkBelt = <witchery:barkbelt>; 
val barrier = <witchery:barrier>;
val belladonna = <witchery:belladonna>; 
val bitingBelt = <witchery:bitingbelt>;
val bloodPoppy = <witchery:bloodrose>; 
val boline = <witchery:boline>;
val enderBramble = <witchery:bramble>;  
val brazier = <witchery:brazier>;
val brewBag = <witchery:brewbag>;
val hollowTearsBucket = <witchery:buckethollowtears>; 
val spiritBucket = <witchery:bucketspirit>; 
val candelabra = <witchery:candelabra>; 
val chalice = <witchery:chalice>;
val goldenChalk = <witchery:chalkheart>;
val infernalChalk = <witchery:chalkinfernal>;
val otherwhereChalk = <witchery:chalkotherwhere>; 
val ritualChalk = <witchery:chalkritual>;  
val heartGlyph = <witchery:circle>;
val infernalGlyph = <witchery:circleglyphinfernal>;
val otherwhereGlyph = <witchery:circleglyphotherwhere>;
val ritualGlyph = <witchery:circleglyphritual>;
val circleTalisman = <witchery:circletalisman>;
val critterSnare = <witchery:crittersnare>;
val crystalBall = <witchery:crystalball>;
val deathsHood = <witchery:deathscowl>;
val deathsFootwear = <witchery:deathsfeet>;
val deathsHand = <witchery:deathshand>;
val deathsRobe = <witchery:deathsrobe>;
val statueBrokenCurses = <witchery:decursedirected>;
val statueOccludedSummons = <witchery:decurseteleport>;
val demonHeart = <witchery:demonheart>;
val devilsTongueCharm = <witchery:devilstonguecharm>;
val distilleryBurning = <witchery:distilleryburning>;
val distillery = <witchery:distilleryidle>;
val lavaDiviner = <witchery:divinerlava>; 
val waterDiviner = <witchery:divinerwater>;
val dreamWeaver = <witchery:dreamcatcher>;
val staffDuplication = <witchery:dupstaff>;
val emberMoss = <witchery:embermoss>;
val filteredFumeFunnel = <witchery:filteredfumefunnel>;
val solid = <witchery:force>;
val fumeFunnel = <witchery:fumefunnel>;
val glintWeed = <witchery:glintweed>;
val glowGlobe = <witchery:glowglobe>;
val Grassper = <witchery:grassper>;
val gulgsGurdle = <witchery:gurdleofgulg>;
val pistolCrossbow = <witchery:handbow>; 
val flowingSpirit = <witchery:hollowtears>;
val witchHunterBoots = <witchery:hunterboots>;
val witchHunterCoat = <witchery:huntercoat>;
val witchHunterHat = <witchery:hunterhat>;
val witchHunterTrousers = <witchery:hunterlegs>;
val spearHuntsman = <witchery:huntsmanspear>;
val icySlippers = <witchery:iceslippers>;
val infinityEgg = <witchery:infinityegg>;
val kettle = <witchery:kettle>;
val kobolditePick = <witchery:kobolditepickaxe>; 
val leapingLily = <witchery:leapinglily>;
val leechChest = <witchery:leechchest>;
val parasyticLouse = <witchery:louse>;
val mandrake = <witchery:mandrake>;
val minedrake = <witchery:mindrake>;
val mutatingSprig = <witchery:mutator>;
val mysticBranch = <witchery:mysticbranch>;
val necromancerRobes = <witchery:necromancerrobe>;
val perpetualIce = <witchery:perpetualice>;
val poppyWebs = <witchery:plantmine>;
val polynesiaCharm = <witchery:polynesiacharm>;
val poppet = <witchery:poppet>;
val poppetShelf = <witchery:poppetshelf>;
val universalAntidote = <witchery:potion>;
val mogsQuiver = <witchery:quiverofmog>;
val refillingChest = <witchery:refillingchest>;
val rowanWoodDoor = <witchery:rowanwooddoor>;
val rubySlippers = <witchery:rubyslippers>;
val scarecrow = <witchery:scarecrow>;
val icyNeedle = <witchery:ingredient:78>;
val frozenHeart = <witchery:ingredient:79>;
val mutandis = <witchery:ingredient:14>;
val poppet = <witchery:poppet>;
val poppetEarth = <witchery:poppet:1>;
val poppetFire = <witchery:poppet:3>;
val poppetDeath = <witchery:poppet:6>;
val chaliceFilled = <witchery:ingredient:1>;
val kobolditeIngot = <witchery:ingredient:150>;
val goldenString = <witchery:ingredient:102>;
val diamondVapor = <witchery:ingredient:29>;
val pureOdour = <witchery:ingredient:36>;
val leatherImpregnated = <witchery:ingredient:72>;
val exhaleHorned = <witchery:ingredient:31>;
val breathGoddess = <witchery:ingredient:32>;
val hintRebirth = <witchery:ingredient:33>;
val mandrakeRoot = <witchery:ingredient:22>;
val woodAsh = <witchery:ingredient:18>;
val quicklime = <witchery:ingredient:16>;
val attunedStone = <witchery:ingredient:10>;
val chargedStone = <witchery:ingredient:11>;
val creeperHeart = <witchery:ingredient:74>;
val batWool = <witchery:ingredient:24>;
val luckDrop = <witchery:ingredient:39>;
val redstoneSoup = <witchery:ingredient:40>;
val candelabra = <witchery:ingredient>;
val whiffOfMagic = <witchery:ingredient:34>;
val oilOfVitriol = <witchery:ingredient:30>;
val breathOfTheGoddess = <witchery:ingredient:32>;
val exhaleOfTheHornedOne = <witchery:ingredient:31>;
val tearOfTheGoddess = <witchery:ingredient:37>;
val gypsum = <witchery:ingredient:17>;
val waterArtichokeGlobe = <witchery:ingredient:69>;

##Recipes
recipes.remove(attunedStone);
recipes.addShaped(attunedStone, [[whiffOfMagic], [manaDiamond], [lavaBucket]]);

mods.botania.Apothecary.removeRecipe("endoFlame");
recipes.addShaped(endoFlame, [[null, null, null], [brownManaPetal, oilOfVitriol, redManaPetal],[null, null, null]]);

mods.botania.ManaInfusion.addInfusion(rowanSapling, oakSapling, 25000);
recipes.remove(altar);
recipes.addShaped(altar * 3, [[breathOfTheGoddess, waterBottle, exhaleOfTheHornedOne], [livingrock, rowanWood, livingrock], [livingrock, rowanWood, livingrock]]);

recipes.remove(ritualChalk);
recipes.addShaped(ritualChalk * 2, [[woodAsh, tearOfTheGoddess, woodAsh], [whiteManaPetal, gypsum, whiteManaPetal], [woodAsh, gypsum, woodAsh]]);

recipes.remove(otherwhereChalk);
recipes.addShaped(otherwhereChalk * 2, [[waterArtichokeGlobe, manaPearl, waterArtichokeGlobe], [blueManaPetal, ritualChalk, blueManaPetal], [blueManaPetal, ritualChalk, blueManaPetal]]);

recipes.remove(infernalChalk);
recipes.addShaped(infernalChalk * 2, [[emberMoss, runeOfFire, emberMoss], [redManaPetal, ritualChalk, redManaPetal], [redManaPetal, ritualChalk, redManaPetal]]);

recipes.remove(goldenChalk);
recipes.addShaped(goldenChalk, [[nuggetGold, nuggetGold, nuggetGold], [yellowManaPetal, ritualChalk, yellowManaPetal], [yellowManaPetal, redstone, yellowManaPetal]]);

recipes.remove(runicAltar);
recipes.addShaped(runicAltar, [[livingrock, livingrock, livingrock], [livingrock, chargedStone, livingrock], [null, null, null]]);

recipes.remove(circleTalisman);
recipes.addShaped(circleTalisman, [[nuggetGold, goldIngot, nuggetGold],[goldIngot, manaDiamond,  goldIngot],[nuggetGold, goldIngot, nuggetGold]]);
//Keep this at the bottom
print("Botania - Witchery Loaded");
