//XU
val genSurvivalist = <ExtraUtilities:generator>;
val genFurnace = <ExtraUtilities:generator:1>;
val genLava = <ExtraUtilities:generator:2>;
val genEnder = <ExtraUtilities:generator:3>;
val genRedstoneHeated = <ExtraUtilities:generator:4>;
val genCulinary = <ExtraUtilities:generator:5>;
val genPotions = <ExtraUtilities:generator:6>;
val genSolar = <ExtraUtilities:generator:7>;
val genTNT = <ExtraUtilities:generator:8>;
val genPink = <ExtraUtilities:generator:9>;
val genHighTemp = <ExtraUtilities:generator:10>;
val genNetherStar = <ExtraUtilities:generator:11>;
val postTrading = <ExtraUtilities:trading_post>;
val nodeItem = <ExtraUtilities:extractor_base>;
val nodeLiquid = <ExtraUtilities:extractor_base:6>;
val nodeEnergy = <ExtraUtilities:extractor_base:12>;
val pipeTransfer = <ExtraUtilities:pipes>;
val pipeSorting = <ExtraUtilities:pipes:8>;
val pipeFilter = <ExtraUtilities:pipes:9>;
val pipeRationing = <ExtraUtilities:pipes:10>;
val pipeEnergy = <ExtraUtilities:pipes:11>;
val pipeCrossover = <ExtraUtilities:pipes:12>;
val pipeSortingMod = <ExtraUtilities:pipes:13>;
val pipeEnergyExtraction = <ExtraUtilities:pipes:14>;
val pipeRationingHyper = <ExtraUtilities:pipes.1>;
val nodeItemRetrieval = <ExtraUtilities:extractor_base_remote>;
val nodeLiquidRetrieval = <ExtraUtilities:extractor_base_remote:6>;
val canWatering = <ExtraUtilities:watering_can:1>;

//Mek
val armoredJetpack = <Mekanism:ArmoredJetpack>;
val atomicDisassembler = <Mekanism:AtomicDisassembler>;
val BalloonBlack = <Mekanism:Balloon>;
val BalloonRed = <Mekanism:Balloon:1>;
val BalloonGreen = <Mekanism:Balloon:2>;
val BalloonBrown = <Mekanism:Balloon:3>;
val BalloonBlue = <Mekanism:Balloon:4>;
val BalloonPurple = <Mekanism:Balloon:5>;
val BalloonCyan = <Mekanism:Balloon:6>;
val BalloonGreyLight = <Mekanism:Balloon:7>;
val BalloonGrey = <Mekanism:Balloon:8>;
val BalloonPink = <Mekanism:Balloon:9>;
val BalloonLime = <Mekanism:Balloon:10>;
val BalloonYellow = <Mekanism:Balloon:11>;
val BalloonBlueLight = <Mekanism:Balloon:12>;
val BalloonMagenta = <Mekanism:Balloon:13>;
val BalloonOrange = <Mekanism:Balloon:14>;
val BalloonWhite = <Mekanism:Balloon:15>;
val BalloonsAll = <Mekanism:Balloon:*>;
val osmiumBlock = <Mekanism:BasicBlock>;
val salinationBlock = <Mekanism:BasicBlock2>;
val mekBiofuel = <Mekanism:BioFuel>;
val boundingBlock = <Mekanism:BoundingBlock>;
val brineBucket = <Mekanism:BrineBucket>;
val cardboardBox = <Mekanism:CardboardBox>;
val oreClump = <Mekanism:Clump>;
val compressedCarbon = <Mekanism:CompressedCarbon>;
val compressedDiamond = <Mekanism:CompressedDiamond>;
val compressedObsidian = <Mekanism:CompressedObsidian>;
val compressedRedstone = <Mekanism:CompressedRedstone>;
val configurator = <Mekanism:Configurator>;
val controlCircuit = <Mekanism:ControlCircuit>;
val controlCircuitAdv = <Mekanism:ControlCircuit:1>;
val controlCircuitElite = <Mekanism:ControlCircuit:2>;
val controlCircuitUltimate = <Mekanism:ControlCircuit:3>;
val controlCircuitAll = <Mekanism:ControlCircuit:*>;
val oreCrystal = <Mekanism:Crystal>;
val dictionary = <Mekanism:Dictionary>;
val oreDirtyDust = <Mekanism:DirtyDust>;
val oreDust = <Mekanism:Dust>;
val electricBow = <Mekanism:ElectricBow>;
val electrolyticCore = <Mekanism:ElectrolyticCore>;
val energyCube = <Mekanism:EnergyCube>;
val energyTablet = <Mekanism:EnergyTablet>;
val energyUpgrade = <Mekanism:EnergyUpgrade>;
val enrichedAlloy = <Mekanism:EnrichedAlloy>;
val enrichedIron = <Mekanism:EnrichedIron>;
val filterCard = <Mekanism:FilterCard>;
val frictionBoots = <Mekanism:FrictionBoots>;
val gasMask = <Mekanism:GasMask>;
val gasTank = <Mekanism:GasTank>;
val glowPanel = <Mekanism:GlowPanel>;
val glowPlasticBlock = <Mekanism:GlowPlasticBlock>;
val ingot = <Mekanism:Ingot>;
val mekItemProxy = <Mekanism:ItemProxy>;
val jetpack = <Mekanism:Jetpack>;
val enrichmentChamber = <Mekanism:MachineBlock>;
val rotaryCondensentrator = <Mekanism:MachineBlock2>;
val networkReader = <Mekanism:NetworkReader>;
val obsidianTNT = <Mekanism:ObsidianTNT>;
val oreBlock = <Mekanism:OreBlock>;
val cable = <Mekanism:PartTransmitter>;
val plasticBlock = <Mekanism:PlasticBlock>;
val plasticFence = <Mekanism:PlasticFence>;
val hdpePellet = <Mekanism:Polyethene>;
val portableTeleporter = <Mekanism:PortableTeleporter>;
val reinforcedAlloy = <Mekanism:ReinforcedAlloy>;
val reinforcedPlasticBlock = <Mekanism:ReinforcedPlasticBlock>;
val roadPlasticBlock = <Mekanism:RoadPlasticBlock>;
val robit = <Mekanism:Robit>;
val salt = <Mekanism:Salt>;
val saltBlock = <Mekanism:SaltBlock>;
val sawdust = <Mekanism:Sawdust>;
val scubaTank = <Mekanism:ScubaTank>;
val seismicReader = <Mekanism:SeismicReader>;
val oreShard = <Mekanism:Shard>;
val slickPlasticBlock = <Mekanism:SlickPlasticBlock>;
val speedUpgrade = <Mekanism:SpeedUpgrade>;
val substrate = <Mekanism:Substrate>;
val teleportationCore = <Mekanism:TeleportationCore>;
val walkieTalkie = <Mekanism:WalkieTalkie>;
val heatGenerator = <MekanismGenerators:Generator>;
val solarPanel = <MekanismGenerators:SolarPanel>;
val bronzeAxe = <MekanismTools:BronzeAxe>;
val bronzeBoots = <MekanismTools:BronzeBoots>;
val bronzeChestplate = <MekanismTools:BronzeChestplate>;
val bronzeHelmet = <MekanismTools:BronzeHelmet>;
val bronzeHoe = <MekanismTools:BronzeHoe>;
val bronzeLeggings = <MekanismTools:BronzeLeggings> ;
val bronzePaxel = <MekanismTools:BronzePaxel>;
val bronzePick = <MekanismTools:BronzePickaxe>;
val bronzeShovel = <MekanismTools:BronzeShovel>;
val bronzeSword = <MekanismTools:BronzeSword>;
val diamondPaxel = <MekanismTools:DiamondPaxel>;
val glowstoneAxe = <MekanismTools:GlowstoneAxe>;
val glowstoneBoots = <MekanismTools:GlowstoneBoots>;
val glowstoneChestplate = <MekanismTools:GlowstoneChestplate>;
val glowstoneHelmet = <MekanismTools:GlowstoneHelmet>;
val glowstoneHoe = <MekanismTools:GlowstoneHoe>;
val glowstoneLeggings = <MekanismTools:GlowstoneLeggings> ;
val glowstonePaxel = <MekanismTools:GlowstonePaxel>;
val glowstonePick = <MekanismTools:GlowstonePickaxe>;
val glowstoneShovel = <MekanismTools:GlowstoneShovel>;
val glowstoneSword = <MekanismTools:GlowstoneSword>;
val ironPaxel = <MekanismTools:IronPaxel>;
val lapisLazuliAxe = <MekanismTools:LapisLazuliAxe>;
val lapisLazuliBoots = <MekanismTools:LapisLazuliBoots>;
val lapisLazuliChestplate = <MekanismTools:LapisLazuliChestplate>;
val lapisLazuliHelmet = <MekanismTools:LapisLazuliHelmet>;
val lapisLazuliHoe = <MekanismTools:LapisLazuliHoe>;
val lapisLazuliLeggings = <MekanismTools:LapisLazuliLeggings> ;
val lapisLazuliPaxel = <MekanismTools:LapisLazuliPaxel>;
val lapisLazuliPick = <MekanismTools:LapisLazuliPickaxe>;
val lapisLazuliShovel = <MekanismTools:LapisLazuliShovel>;
val lapisLazuliSword = <MekanismTools:LapisLazuliSword>;
val obsidianAxe = <MekanismTools:ObsidianAxe>;
val obsidianBoots = <MekanismTools:ObsidianBoots>;
val obsidianChestplate = <MekanismTools:ObsidianChestplate>;
val obsidianHelmet = <MekanismTools:ObsidianHelmet>;
val obsidianHoe = <MekanismTools:ObsidianHoe>;
val obsidianLeggings = <MekanismTools:ObsidianLeggings> ;
val obsidianPaxel = <MekanismTools:ObsidianPaxel>;
val obsidianPick = <MekanismTools:ObsidianPickaxe>;
val obsidianShovel = <MekanismTools:ObsidianShovel>;
val obsidianSword = <MekanismTools:ObsidianSword>;
val osmiumAxe = <MekanismTools:OsmiumAxe>;
val osmiumBoots = <MekanismTools:OsmiumBoots>;
val osmiumChestplate = <MekanismTools:OsmiumChestplate>;
val osmiumHelmet = <MekanismTools:OsmiumHelmet>;
val osmiumHoe = <MekanismTools:OsmiumHoe>;
val osmiumLeggings = <MekanismTools:OsmiumLeggings> ;
val osmiumPaxel = <MekanismTools:OsmiumPaxel>;
val osmiumPick = <MekanismTools:OsmiumPickaxe>;
val osmiumShovel = <MekanismTools:OsmiumShovel>;
val osmiumSword = <MekanismTools:OsmiumSword>;
val steelAxe = <MekanismTools:SteelAxe>;
val steelBoots = <MekanismTools:SteelBoots>;
val steelChestplate = <MekanismTools:SteelChestplate>;
val steelHelmet = <MekanismTools:SteelHelmet>;
val steelHoe = <MekanismTools:SteelHoe>;
val steelLeggings = <MekanismTools:SteelLeggings> ;
val steelPaxel = <MekanismTools:SteelPaxel>;
val steelPick = <MekanismTools:SteelPickaxe>;
val steelShovel = <MekanismTools:SteelShovel>;
val steelSword = <MekanismTools:SteelSword>;
val stonePaxel = <MekanismTools:StonePaxel>;
val woodPaxel = <MekanismTools:WoodPaxel>;

//Minecraft
val ironIngot = <minecraft:iron_ingot>;
val pressurePlateHeavy = <minecraft:heavy_weighted_pressure_plate>;
val boneMeal = <minecraft:dye:15>;
val bucket = <minecraft:bucket>;

//Recipes
recipes.remove(canWatering);

recipes.addShaped(canWatering, [[ironIngot, boneMeal, null], [ironIngot, bucket, ironIngot], [null, pressurePlateHeavy, null]]);
