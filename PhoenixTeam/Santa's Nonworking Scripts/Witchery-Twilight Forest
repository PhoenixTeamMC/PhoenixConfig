##This is not yet complete.

##Witchery
val waterArtichokeSeeds = <witchery:seedsartichoke>; 
val belladonnaSeeds = <witchery:seedsbelladonna>;
val mandrakeSeeds = <witchery:seedsmandrake>;
val minedrakeBulb = <witchery:seedsmindrake>;
val snowbellSeeds = <witchery:seedssnowbell>;
val wormwoodSeeds = <witchery:seedswormwood>; 
val seepingShoes = <witchery:seepingshoes>;
val poppetshelfCompass = <witchery:shelfcompass>;  
val snowbell = <witchery:snowbell>; 
val wispyCotton =  <witchery:somniancotton>; 
val spanishMoss = <witchery:spanishmoss>;
val spectralStone = <witchery:spectralstone>;
val spinningWheel = <witchery:spinningwheel>; 
val flowingSpirit = <witchery:spiritflowing>; 
val spiritPortal = <witchery:spiritportal>;
val alderStairs = <witchery:stairswoodalder>;
val hawthornStairs = <witchery:stairswoodhawthorn>; 
val rowanStairs = <witchery:stairswoodrowan>;
val statueoftheGoddess = <witchery:statuegoddess>;
val statueofhobgoblinPatron = <witchery:statueofworship>; 
val oakStockade = <witchery:stockade>;  
val taglockKit = <witchery:taglockkit>;
val tormentPortal = <witchery:tormentportal>; 
val tormentStone = <witchery:tormentstone>; 
val trentEffigy = <witchery:trent>;
val voidBramble = <witchery:voidbramble>;
val wickerBundle = <witchery:wickerbundle>;
val witchesOvenBurning =  <witchery:witchesovenburning>;
val witchesOven =  <witchery:witchesovenidle>;
val witchHand = <witchery:witchhand>; 
val witchesHat = <witchery:witchhat>;
val rowanLeaves = <witchery:witchleaves>;  
val rowanWood = <witchery:witchlog>;
val witchesRobes = <witchery:witchrobe>;
val rowanSapling = <witchery:witchsapling>;  
val witchLadder = <witchery:witchsladder>; 
val rowanPlanks = <witchery:witchwood>;
val rowanSlabDouble = <witchery:witchwooddoubleslab>; 
val rowanSlab = <witchery:witchwoodslab>; 
val wormwood = <witchery:wormwood>;
val alderWoodDoor = <witchery:alderwooddoor>;
val alluringSkull = <witchery:alluringskull>;
val altar = <witchery:altar>;
val arthana = <witchery:arthana>;
val waterArtichoke = <witchery:artichoke>;
val babaYagasHat = <witchery:babashat>; 
val barkBelt = <witchery:barkbelt>; 
val barrier = <witchery:barrier>;
val belladonna = <witchery:belladonna>; 
val bitingBelt = <witchery:bitingbelt>;
val bloodPoppy = <witchery:bloodrose>; 
val boline = <witchery:boline>;
val enderBramble = <witchery:bramble>;  
val brazier = <witchery:brazier>;
val brewBag = <witchery:brewbag>;
val hollowTearsBucket = <witchery:buckethollowtears>; 
val spiritBucket = <witchery:bucketspirit>; 
val candelabra = <witchery:candelabra>; 
val chalice = <witchery:chalice>;
val goldenChalk = <witchery:chalkheart>;
val infernalChalk = <witchery:chalkinfernal>;
val otherwhereChalk = <witchery:chalkotherwhere>; 
val ritualChalk = <witchery:chalkritual>;  
val heartGlyph = <witchery:circle>;
val infernalGlyph = <witchery:circleglyphinfernal>;
val otherwhereGlyph = <witchery:circleglyphotherwhere>;
val ritualGlyph = <witchery:circleglyphritual>;
val circleTalisman = <witchery:circletalisman>;
val critterSnare = <witchery:crittersnare>;
val crystalBall: <witchery:crystalball>;
val deathsHood = <witchery:deathscowl>;
val deathsFootwear = <witchery:deathsfeet>;
val deathsHand = <witchery:deathshand>;
val deathsRobe = <witchery:deathsrobe>;
val statueBrokenCurses = <witchery:decursedirected>;
val statueOccludedSummons = <witchery:decurseteleport>;
val demonHeart = <witchery:demonheart>;
val devilsTongueCharm = <witchery:devilstonguecharm>;
val distilleryBurning = <witchery:distilleryburning>;
val distillery = <witchery:distilleryidle>;
val lavaDiviner = <witchery:divinerlava>; 
val waterDiviner = <witchery:divinerwater>;
val dreamWeaver = <witchery:dreamcatcher>;
val staffDuplication = <witchery:dupstaff>;
val emberMoss = <witchery:embermoss>;
val filteredFumeFunnel = <witchery:filteredfumefunnel>;
val solid = <witchery:force>;
val fumeFunnel = <witchery:fumefunnel>;
val glintWeed = <witchery:glintweed>;
val glowGlobe = <witchery:glowglobe>;
val Grassper = <witchery:grassper>;
val gulgsGurdle = <witchery:gurdleofgulg>;
val pistolCrossbow = <witchery:handbow>; 
val flowingSpirit = <witchery:hollowtears>;
val witchHunterBoots = <witchery:hunterboots>;
val witchHunterCoat = <witchery:huntercoat>;
val witchHunterHat = <witchery:hunterhat>;
val witchHunterTrousers = <witchery:hunterlegs>;
val spearHuntsman = <witchery:huntsmanspear>;
val icySlippers = <witchery:iceslippers>;
val infinityEgg = <witchery:infinityegg>;
val kettle = <witchery:kettle>;
val kobolditePick = <witchery:kobolditepickaxe>; 
val leapingLily = <witchery:leapinglily>;
val leechChest = <witchery:leechchest>;
val parasyticLouse = <witchery:louse>;
val mandrake = <witchery:mandrake>;
val minedrake = <witchery:mindrake>;
val mutatingSprig = <witchery:mutator>;
val mysticBranch = <witchery:mysticbranch>;
val necromancerRobes = <witchery:necromancerrobe>;
val perpetualIce = <witchery:perpetualice>;
val poppyWebs = <witchery:plantmine>;
val polynesiaCharm = <witchery:polynesiacharm>;
val poppet = <witchery:poppet>;
val poppetShelf = <witchery:poppetshelf>;
val universalAntidote = <witchery:potion>;
val mogsQuiver = <witchery:quiverofmog>;
val refillingChest = <witchery:refillingchest>;
val rowanWoodDoor = <witchery:rowanwooddoor>;
val rubySlippers = <witchery:rubyslippers>;
val scarecrow = <witchery:scarecrow>;
val icyNeedle = <witchery:ingredient:78>;
val frozenHeart = <witchery:ingredient:79>;
val mutandis = <witchery:ingredient:14>;
val poppet = <witchery:poppet>;
val poppetEarth = <witchery:poppet:1>;
val poppetFire = <witchery:poppet:3>;
val poppetDeath = <witchery:poppet:6>;
val chaliceFilled = <witchery:ingredient:1>;
val kobolditeIngot = <witchery:ingredient:150>;
val goldenString = <witchery:ingredient:102>;
val diamondVapor = <witchery:ingredient:29>;
val pureOdour = <witchery:ingredient:36>;
val leatherImpregnated = <witchery:ingredient:72>;
val exhaleHorned = <witchery:ingredient:31>;
val breathGoddess = <witchery:ingredient:32>;
val hintRebirth = <witchery:ingredient:33>;
val mandrakeRoot = <witchery:ingredient:22>;
val woodAsh = <witchery:ingredient:18>;
val quicklime = <witchery:ingredient:16>;
val attunedStone = <witchery:ingredient:10>;
val chargedStone = <witchery:ingredient:11>;
val creeperHeart = <witchery:ingredient:74>;
val batWool = <witchery:ingredient:24>;
val luckDrop = <witchery:ingredient:39>;
val redstoneSoup = <witchery:ingredient:40>;
val candelabra = <witchery:ingredient>;


##Twilight Forest
val alphaFur = <TwilightForest:alphaFur>;
val arcticBoots = <TwilightForest:arcticBoots>;
val arcticFur = <TwilightForest:arcticFur>;
val arcticHelm = <TwilightForest:arcticHelp>;
val arcticLegs = <TwilightForest:arcticLegs>;
val arcticPlate = <TwilightForest:arcticPlate>;
val armorShards = <TwilightForest:armorShards>;
val borerEssence = <TwilightForest:borerEssence>;
val carminite = <TwilightForest:carminite>;
val charmOfKeeping1 = <TwilightForest:charmOfKeeping1>;
val charmOfKeeping2 = <TwilightForest:charmOfKeeping2>;
val charmOfKeeping3 = <TwilightForest:charmOfKeeping3>;
val charmOfLife1 = <TwilightForest:charmOfLife1>;
val charmOfLife2 = <TwilightForest:charmOfLife2>;
val crumbleHorn = <TwilightForest:crumbleHorn>;
val emptyMagicMap = <TwilightForest:emptyMagicMap>;
val emptyMazeMap = <TwilightForest:emptyMazeMap>;
val emptyOreMap = <TwilightForest:emptyOreMap>;
val experiment115 = <TwilightForest:experiment115>;
val fieryBlood = <TwilightForest:fieryBlood>;
val fieryBoots = <TwilightForest:fieryBoots>;
val fieryHelm = <TwilightForest:fieryHelm>;
val fieryIngot = <TwilightForest:fieryIngot>;
val fieryLegs = <TwilightForest:fieryLegs>;
val fieryPick = <TwilightForest:fieryPick>;
val fieryPlate = <TwilightForest:fieryPlate>;
val fierySword = <TwilightForest:fierySword>;
val fieryTears = <TwilightForest:fieryTears>;
val hydraChop = <TwilightForest:hydraChop>;
val iceBomb = <TwilightForest:iceBomb>;
val ironwoodAxe = <TwilightForest:ironwoodAxe>;
val ironwoodBoots = <TwilightForest:ironwoodBoots>;
val ironwoodHelm = <TwilightForest:ironwoodHelm>;
val ironwoodHoe = <TwilightForest:ironwoodHoe>;
val ironwoodIngot = <TwilightForest:ironwoodIngot>;
val ironwoodLegs = <TwilightForest:ironwoodLegs>;
val ironwoodPick = <TwilightForest:ironwoodPick>;
val ironwoodPlate = <TwilightForest:ironwoodPlate>;
val ironwoodRaw = <TwilightForest:ironwoodRaw>;
val ironwoodShovel = <TwilightForest:ironwoodShovel>;
val ironwoodSword = <TwilightForest:ironwoodSword>;
val knightMetal = <TwilightForest:knightMetal>;
val knightlyAxe = <TwilightForest:knightlyAxe>;
val knightlyBoots = <TwilightForest:knightlyBoots>;
val knightlyHelm = <TwilightForest:knightlyHelm>;
val knightlyLegs = <TwilightForest:knightlyLegs>;
val knightlyPick = <TwilightForest:knightlyPick>;
val knightlyPlate = <TwilightForest:knightlyPlate>;
val knightlySword = <TwilightForest:knightlySword>;
val lampOfCinders = <TwilightForest:lampOfCinders>;
val legsNaga = <TwilightForest:legsNaga>;
val liveRoot = <TwilightForest:liveRoot>;
val magicMap = <TwilightForest:magicMap>;
val magicMapFocus = <TwilightForest:magicMapFocus>;
val mazeMap = <TwilightForest:mazeMap>;
val mazeMapFocus = <TwilightForest:mazeMapFocus>;
val mazeWafer = <TwilightForest:mazeWafer>;
val mazebreaker = <TwilightForest:mazebreakerPick>;
val meefRaw = <TwilightForest:meefRaw>;
val meefSteak = <TwilightForest:meefSteak>;
val meefStroganoff = <TwilightForest:meefStroganoff>;
val minotaurAxe = <TwilightForest:minotaurAxe>;
val moonwormQueen = <TwilightForest:moonwormQueen>;
val nagaScale = <TwilightForest:nagaScale>;
val oreMagnet = <TwilightForest:oreMagnet>;
val oreMap = <TwilightForest:oreMap>;
val oreMeter = <TwilightForest:oreMeter>;
val peacockFan = <TwilightForest:peacockFan>;
val phantomHelm = <TwilightForest:phantomHelm>;
val phantomPlate = <TwilightForest:phantomPlate>;
val plateNaga = <TwilightForest:plateNaga>;
val scepterLifeDrain = <TwilightForest:scepterLifeDrain>;
val scepterTwilight = <TwilightForest:scepterTwilight>;
val scepterZombie = <TwilightForest:scepterZombie>;
val armorShardCluster = <TwilightForest:shardCluster>;
val steeleafAxe = <TwilightForest:steeleafAxe>;
val steeleafBoots = <TwilightForest:steeleafBoots>;
val steeleafHelm = <TwilightForest:steeleafHelm>;
val steeleafHoe = <TwilightForest:steeleafHoe>;
val steeleafIngot = <TwilightForest:steeleafIngot>;
val steeleafLegs = <TwilightForest:steeleafLegs>;
val steeleafPick = <TwilightForest:steeleafPick>;
val steeleafPlate = <TwilightForest:steeleafPlate>;
val steeleafShovel = <TwilightForest:steeleafShovel>;
val steeleafSword = <TwilightForest:steeleafSword>;
val ravenFeather = <TwilightForest:tfFeather>;
val torchberries = <TwilightForest:torchberries>;
val towerKey = <TwilightForest:towerKey>;
val transformPowder = <TwilightForest:transformPowder>;
val trophy = <TwilightForest:trophy>;
val venisonCooked = <TwilightForest:venisonCooked>;
val venisonRaw = <TwilightForest:venisonRaw>;
val yetiBoots = <TwilightForest:yetiBoots>;
val yetiHelm = <TwilightForest:yetiHelm>;
val yetiLegs = <TwilightForest:yetiLegs>;
val yetiPlate = <TwilightForest:yetiPlate>;
val AuroraDoubleSlab = <TwilightForest:AuroraDoubleSlab>;
val AuroraPillar = <TwilightForest:AuroraPillar>;
val AuroraSlab = <TwilightForest:AuroraSlab>;
val DarkLeaves = <TwilightForest:DarkLeaves>;
val AuroraBrick = <TwilightForest:TFAuroraBrick>;
val BurntThorns = <TwilightForest:TFBurntThorns>;
val Cicada = <TwilightForest:TFCicada>;
val Deadrock = <TwilightForest:TFDeadrock>;
val FireJet = <TwilightForest:TFFireJet>;
val Firefly = <TwilightForest:TFFirefly>;
val FireflyJar = <TwilightForest:TFFireflyJar>;
val Hedge = <TwilightForest:TFHedge>;
val Leaves = <TwilightForest:TFLeaves>;
val Leaves3 = <TwilightForest:TFLeaves3>;
val Log = <TwilightForest:TFLog>;
val MagicLeaves = <TwilightForest:TFMagicLeaves>;
val MagicLog = <TwilightForest:TFMagicLog>;
val MagicLogSpecial = <TwilightForest:TFMagicLogSpecial>;
val Mazestone = <TwilightForest:TFMazestone>;
val Moonworm = <TwilightForest:TFMoonworm>;
val Nagastone = <TwilightForest:TFNagastone>;
val Plant = <TwilightForest:TFPlant>;
val Portal = <TwilightForest:TFPortal>;
val Roots = <TwilightForest:TFRoots>;
val Sapling = <TwilightForest:TFSapling>;
val strongholdShield = <TwilightForest:TFShield>;
val ThornRose = <TwilightForest:TFThornRose>;
val Thorns = <TwilightForest:TFThorns>;
val TowerDevice = <TwilightForest:TFTowerDevice>;
val TowerStone = <TwilightForest:TFTowerStone>;
val TowerTranslucent = <TwilightForest:TFTowerTranslucent>;
val Trophy = <TwilightForest:TFTrophy>;
val TrophyPedestal = <TwilightForest:TFTrophyPedestal>;
val UncraftingTable = <TwilightForest:TFUncraftingTable>;
val UnderBrick = <TwilightForest:TFUnderBrick>;
val mayapple = <TwilightForest:TFPlant:4>;

//Witchery Recipes
recipes.remove(lavaDiviner);
recipes.addShaped(lavaDiviner, [[null, fieryBlood, null], [null, waterDiviner, null], [<minecraft:blaze_rod>, null, <minecraft:blaze_rod>]]);

/*
recipes that need changing:
	Frozen Heart to include icy/snowy/yeti materials
	Earth Protection Poppet to include Mayapples
	Fire Protection Poppet to include Fiery Ingots
	Death Protection Poppet to include Charms of Keeping/Life
	Filled Chalice to include a Fiery Blood
Get Candelabra name thingy
	
*/

recipes.addShaped(altar * 6, [[breathGoddess, <minecraft:water_bottle>, exhaleHorned], [Mazestone, witchlog, Mazestone], [Mazestone, witchlog, Mazestone]]);

recipes.remove(kobolditePick);
recipes.addShaped(kobolditePick, [[<minecraft:lava_bucket>, attunedStone, <minecraft:lava_bucket>], [kobolditeIngot, kobolditeIngot, kobolditeIngot], [null, mazebreaker, null]]);

recipes.remove(infernalChalk);
recipes.addShaped(infernalChalk, [[emberMoss, fieryBlood, emberMoss], [<minecraft:red_flower>, ritualChalk, <minecraft:red_flower>], [<minecraft:red_flower>, ritualChalk, <minecraft:red_flower>]]);

recipes.remove(witchesOven);
recipes.addShaped(witchesOven, [[null, <minecraft:bucket>, null], [<minecraft:iron_ingot>, <minecraft:iron_ingot>, <minecraft:iron_ingot>], [ironwoodIngot, <minecraft:iron_bars>, ironwoodIngot]]);

recipes.remove(statueoftheGoddess);
recipes.addShaped(statueoftheGoddess, [[<minecraft:nether_star>, <minecraft:stone>, <minecraft:nether_star>], [<minecraft:nether_star>, demonHeart, <minecraft:nether_star>], [<minecraft:stone>, TrophyPedestal, <minecraft:stone>]]);

recipes.addShaped(candelabra, [[torchberries, torchberries, torchberries], [<minecraft:iron_ingot>, attunedStone, <minecraft:iron_ingot>], [null, <minecraft:iron_ingot>, null]]);

//Keep this at the bottom
print("Witchery-Twilight Forest Script Loaded");
